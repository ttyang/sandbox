# copyright John Maddock 2008
# Distributed under the Boost Software License, Version 1.0. 
# (See accompanying file LICENSE_1_0.txt or copy at 
# http://www.boost.org/LICENSE_1_0.txt.

import modules ;
import path ;

local ntl-path = [ modules.peek : NTL_PATH ] ;
local gmp_path = [ modules.peek : GMP_PATH ] ;
local mpfr_path = [ modules.peek : MPFR_PATH ] ;

project : requirements 
   <include>$(gmp_path) 
   <include>$(gmp_path)/mpfr 
   <include>$(gmp_path)/gmpfrxx 
   <include>$(mpfr_path)
   <include>../../.. 
   <search>$(gmp_path) 
   <search>$(mpfr_path) 
   <search>$(mpfr_path)/build.vc10/lib/Win32/Debug
   <toolset>msvc:<runtime-link>static
   ;

lib gmp ;
lib mpfr ;

run test_arithmetic.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_BACKEND
        : test_arithmetic_backend_concept ;

run test_arithmetic.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_arithmetic_mp_float ;

run test_arithmetic.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_arithmetic_mpf50 ;

run test_arithmetic.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_arithmetic_mpf ;

run test_arithmetic.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPZ
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_arithmetic_mpz ;

run test_arithmetic.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPQ
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_arithmetic_mpq ;

run test_arithmetic.cpp mpfr gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_arithmetic_mpfr ;

run test_arithmetic.cpp mpfr gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_arithmetic_mpfr_50 ;

run test_numeric_limits.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_BACKEND
        : test_numeric_limits_backend_concept ;

run test_numeric_limits.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_numeric_limits_mpf50 ;

run test_numeric_limits.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_numeric_limits_mpf ;

run test_numeric_limits.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPZ
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_numeric_limits_mpz ;

run test_numeric_limits.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPQ
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_numeric_limits_mpq ;

run test_numeric_limits.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_numeric_limits_mpfr ;

run test_numeric_limits.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_numeric_limits_mpfr_50 ;

run test_numeric_limits.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_numeric_limits_mp_float ;

run mp_number_concept_check.cpp  mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : big_number_concept_check_mpfr_50 ;

run mp_number_concept_check.cpp  gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : big_number_concept_check_mpf50 ;

run mp_number_concept_check.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : big_number_concept_check_mp_float ;

run test_exp.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_exp_mpf50 ;

run test_log.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_log_mpf50 ;

run test_pow.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_pow_mpf50 ;

run test_sinh.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_sinh_mpf50 ;

run test_cosh.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_cosh_mpf50 ;

run test_tanh.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_tanh_mpf50 ;

run test_exp.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_exp_mpfr50 ;

run test_log.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_log_mpfr50 ;

run test_pow.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_pow_mpfr50 ;

run test_sinh.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_sinh_mpfr50 ;

run test_cosh.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_cosh_mpfr50 ;

run test_tanh.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_tanh_mpfr50 ;

run test_exp.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_exp_mp_float ;

run test_log.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_log_mp_float ;

run test_pow.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_pow_mp_float ;

run test_sinh.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_sinh_mp_float ;

run test_cosh.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_cosh_mp_float ;

run test_tanh.cpp 
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_tanh_mp_float ;

run test_sin.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_sin_mp_float ;

run test_sin.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_sin_mpf50 ;

run test_sin.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_sin_mpfr_50 ;

run test_cos.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_cos_mp_float ;

run test_cos.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_cos_mpf50 ;

run test_cos.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_cos_mpfr_50 ;

run test_asin.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_asin_mp_float ;

run test_asin.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_asin_mpf50 ;

run test_asin.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_asin_mpfr_50 ;

run test_acos.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_acos_mp_float ;

run test_acos.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_acos_mpf50 ;

run test_acos.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_acos_mpfr_50 ;

run test_atan.cpp gmp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPF_50
         [ check-target-builds ../config//has_gmp : : <build>no ]
        : test_atan_mpf50 ;

run test_atan.cpp
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MP_FLOAT
        : test_atan_mp_float ;

run test_atan.cpp mpfr
        : # command line
        : # input files
        : # requirements
	      <define>TEST_MPFR_50
         [ check-target-builds ../config//has_mpfr : : <build>no ]
        : test_atan_mpfr_50 ;
