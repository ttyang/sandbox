gmp_float      50        +    0.111016
gmp_float      50        -    0.119562
gmp_float      50        *    0.266947
gmp_float      50        /    1.23608
gmp_float      50        str  0.0299824
gmp_float      50        +(int)0.0320709
gmp_float      50        -(int)0.130453
gmp_float      50        *(int)0.0391224
gmp_float      50        /(int)0.178268
gmp_float      100       +    0.108884
gmp_float      100       -    0.118595
gmp_float      100       *    0.401792
gmp_float      100       /    1.60879
gmp_float      100       str  0.0207461
gmp_float      100       +(int)0.0346436
gmp_float      100       -(int)0.131897
gmp_float      100       *(int)0.0435089
gmp_float      100       /(int)0.23715
gmp_float      500       +    0.143065
gmp_float      500       -    0.151427
gmp_float      500       *    3.22591
gmp_float      500       /    8.09281
gmp_float      500       str  0.136249
gmp_float      500       +(int)0.0567182
gmp_float      500       -(int)0.164247
gmp_float      500       *(int)0.0824826
gmp_float      500       /(int)0.693418
gmp_int        128       +    0.0416325
gmp_int        128       -    0.0409536
gmp_int        128       *    0.0673622
gmp_int        128       /    0.8304
gmp_int        128       str  0.00202218
gmp_int        128       +(int)0.0297328
gmp_int        128       -(int)0.0296573
gmp_int        128       *(int)0.0225369
gmp_int        128       /(int)0.0545672
gmp_int        128       %    0.626244
gmp_int        128       |    0.0491246
gmp_int        128       &    0.0530007
gmp_int        128       ^    0.0485553
gmp_int        128       <<   0.0260055
gmp_int        128       >>   0.0275053
gmp_int        128       %(int)0.0553103
gmp_int        128       |(int)0.14092
gmp_int        128       &(int)0.146717
gmp_int        128       ^(int)0.141446
gmp_int        128       gcd  2.4583
gmp_int        256       +    0.0437202
gmp_int        256       -    0.0449331
gmp_int        256       *    0.128456
gmp_int        256       /    0.91168
gmp_int        256       str  0.00293026
gmp_int        256       +(int)0.0421762
gmp_int        256       -(int)0.0392365
gmp_int        256       *(int)0.0260961
gmp_int        256       /(int)0.101468
gmp_int        256       %    0.686075
gmp_int        256       |    0.0605797
gmp_int        256       &    0.0657431
gmp_int        256       ^    0.0628266
gmp_int        256       <<   0.0309127
gmp_int        256       >>   0.028966
gmp_int        256       %(int)0.0997194
gmp_int        256       |(int)0.141959
gmp_int        256       &(int)0.148873
gmp_int        256       ^(int)0.145267
gmp_int        256       gcd  5.7433
gmp_int        512       +    0.0502054
gmp_int        512       -    0.053661
gmp_int        512       *    0.517967
gmp_int        512       /    1.04166
gmp_int        512       str  0.00589914
gmp_int        512       +(int)0.0648096
gmp_int        512       -(int)0.0579614
gmp_int        512       *(int)0.0336047
gmp_int        512       /(int)0.18882
gmp_int        512       %    0.792461
gmp_int        512       |    0.0862186
gmp_int        512       &    0.0910233
gmp_int        512       ^    0.086449
gmp_int        512       <<   0.0480825
gmp_int        512       >>   0.0323891
gmp_int        512       %(int)0.183615
gmp_int        512       |(int)0.150229
gmp_int        512       &(int)0.154253
gmp_int        512       ^(int)0.156314
gmp_int        512       gcd  13.5018
gmp_int        1024      +    0.065979
gmp_int        1024      -    0.0703067
gmp_int        1024      *    1.51138
gmp_int        1024      /    1.26397
gmp_int        1024      str  0.0145211
gmp_int        1024      +(int)0.105223
gmp_int        1024      -(int)0.0997431
gmp_int        1024      *(int)0.0487139
gmp_int        1024      /(int)0.374919
gmp_int        1024      %    1.02412
gmp_int        1024      |    0.134887
gmp_int        1024      &    0.148173
gmp_int        1024      ^    0.136369
gmp_int        1024      <<   0.0702549
gmp_int        1024      >>   0.037103
gmp_int        1024      %(int)0.351263
gmp_int        1024      |(int)0.155137
gmp_int        1024      &(int)0.163801
gmp_int        1024      ^(int)0.15826
gmp_int        1024      gcd  32.5205
cpp_int        128       +    0.0271391
cpp_int        128       -    0.0302204
cpp_int        128       *    0.0764199
cpp_int        128       /    0.601063
cpp_int        128       str  0.00186546
cpp_int        128       +(int)0.0203604
cpp_int        128       -(int)0.0155424
cpp_int        128       *(int)0.0306376
cpp_int        128       /(int)0.318461
cpp_int        128       %    0.488484
cpp_int        128       |    0.0295702
cpp_int        128       &    0.0299046
cpp_int        128       ^    0.0300509
cpp_int        128       <<   0.0220286
cpp_int        128       >>   0.0208765
cpp_int        128       %(int)0.197942
cpp_int        128       |(int)0.0385046
cpp_int        128       &(int)0.0463351
cpp_int        128       ^(int)0.0381023
cpp_int        128       gcd  4.48165
cpp_int        256       +    0.0354288
cpp_int        256       -    0.03826
cpp_int        256       *    0.193581
cpp_int        256       /    0.694115
cpp_int        256       str  0.00327905
cpp_int        256       +(int)0.0238597
cpp_int        256       -(int)0.0199724
cpp_int        256       *(int)0.040404
cpp_int        256       /(int)0.433035
cpp_int        256       %    0.597931
cpp_int        256       |    0.0378751
cpp_int        256       &    0.0389208
cpp_int        256       ^    0.0381634
cpp_int        256       <<   0.0294239
cpp_int        256       >>   0.0265325
cpp_int        256       %(int)0.298382
cpp_int        256       |(int)0.0425891
cpp_int        256       &(int)0.0550224
cpp_int        256       ^(int)0.0432356
cpp_int        256       gcd  10.1686
cpp_int        512       +    0.0536949
cpp_int        512       -    0.0529947
cpp_int        512       *    0.656832
cpp_int        512       /    0.915068
cpp_int        512       str  0.0076685
cpp_int        512       +(int)0.0262742
cpp_int        512       -(int)0.0223562
cpp_int        512       *(int)0.0537717
cpp_int        512       /(int)0.641615
cpp_int        512       %    0.807811
cpp_int        512       |    0.0523944
cpp_int        512       &    0.04981
cpp_int        512       ^    0.0494246
cpp_int        512       <<   0.0365532
cpp_int        512       >>   0.0304931
cpp_int        512       %(int)0.478772
cpp_int        512       |(int)0.0479629
cpp_int        512       &(int)0.0697964
cpp_int        512       ^(int)0.0466764
cpp_int        512       gcd  25.1877
cpp_int        1024      +    0.0884854
cpp_int        1024      -    0.0822931
cpp_int        1024      *    2.47851
cpp_int        1024      /    1.36697
cpp_int        1024      str  0.0217405
cpp_int        1024      +(int)0.0296193
cpp_int        1024      -(int)0.0246399
cpp_int        1024      *(int)0.0790137
cpp_int        1024      /(int)1.05122
cpp_int        1024      %    1.24204
cpp_int        1024      |    0.0751774
cpp_int        1024      &    0.0745785
cpp_int        1024      ^    0.075182
cpp_int        1024      <<   0.0522035
cpp_int        1024      >>   0.0383751
cpp_int        1024      %(int)0.85137
cpp_int        1024      |(int)0.0549147
cpp_int        1024      &(int)0.101779
cpp_int        1024      ^(int)0.0550852
cpp_int        1024      gcd  69.0626
cpp_int(fixed) 128       +    0.023195
cpp_int(fixed) 128       -    0.0255758
cpp_int(fixed) 128       *    0.0560495
cpp_int(fixed) 128       /    0.20335
cpp_int(fixed) 128       str  0.00107409
cpp_int(fixed) 128       +(int)0.013729
cpp_int(fixed) 128       -(int)0.0103816
cpp_int(fixed) 128       *(int)0.0290285
cpp_int(fixed) 128       /(int)0.134603
cpp_int(fixed) 128       %    0.193104
cpp_int(fixed) 128       |    0.0211746
cpp_int(fixed) 128       &    0.0234269
cpp_int(fixed) 128       ^    0.0214753
cpp_int(fixed) 128       <<   0.0189966
cpp_int(fixed) 128       >>   0.0164431
cpp_int(fixed) 128       %(int)0.111723
cpp_int(fixed) 128       |(int)0.020319
cpp_int(fixed) 128       &(int)0.0281931
cpp_int(fixed) 128       ^(int)0.0205145
cpp_int(fixed) 128       gcd  3.69729
cpp_int(fixed) 256       +    0.0316591
cpp_int(fixed) 256       -    0.0387139
cpp_int(fixed) 256       *    0.162173
cpp_int(fixed) 256       /    0.313292
cpp_int(fixed) 256       str  0.00227396
cpp_int(fixed) 256       +(int)0.0195617
cpp_int(fixed) 256       -(int)0.0153586
cpp_int(fixed) 256       *(int)0.0403434
cpp_int(fixed) 256       /(int)0.256092
cpp_int(fixed) 256       %    0.314303
cpp_int(fixed) 256       |    0.0329594
cpp_int(fixed) 256       &    0.026925
cpp_int(fixed) 256       ^    0.0297291
cpp_int(fixed) 256       <<   0.0262879
cpp_int(fixed) 256       >>   0.0222577
cpp_int(fixed) 256       %(int)0.207915
cpp_int(fixed) 256       |(int)0.0258999
cpp_int(fixed) 256       &(int)0.0409067
cpp_int(fixed) 256       ^(int)0.0260211
cpp_int(fixed) 256       gcd  9.22552
cpp_int(fixed) 512       +    0.0515755
cpp_int(fixed) 512       -    0.0475007
cpp_int(fixed) 512       *    0.462871
cpp_int(fixed) 512       /    0.52874
cpp_int(fixed) 512       str  0.00597122
cpp_int(fixed) 512       +(int)0.0212179
cpp_int(fixed) 512       -(int)0.0179683
cpp_int(fixed) 512       *(int)0.0542558
cpp_int(fixed) 512       /(int)0.459431
cpp_int(fixed) 512       %    0.512737
cpp_int(fixed) 512       |    0.0398115
cpp_int(fixed) 512       &    0.032775
cpp_int(fixed) 512       ^    0.0394438
cpp_int(fixed) 512       <<   0.0317039
cpp_int(fixed) 512       >>   0.0275545
cpp_int(fixed) 512       %(int)0.38701
cpp_int(fixed) 512       |(int)0.0306217
cpp_int(fixed) 512       &(int)0.0539505
cpp_int(fixed) 512       ^(int)0.0308272
cpp_int(fixed) 512       gcd  24.8643
cpp_int(fixed) 1024      +    0.0833072
cpp_int(fixed) 1024      -    0.0864345
cpp_int(fixed) 1024      *    1.61211
cpp_int(fixed) 1024      /    0.965347
cpp_int(fixed) 1024      str  0.0174989
cpp_int(fixed) 1024      +(int)0.0286337
cpp_int(fixed) 1024      -(int)0.0219173
cpp_int(fixed) 1024      *(int)0.0826023
cpp_int(fixed) 1024      /(int)0.855435
cpp_int(fixed) 1024      %    0.944678
cpp_int(fixed) 1024      |    0.071698
cpp_int(fixed) 1024      &    0.0503183
cpp_int(fixed) 1024      ^    0.0721252
cpp_int(fixed) 1024      <<   0.0488381
cpp_int(fixed) 1024      >>   0.0382038
cpp_int(fixed) 1024      %(int)0.760262
cpp_int(fixed) 1024      |(int)0.0426336
cpp_int(fixed) 1024      &(int)0.0863606
cpp_int(fixed) 1024      ^(int)0.0429944
cpp_int(fixed) 1024      gcd  73.4335
cpp_rational   128       +    18.1263
cpp_rational   128       -    18.2374
cpp_rational   128       *    32.3559
cpp_rational   128       /    63.9498
cpp_rational   128       str  0.0199393
cpp_rational   128       +(int)2.67249
cpp_rational   128       -(int)2.66785
cpp_rational   128       *(int)3.1466
cpp_rational   128       /(int)3.13785
cpp_rational   256       +    44.1182
cpp_rational   256       -    43.8659
cpp_rational   256       *    82.4247
cpp_rational   256       /    145.045
cpp_rational   256       str  0.0511907
cpp_rational   256       +(int)3.04309
cpp_rational   256       -(int)3.09023
cpp_rational   256       *(int)3.79056
cpp_rational   256       /(int)3.76931
cpp_rational   512       +    103.169
cpp_rational   512       -    103.481
cpp_rational   512       *    197.198
cpp_rational   512       /    328.069
cpp_rational   512       str  0.118839
cpp_rational   512       +(int)3.83046
cpp_rational   512       -(int)3.74494
cpp_rational   512       *(int)4.93935
cpp_rational   512       /(int)5.06758
cpp_rational   1024      +    244.055
cpp_rational   1024      -    244.887
cpp_rational   1024      *    473.057
cpp_rational   1024      /    784.806
cpp_rational   1024      str  0.285367
cpp_rational   1024      +(int)5.08346
cpp_rational   1024      -(int)5.09156
cpp_rational   1024      *(int)6.89845
cpp_rational   1024      /(int)7.17803
mpq_rational   128       +    3.06312
mpq_rational   128       -    3.08322
mpq_rational   128       *    5.78521
mpq_rational   128       /    14.639
mpq_rational   128       str  0.00368909
mpq_rational   128       +(int)0.670618
mpq_rational   128       -(int)0.673405
mpq_rational   128       *(int)1.16457
mpq_rational   128       /(int)1.38449
mpq_rational   256       +    6.67695
mpq_rational   256       -    6.69018
mpq_rational   256       *    12.6008
mpq_rational   256       /    26.2494
mpq_rational   256       str  0.00598659
mpq_rational   256       +(int)0.717144
mpq_rational   256       -(int)0.707904
mpq_rational   256       *(int)1.22223
mpq_rational   256       /(int)1.46594
mpq_rational   512       +    15.5064
mpq_rational   512       -    15.5321
mpq_rational   512       *    28.6562
mpq_rational   512       /    53.0571
mpq_rational   512       str  0.0119915
mpq_rational   512       +(int)0.823739
mpq_rational   512       -(int)0.815246
mpq_rational   512       *(int)1.34992
mpq_rational   512       /(int)1.57931
mpq_rational   1024      +    37.8546
mpq_rational   1024      -    37.8365
mpq_rational   1024      *    69.1537
mpq_rational   1024      /    120.772
mpq_rational   1024      str  0.028722
mpq_rational   1024      +(int)0.931322
mpq_rational   1024      -(int)0.937541
mpq_rational   1024      *(int)1.4952
mpq_rational   1024      /(int)1.78479
tommath_int    128       +    0.0217192
tommath_int    128       -    0.0291902
tommath_int    128       *    0.111627
tommath_int    128       /    2.08463
tommath_int    128       str  0.0168021
tommath_int    128       +(int)0.257132
tommath_int    128       -(int)0.203455
tommath_int    128       *(int)0.238829
tommath_int    128       /(int)1.59094
tommath_int    128       %    2.85844
tommath_int    128       |    0.129637
tommath_int    128       &    0.131309
tommath_int    128       ^    0.130689
tommath_int    128       <<   0.0401547
tommath_int    128       >>   0.23176
tommath_int    128       %(int)1.79288
tommath_int    128       |(int)0.335087
tommath_int    128       &(int)0.340397
tommath_int    128       ^(int)0.336121
tommath_int    128       gcd  12.105
tommath_int    256       +    0.0314797
tommath_int    256       -    0.0397314
tommath_int    256       *    0.339525
tommath_int    256       /    2.90357
tommath_int    256       str  0.0507118
tommath_int    256       +(int)0.27657
tommath_int    256       -(int)0.218347
tommath_int    256       *(int)0.272846
tommath_int    256       /(int)2.23033
tommath_int    256       %    3.05431
tommath_int    256       |    0.14062
tommath_int    256       &    0.149703
tommath_int    256       ^    0.143938
tommath_int    256       <<   0.0663968
tommath_int    256       >>   0.261181
tommath_int    256       %(int)2.19631
tommath_int    256       |(int)0.344931
tommath_int    256       &(int)0.354773
tommath_int    256       ^(int)0.337315
tommath_int    256       gcd  25.2396
tommath_int    512       +    0.0423742
tommath_int    512       -    0.0520296
tommath_int    512       *    0.974058
tommath_int    512       /    4.55815
tommath_int    512       str  0.123612
tommath_int    512       +(int)0.293832
tommath_int    512       -(int)0.23252
tommath_int    512       *(int)0.325472
tommath_int    512       /(int)3.45058
tommath_int    512       %    4.64676
tommath_int    512       |    0.149674
tommath_int    512       &    0.15487
tommath_int    512       ^    0.150772
tommath_int    512       <<   0.0938596
tommath_int    512       >>   0.289806
tommath_int    512       %(int)3.43906
tommath_int    512       |(int)0.350645
tommath_int    512       &(int)0.364622
tommath_int    512       ^(int)0.347472
tommath_int    512       gcd  54.7712
tommath_int    1024      +    0.0724498
tommath_int    1024      -    0.0774105
tommath_int    1024      *    3.11813
tommath_int    1024      /    11.2594
tommath_int    1024      str  0.380528
tommath_int    1024      +(int)0.329666
tommath_int    1024      -(int)0.261392
tommath_int    1024      *(int)0.41516
tommath_int    1024      /(int)8.38249
tommath_int    1024      %    11.2704
tommath_int    1024      |    0.414581
tommath_int    1024      &    0.417234
tommath_int    1024      ^    0.419285
tommath_int    1024      <<   0.161738
tommath_int    1024      >>   0.495316
tommath_int    1024      %(int)8.45761
tommath_int    1024      |(int)0.587063
tommath_int    1024      &(int)0.613817
tommath_int    1024      ^(int)0.587566
tommath_int    1024      gcd  128.781
cpp_dec_float  50        +    0.0238412
cpp_dec_float  50        -    0.026085
cpp_dec_float  50        *    0.292488
cpp_dec_float  50        /    3.99158
cpp_dec_float  50        str  0.0185371
cpp_dec_float  50        +(int)0.0522868
cpp_dec_float  50        -(int)0.0588879
cpp_dec_float  50        *(int)0.118517
cpp_dec_float  50        /(int)0.246362
cpp_dec_float  100       +    0.0293132
cpp_dec_float  100       -    0.0304546
cpp_dec_float  100       *    0.583535
cpp_dec_float  100       /    8.1132
cpp_dec_float  100       str  0.0318154
cpp_dec_float  100       +(int)0.0626744
cpp_dec_float  100       -(int)0.0638241
cpp_dec_float  100       *(int)0.191461
cpp_dec_float  100       /(int)0.412828
cpp_dec_float  500       +    0.0605518
cpp_dec_float  500       -    0.0625459
cpp_dec_float  500       *    5.08004
cpp_dec_float  500       /    53.775
cpp_dec_float  500       str  0.131303
cpp_dec_float  500       +(int)0.105128
cpp_dec_float  500       -(int)0.113107
cpp_dec_float  500       *(int)0.736865
cpp_dec_float  500       /(int)1.62534
mpfr_float     50        +    0.0604351
mpfr_float     50        -    0.073623
mpfr_float     50        *    0.332216
mpfr_float     50        /    1.65596
mpfr_float     50        str  0.0292843
mpfr_float     50        +(int)0.107103
mpfr_float     50        -(int)0.141072
mpfr_float     50        *(int)0.151189
mpfr_float     50        /(int)0.202945
mpfr_float     100       +    0.0651951
mpfr_float     100       -    0.078328
mpfr_float     100       *    0.462025
mpfr_float     100       /    2.28108
mpfr_float     100       str  0.0379418
mpfr_float     100       +(int)0.112256
mpfr_float     100       -(int)0.146486
mpfr_float     100       *(int)0.160234
mpfr_float     100       /(int)0.256434
mpfr_float     500       +    0.0777324
mpfr_float     500       -    0.089375
mpfr_float     500       *    3.71393
mpfr_float     500       /    13.6039
mpfr_float     500       str  0.156426
mpfr_float     500       +(int)0.123967
mpfr_float     500       -(int)0.158239
mpfr_float     500       *(int)0.265474
mpfr_float     500       /(int)0.709137
[section:float_performance Float Type Perfomance]
[table Operator *
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][1.09568 (0.292488s)][1.45233 (0.583535s)][1.57476 (5.08004s)]]
[[gmp_float][[*1] (0.266947s)][[*1] (0.401792s)][[*1] (3.22591s)]]
[[mpfr_float][1.2445 (0.332216s)][1.14991 (0.462025s)][1.15128 (3.71393s)]]
]
[table Operator *(int)
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][3.02939 (0.118517s)][4.40051 (0.191461s)][8.93358 (0.736865s)]]
[[gmp_float][[*1] (0.0391224s)][[*1] (0.0435089s)][[*1] (0.0824826s)]]
[[mpfr_float][3.8645 (0.151189s)][3.6828 (0.160234s)][3.21855 (0.265474s)]]
]
[table Operator +
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][[*1] (0.0238412s)][[*1] (0.0293132s)][[*1] (0.0605518s)]]
[[gmp_float][4.65648 (0.111016s)][3.71451 (0.108884s)][2.36269 (0.143065s)]]
[[mpfr_float][2.5349 (0.0604351s)][2.22408 (0.0651951s)][1.28374 (0.0777324s)]]
]
[table Operator +(int)
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][1.63035 (0.0522868s)][1.80912 (0.0626744s)][1.85351 (0.105128s)]]
[[gmp_float][[*1] (0.0320709s)][[*1] (0.0346436s)][[*1] (0.0567182s)]]
[[mpfr_float][3.33957 (0.107103s)][3.24031 (0.112256s)][2.18567 (0.123967s)]]
]
[table Operator -
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][[*1] (0.026085s)][[*1] (0.0304546s)][[*1] (0.0625459s)]]
[[gmp_float][4.58354 (0.119562s)][3.89415 (0.118595s)][2.42105 (0.151427s)]]
[[mpfr_float][2.82243 (0.073623s)][2.57196 (0.078328s)][1.42895 (0.089375s)]]
]
[table Operator -(int)
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][[*1] (0.0588879s)][[*1] (0.0638241s)][[*1] (0.113107s)]]
[[gmp_float][2.21528 (0.130453s)][2.06656 (0.131897s)][1.45214 (0.164247s)]]
[[mpfr_float][2.3956 (0.141072s)][2.29515 (0.146486s)][1.39903 (0.158239s)]]
]
[table Operator /
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][3.22921 (3.99158s)][5.04305 (8.1132s)][6.64479 (53.775s)]]
[[gmp_float][[*1] (1.23608s)][[*1] (1.60879s)][[*1] (8.09281s)]]
[[mpfr_float][1.33968 (1.65596s)][1.41789 (2.28108s)][1.68098 (13.6039s)]]
]
[table Operator /(int)
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][1.38197 (0.246362s)][1.74079 (0.412828s)][2.34395 (1.62534s)]]
[[gmp_float][[*1] (0.178268s)][[*1] (0.23715s)][[*1] (0.693418s)]]
[[mpfr_float][1.13843 (0.202945s)][1.08131 (0.256434s)][1.02267 (0.709137s)]]
]
[table Operator str
[[Backend][50 Bits][100 Bits][500 Bits]]
[[cpp_dec_float][[*1] (0.0185371s)][1.53356 (0.0318154s)][[*1] (0.131303s)]]
[[gmp_float][1.61743 (0.0299824s)][[*1] (0.0207461s)][1.03767 (0.136249s)]]
[[mpfr_float][1.57977 (0.0292843s)][1.82886 (0.0379418s)][1.19134 (0.156426s)]]
]
[endsect]
[section:integer_performance Integer Type Perfomance]
[table Operator %
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][2.52964 (0.488484s)][1.9024 (0.597931s)][1.57549 (0.807811s)][1.31477 (1.24204s)]]
[[cpp_int(fixed)][[*1] (0.193104s)][[*1] (0.314303s)][[*1] (0.512737s)][[*1] (0.944678s)]]
[[gmp_int][3.24303 (0.626244s)][2.18285 (0.686075s)][1.54555 (0.792461s)][1.0841 (1.02412s)]]
[[tommath_int][14.8026 (2.85844s)][9.7177 (3.05431s)][9.06266 (4.64676s)][11.9304 (11.2704s)]]
]
[table Operator %(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][3.57875 (0.197942s)][2.99222 (0.298382s)][2.60748 (0.478772s)][2.42374 (0.85137s)]]
[[cpp_int(fixed)][2.01994 (0.111723s)][2.085 (0.207915s)][2.10772 (0.38701s)][2.16437 (0.760262s)]]
[[gmp_int][[*1] (0.0553103s)][[*1] (0.0997194s)][[*1] (0.183615s)][[*1] (0.351263s)]]
[[tommath_int][32.4149 (1.79288s)][22.0249 (2.19631s)][18.7297 (3.43906s)][24.0777 (8.45761s)]]
]
[table Operator &
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.27651 (0.0299046s)][1.44553 (0.0389208s)][1.51976 (0.04981s)][1.48214 (0.0745785s)]]
[[cpp_int(fixed)][[*1] (0.0234269s)][[*1] (0.026925s)][[*1] (0.032775s)][[*1] (0.0503183s)]]
[[gmp_int][2.26238 (0.0530007s)][2.44171 (0.0657431s)][2.77722 (0.0910233s)][2.94472 (0.148173s)]]
[[tommath_int][5.60505 (0.131309s)][5.56001 (0.149703s)][4.72526 (0.15487s)][8.2919 (0.417234s)]]
]
[table Operator &(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.64349 (0.0463351s)][1.34507 (0.0550224s)][1.29371 (0.0697964s)][1.17854 (0.101779s)]]
[[cpp_int(fixed)][[*1] (0.0281931s)][[*1] (0.0409067s)][[*1] (0.0539505s)][[*1] (0.0863606s)]]
[[gmp_int][5.204 (0.146717s)][3.63933 (0.148873s)][2.85915 (0.154253s)][1.8967 (0.163801s)]]
[[tommath_int][12.0738 (0.340397s)][8.67273 (0.354773s)][6.75845 (0.364622s)][7.1076 (0.613817s)]]
]
[table Operator *
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.36344 (0.0764199s)][1.50698 (0.193581s)][1.41904 (0.656832s)][1.6399 (2.47851s)]]
[[cpp_int(fixed)][[*1] (0.0560495s)][1.26247 (0.162173s)][[*1] (0.462871s)][1.06665 (1.61211s)]]
[[gmp_int][1.20183 (0.0673622s)][[*1] (0.128456s)][1.11903 (0.517967s)][[*1] (1.51138s)]]
[[tommath_int][1.99157 (0.111627s)][2.64312 (0.339525s)][2.10438 (0.974058s)][2.0631 (3.11813s)]]
]
[table Operator *(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.35944 (0.0306376s)][1.54828 (0.040404s)][1.60013 (0.0537717s)][1.62199 (0.0790137s)]]
[[cpp_int(fixed)][1.28804 (0.0290285s)][1.54595 (0.0403434s)][1.61453 (0.0542558s)][1.69566 (0.0826023s)]]
[[gmp_int][[*1] (0.0225369s)][[*1] (0.0260961s)][[*1] (0.0336047s)][[*1] (0.0487139s)]]
[[tommath_int][10.5972 (0.238829s)][10.4554 (0.272846s)][9.6853 (0.325472s)][8.5224 (0.41516s)]]
]
[table Operator +
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.24954 (0.0271391s)][1.12545 (0.0354288s)][1.26716 (0.0536949s)][1.34112 (0.0884854s)]]
[[cpp_int(fixed)][1.06795 (0.023195s)][1.0057 (0.0316591s)][1.21714 (0.0515755s)][1.26263 (0.0833072s)]]
[[gmp_int][1.91685 (0.0416325s)][1.38884 (0.0437202s)][1.18481 (0.0502054s)][[*1] (0.065979s)]]
[[tommath_int][[*1] (0.0217192s)][[*1] (0.0314797s)][[*1] (0.0423742s)][1.09807 (0.0724498s)]]
]
[table Operator +(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.48302 (0.0203604s)][1.21971 (0.0238597s)][1.2383 (0.0262742s)][1.03442 (0.0296193s)]]
[[cpp_int(fixed)][[*1] (0.013729s)][[*1] (0.0195617s)][[*1] (0.0212179s)][[*1] (0.0286337s)]]
[[gmp_int][2.16569 (0.0297328s)][2.15606 (0.0421762s)][3.05447 (0.0648096s)][3.67481 (0.105223s)]]
[[tommath_int][18.7291 (0.257132s)][14.1384 (0.27657s)][13.8483 (0.293832s)][11.5132 (0.329666s)]]
]
[table Operator -
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.1816 (0.0302204s)][[*1] (0.03826s)][1.11566 (0.0529947s)][1.17049 (0.0822931s)]]
[[cpp_int(fixed)][[*1] (0.0255758s)][1.01186 (0.0387139s)][[*1] (0.0475007s)][1.22939 (0.0864345s)]]
[[gmp_int][1.60126 (0.0409536s)][1.17441 (0.0449331s)][1.12969 (0.053661s)][[*1] (0.0703067s)]]
[[tommath_int][1.14132 (0.0291902s)][1.03846 (0.0397314s)][1.09534 (0.0520296s)][1.10104 (0.0774105s)]]
]
[table Operator -(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.49712 (0.0155424s)][1.3004 (0.0199724s)][1.2442 (0.0223562s)][1.12422 (0.0246399s)]]
[[cpp_int(fixed)][[*1] (0.0103816s)][[*1] (0.0153586s)][[*1] (0.0179683s)][[*1] (0.0219173s)]]
[[gmp_int][2.85673 (0.0296573s)][2.55469 (0.0392365s)][3.22576 (0.0579614s)][4.55088 (0.0997431s)]]
[[tommath_int][19.5977 (0.203455s)][14.2166 (0.218347s)][12.9406 (0.23252s)][11.9263 (0.261392s)]]
]
[table Operator /
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][2.9558 (0.601063s)][2.21555 (0.694115s)][1.73066 (0.915068s)][1.41604 (1.36697s)]]
[[cpp_int(fixed)][[*1] (0.20335s)][[*1] (0.313292s)][[*1] (0.52874s)][[*1] (0.965347s)]]
[[gmp_int][4.08359 (0.8304s)][2.91 (0.91168s)][1.97009 (1.04166s)][1.30934 (1.26397s)]]
[[tommath_int][10.2514 (2.08463s)][9.26794 (2.90357s)][8.62079 (4.55815s)][11.6636 (11.2594s)]]
]
[table Operator /(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][5.83613 (0.318461s)][4.26769 (0.433035s)][3.39803 (0.641615s)][2.80387 (1.05122s)]]
[[cpp_int(fixed)][2.46673 (0.134603s)][2.52386 (0.256092s)][2.43318 (0.459431s)][2.28165 (0.855435s)]]
[[gmp_int][[*1] (0.0545672s)][[*1] (0.101468s)][[*1] (0.18882s)][[*1] (0.374919s)]]
[[tommath_int][29.1556 (1.59094s)][21.9806 (2.23033s)][18.2745 (3.45058s)][22.3582 (8.38249s)]]
]
[table Operator <<
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.1596 (0.0220286s)][1.11929 (0.0294239s)][1.15296 (0.0365532s)][1.06891 (0.0522035s)]]
[[cpp_int(fixed)][[*1] (0.0189966s)][[*1] (0.0262879s)][[*1] (0.0317039s)][[*1] (0.0488381s)]]
[[gmp_int][1.36896 (0.0260055s)][1.17593 (0.0309127s)][1.51661 (0.0480825s)][1.43853 (0.0702549s)]]
[[tommath_int][2.11378 (0.0401547s)][2.52576 (0.0663968s)][2.96051 (0.0938596s)][3.31171 (0.161738s)]]
]
[table Operator >>
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.26962 (0.0208765s)][1.19206 (0.0265325s)][1.10665 (0.0304931s)][1.03429 (0.0383751s)]]
[[cpp_int(fixed)][[*1] (0.0164431s)][[*1] (0.0222577s)][[*1] (0.0275545s)][1.02967 (0.0382038s)]]
[[gmp_int][1.67276 (0.0275053s)][1.30139 (0.028966s)][1.17546 (0.0323891s)][[*1] (0.037103s)]]
[[tommath_int][14.0947 (0.23176s)][11.7344 (0.261181s)][10.5175 (0.289806s)][13.3498 (0.495316s)]]
]
[table Operator ^
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.39932 (0.0300509s)][1.28371 (0.0381634s)][1.25304 (0.0494246s)][1.04238 (0.075182s)]]
[[cpp_int(fixed)][[*1] (0.0214753s)][[*1] (0.0297291s)][[*1] (0.0394438s)][[*1] (0.0721252s)]]
[[gmp_int][2.26098 (0.0485553s)][2.11331 (0.0628266s)][2.1917 (0.086449s)][1.89072 (0.136369s)]]
[[tommath_int][6.08557 (0.130689s)][4.84167 (0.143938s)][3.82246 (0.150772s)][5.8133 (0.419285s)]]
]
[table Operator ^(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.85734 (0.0381023s)][1.66156 (0.0432356s)][1.51413 (0.0466764s)][1.28122 (0.0550852s)]]
[[cpp_int(fixed)][[*1] (0.0205145s)][[*1] (0.0260211s)][[*1] (0.0308272s)][[*1] (0.0429944s)]]
[[gmp_int][6.89492 (0.141446s)][5.58265 (0.145267s)][5.07065 (0.156314s)][3.68095 (0.15826s)]]
[[tommath_int][16.3846 (0.336121s)][12.9631 (0.337315s)][11.2716 (0.347472s)][13.6661 (0.587566s)]]
]
[table Operator gcd
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.82307 (4.48165s)][1.77052 (10.1686s)][1.8655 (25.1877s)][2.12367 (69.0626s)]]
[[cpp_int(fixed)][1.504 (3.69729s)][1.60631 (9.22552s)][1.84155 (24.8643s)][2.25807 (73.4335s)]]
[[gmp_int][[*1] (2.4583s)][[*1] (5.7433s)][[*1] (13.5018s)][[*1] (32.5205s)]]
[[tommath_int][4.92412 (12.105s)][4.39462 (25.2396s)][4.05657 (54.7712s)][3.96001 (128.781s)]]
]
[table Operator str
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.73678 (0.00186546s)][1.442 (0.00327905s)][1.29994 (0.0076685s)][1.49716 (0.0217405s)]]
[[cpp_int(fixed)][[*1] (0.00107409s)][[*1] (0.00227396s)][1.01222 (0.00597122s)][1.20506 (0.0174989s)]]
[[gmp_int][1.8827 (0.00202218s)][1.28861 (0.00293026s)][[*1] (0.00589914s)][[*1] (0.0145211s)]]
[[tommath_int][15.6431 (0.0168021s)][22.3011 (0.0507118s)][20.9541 (0.123612s)][26.2052 (0.380528s)]]
]
[table Operator |
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.39649 (0.0295702s)][1.14915 (0.0378751s)][1.31606 (0.0523944s)][1.04853 (0.0751774s)]]
[[cpp_int(fixed)][[*1] (0.0211746s)][[*1] (0.0329594s)][[*1] (0.0398115s)][[*1] (0.071698s)]]
[[gmp_int][2.31998 (0.0491246s)][1.83801 (0.0605797s)][2.16567 (0.0862186s)][1.88132 (0.134887s)]]
[[tommath_int][6.12227 (0.129637s)][4.26647 (0.14062s)][3.75956 (0.149674s)][5.78233 (0.414581s)]]
]
[table Operator |(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_int][1.89501 (0.0385046s)][1.64437 (0.0425891s)][1.56631 (0.0479629s)][1.28806 (0.0549147s)]]
[[cpp_int(fixed)][[*1] (0.020319s)][[*1] (0.0258999s)][[*1] (0.0306217s)][[*1] (0.0426336s)]]
[[gmp_int][6.93537 (0.14092s)][5.48104 (0.141959s)][4.90595 (0.150229s)][3.63885 (0.155137s)]]
[[tommath_int][16.4913 (0.335087s)][13.3178 (0.344931s)][11.4509 (0.350645s)][13.7699 (0.587063s)]]
]
[endsect]
[section:rational_performance Rational Type Perfomance]
[table Operator *
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][5.59286 (32.3559s)][6.54125 (82.4247s)][6.8815 (197.198s)][6.84066 (473.057s)]]
[[mpq_rational][[*1] (5.78521s)][[*1] (12.6008s)][[*1] (28.6562s)][[*1] (69.1537s)]]
]
[table Operator *(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][2.70193 (3.1466s)][3.10134 (3.79056s)][3.659 (4.93935s)][4.61372 (6.89845s)]]
[[mpq_rational][[*1] (1.16457s)][[*1] (1.22223s)][[*1] (1.34992s)][[*1] (1.4952s)]]
]
[table Operator +
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][5.91758 (18.1263s)][6.60754 (44.1182s)][6.65334 (103.169s)][6.44717 (244.055s)]]
[[mpq_rational][[*1] (3.06312s)][[*1] (6.67695s)][[*1] (15.5064s)][[*1] (37.8546s)]]
]
[table Operator +(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][3.98512 (2.67249s)][4.24335 (3.04309s)][4.65009 (3.83046s)][5.45832 (5.08346s)]]
[[mpq_rational][[*1] (0.670618s)][[*1] (0.717144s)][[*1] (0.823739s)][[*1] (0.931322s)]]
]
[table Operator -
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][5.91504 (18.2374s)][6.55676 (43.8659s)][6.66239 (103.481s)][6.47224 (244.887s)]]
[[mpq_rational][[*1] (3.08322s)][[*1] (6.69018s)][[*1] (15.5321s)][[*1] (37.8365s)]]
]
[table Operator -(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][3.96173 (2.66785s)][4.36532 (3.09023s)][4.59363 (3.74494s)][5.43075 (5.09156s)]]
[[mpq_rational][[*1] (0.673405s)][[*1] (0.707904s)][[*1] (0.815246s)][[*1] (0.937541s)]]
]
[table Operator /
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][4.36846 (63.9498s)][5.52565 (145.045s)][6.18331 (328.069s)][6.49822 (784.806s)]]
[[mpq_rational][[*1] (14.639s)][[*1] (26.2494s)][[*1] (53.0571s)][[*1] (120.772s)]]
]
[table Operator /(int)
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][2.26643 (3.13785s)][2.57125 (3.76931s)][3.20872 (5.06758s)][4.02177 (7.17803s)]]
[[mpq_rational][[*1] (1.38449s)][[*1] (1.46594s)][[*1] (1.57931s)][[*1] (1.78479s)]]
]
[table Operator str
[[Backend][128 Bits][256 Bits][512 Bits][1024 Bits]]
[[cpp_rational][5.40493 (0.0199393s)][8.55089 (0.0511907s)][9.91026 (0.118839s)][9.93546 (0.285367s)]]
[[mpq_rational][[*1] (0.00368909s)][[*1] (0.00598659s)][[*1] (0.0119915s)][[*1] (0.028722s)]]
]
[endsect]
