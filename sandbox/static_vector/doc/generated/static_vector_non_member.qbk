[/ Generated by doxygen_xml2qbk, don't change, will be overwritten automatically]
[/ Generated from xml/group__static__vector__non__member.xml]
[section:group__static__vector__non__member static_vector non-member functions (boost::container::)]
[heading Functions]
[table
[[Function][Description]]
[[[link group__static__vector__non__member_1ga15ee6a27a72ac7e54851e55098e2c463 `operator==(static_vector<...> const &, static_vector<...> const &)`]][Checks if contents of two static_vectors are equal. ]]
[[[link group__static__vector__non__member_1gacb9b370bfc7d1652821e2b0c96b57a59 `operator!=(static_vector<...> const &, static_vector<...> const &)`]][Checks if contents of two static_vectors are not equal. ]]
[[[link group__static__vector__non__member_1ga60109c1f2d34d115b9eb43a7878fa000 `operator<(static_vector<...> const &, static_vector<...> const &)`]][Lexicographically compares static_vectors. ]]
[[[link group__static__vector__non__member_1ga8223e957e30a57debc636213334634dc `operator>(static_vector<...> const &, static_vector<...> const &)`]][Lexicographically compares static_vectors. ]]
[[[link group__static__vector__non__member_1ga55c998e59f82229852f3452fc3d7626f `operator<=(static_vector<...> const &, static_vector<...> const &)`]][Lexicographically compares static_vectors. ]]
[[[link group__static__vector__non__member_1ga0f02374ff1234b74ba9c68cd5247cd0d `operator>=(static_vector<...> const &, static_vector<...> const &)`]][Lexicographically compares static_vectors. ]]
[[[link group__static__vector__non__member_1gaee8c63afec740b9ce45f5814561988f9 `swap(static_vector<...> &, static_vector<...> &)`]][Swaps contents of two static_vectors. ]]
]

[#group__static__vector__non__member_1ga15ee6a27a72ac7e54851e55098e2c463]
[section operator==(static_vector<...> const &, static_vector<...> const &)]
Checks if contents of two static_vectors are equal. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator==``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if containers have the same size and elements in both containers are equal.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1gacb9b370bfc7d1652821e2b0c96b57a59]
[section operator!=(static_vector<...> const &, static_vector<...> const &)]
Checks if contents of two static_vectors are not equal. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator!=``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if containers have different size or elements in both containers are not equal.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1ga60109c1f2d34d115b9eb43a7878fa000]
[section operator<(static_vector<...> const &, static_vector<...> const &)]
Lexicographically compares static_vectors. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator<``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if x compares lexicographically less than y.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1ga8223e957e30a57debc636213334634dc]
[section operator>(static_vector<...> const &, static_vector<...> const &)]
Lexicographically compares static_vectors. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator>``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if y compares lexicographically less than x.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1ga55c998e59f82229852f3452fc3d7626f]
[section operator<=(static_vector<...> const &, static_vector<...> const &)]
Lexicographically compares static_vectors. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator<=``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if y don't compare lexicographically less than x.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1ga0f02374ff1234b74ba9c68cd5247cd0d]
[section operator>=(static_vector<...> const &, static_vector<...> const &)]
Lexicographically compares static_vectors. 

[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`bool boost::container::operator>=``(``static_vector< V, C1, S1 > const &` `x``,` `static_vector< V, C2, S2 > const &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > const &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > const &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Returns]
[^`true`] if x don't compare lexicographically less than y.
[heading Complexity]
Linear O(N). 

[endsect]

[#group__static__vector__non__member_1gaee8c63afec740b9ce45f5814561988f9]
[section swap(static_vector<...> &, static_vector<...> &)]
Swaps contents of two static_vectors. 

[heading Description]
This function calls [link classboost_1_1container_1_1static__vector_1a12cdeec047f6d310fe6a1746ddbf41d1 static_vector::swap()].[heading Synopsis]
[pre
`template<``typename V``,`
         `std::size_t C1``,`
         `typename S1``,`
         `std::size_t C2``,`
         `typename S2``>`
`void boost::container::swap``(``static_vector< V, C1, S1 > &` `x``,` `static_vector< V, C2, S2 > &` `y``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`static_vector< V, C1, S1 > &`][ `x` ][The first [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[`static_vector< V, C2, S2 > &`][ `y` ][The second [link classboost_1_1container_1_1static__vector static_vector].]]
]
[heading Complexity]
Linear O(N). 

[endsect]

[endsect]

