[/ Generated by doxygen_xml2qbk, don't change, will be overwritten automatically]
[/ Generated from xml/classboost_1_1container_1_1static__vector.xml]
[#classboost_1_1container_1_1static__vector]
[section:boost_container_static_vector boost::container::static_vector]

'''<indexterm><primary>boost</primary></indexterm><indexterm><primary>container</primary></indexterm><indexterm><primary>static_vector</primary></indexterm>'''
A hybrid of [^`boost::container::vector`] and [^`boost::array`] with fixed capacity. 

[heading Description]
[link classboost_1_1container_1_1static__vector static_vector] is a sequence container like boost::container::vector with contiguous storage that can change in size, along with the static allocation, low overhead, and fixed capacity of boost::array.

A [link classboost_1_1container_1_1static__vector static_vector] is a sequence that supports random access to elements, constant time insertion and removal of elements at the end, and linear time insertion and removal of elements at the beginning or in the middle. The number of elements in a [link classboost_1_1container_1_1static__vector static_vector] may vary dynamically up to a fixed capacity because elements are stored within the object itself similarly to an array. However, objects are initialized as they are inserted into [link classboost_1_1container_1_1static__vector static_vector] unlike C arrays or std::array which must construct all elements on instantiation. The behavior of [link classboost_1_1container_1_1static__vector static_vector] enables the use of statically allocated elements in cases with complex object lifetime requirements that would otherwise not be trivially possible.

[heading Error Handling]
Insertion beyond the capacity and out of bounds errors result in undefined behavior unless otherwise specified. In this respect if [link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()] == [link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()], then [link classboost_1_1container_1_1static__vector_1ae61c0bcedf9162c63c8b738ddfaed93d static_vector::push_back()] behaves like std::vector pop_front() if [link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()] == [link classboost_1_1container_1_1static__vector_1aa408660722a22b80104613e28c514fc8 empty()]. The reason for this difference is because unlike vectors, [link classboost_1_1container_1_1static__vector static_vector] does not perform allocation.

[heading Advanced Usage]
Error handling behavior can be modified to more closely match std::vector exception behavior when exceeding bounds by providing an alternate Strategy and static_vector_traits instantiation.

[heading Header]
`#include <boost/container/static_vector.hpp>`

[heading Synopsis]
[pre
`template<``typename Value``,`
         `std::size_t Capacity``,`
         `typename Strategy` = [^[link structboost_1_1container_1_1strategy_1_1def strategy::def]]`<Value>``>`
`class static_vector`
`{`
`  // ...`
`};`
]

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[`Value`][The type of element that will be stored. ]]
[[`std::size_t Capacity`][The maximum number of elements [link classboost_1_1container_1_1static__vector static_vector] can store, fixed at compile time. ]]
[[`Strategy`][Defines the public typedefs and error handlers, implements StaticVectorStrategy and has some similarities to an Allocator. ]]
]

[heading Typedef(s)]
[table
[[Type] [Description]]
[[[#classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e] `value_type`][The type of elements stored in the container. ]]
[[[#classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e] `size_type`][The unsigned integral type used by the container. ]]
[[[#classboost_1_1container_1_1static__vector_1a5cdd8942ad9c5e23e0917b2f63098609] `difference_type`][The pointers difference type. ]]
[[[#classboost_1_1container_1_1static__vector_1a28243d9bbc185be8ac96225143341c66] `pointer`][The pointer type. ]]
[[[#classboost_1_1container_1_1static__vector_1a1ee7ffa97928f7f71f8a6ff13d9e74c0] `const_pointer`][The const pointer type. ]]
[[[#classboost_1_1container_1_1static__vector_1a24cb3c33ddbeab8b6a82ac03a8482f16] `reference`][The value reference type. ]]
[[[#classboost_1_1container_1_1static__vector_1a05ebdcd801a4e03109a709ab91981e4a] `const_reference`][The value const reference type. ]]
[[[#classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e] `iterator`][The iterator type. ]]
[[[#classboost_1_1container_1_1static__vector_1af9d23146b9e766c7ea2453a48ca63eae] `const_iterator`][The const iterator type. ]]
[[[#classboost_1_1container_1_1static__vector_1ab143d0cd51d29d261dd705a957d9969a] `reverse_iterator`][The reverse iterator type. ]]
[[[#classboost_1_1container_1_1static__vector_1aedca56b1b3e41ef352f7cc5c4dabdcd4] `const_reverse_iterator`][The const reverse iterator. ]]
[[[#classboost_1_1container_1_1static__vector_1a041d1b8def12d8781f34f32a12fd53d0] `strategy_type`][The type of a strategy used by the [link classboost_1_1container_1_1static__vector static_vector]. ]]
]

[heading Constructor(s) and destructor]
[table
[[Function][Description]]
[[[link classboost_1_1container_1_1static__vector_1ae0f7f391d06180aea516a6b03b3402c2 `static_vector()`]][Constructs an empty [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[[link classboost_1_1container_1_1static__vector_1ab6461f56b1a46dc3e708e22d24b262c5 `static_vector(size_type)`]][Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing count default constructed Values. ]]
[[[link classboost_1_1container_1_1static__vector_1a5f0a8f8d5a685d0d9ed9c54e202c7c3c `static_vector(size_type, value_type const &)`]][Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing count copies of value. ]]
[[[link classboost_1_1container_1_1static__vector_1a5e2c5c81fe53874667e3b9c2c07757b3 `static_vector(Iterator, Iterator)`]][Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing copy of a range [^`[first, last)`]. ]]
[[[link classboost_1_1container_1_1static__vector_1a48efc321954acc24a3a6f37a26c676f2 `static_vector(static_vector const &)`]][Constructs a copy of other [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[[link classboost_1_1container_1_1static__vector_1ae9a84810e47883c67b51dbaf760a6c1b `static_vector(static_vector<...> const &)`]][Constructs a copy of other [link classboost_1_1container_1_1static__vector static_vector]. ]]
[[[link classboost_1_1container_1_1static__vector_1a5e19b124c38ed45fbd5868349622c228 `static_vector(static_vector &&)`]][Move constructor. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[[link classboost_1_1container_1_1static__vector_1ab680dfce94853dbcbffa7c789199e668 `static_vector(static_vector<...> &&)`]][Move constructor. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[[link classboost_1_1container_1_1static__vector_1a047c909045c5fdc2dfba86d82bde57f5 `~static_vector()`]][Destructor. Destroys Values stored in this container. ]]
]

[heading Member(s)]
[table
[[Modifier][Function][Description]]
[[][[link classboost_1_1container_1_1static__vector_1a22aae352c5cfe7f9ccb0fda5a900ec98 `operator=(const static_vector &)`]][Copy assigns Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1a58b56229fbbb996c394d89db80f8751d `operator=(static_vector<...> const &)`]][Copy assigns Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1a736084d326ffa4d50ec2dd15fd4dadca `operator=(static_vector &&)`]][Move assignment. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1a03eaa538061845c7477ea5aba4f5fd7e `operator=(static_vector<...> &&)`]][Move assignment. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1a12cdeec047f6d310fe6a1746ddbf41d1 `swap(static_vector &)`]][Swaps contents of the other [link classboost_1_1container_1_1static__vector static_vector] and this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1a7a668affb50dad8ae4c92bff03ae9f22 `swap(static_vector<...> &)`]][Swaps contents of the other [link classboost_1_1container_1_1static__vector static_vector] and this one. ]]
[[][[link classboost_1_1container_1_1static__vector_1acf7bf2c6ce597df2bfde495d9ee1bebd `resize(size_type)`]][Inserts or erases elements at the end such that the size becomes count. New elements are default constructed. ]]
[[][[link classboost_1_1container_1_1static__vector_1a19cd77b2fdcda815b780e65b2fb66cc9 `resize(size_type, value_type const &)`]][Inserts or erases elements at the end such that the size becomes count. New elements are copy constructed from value. ]]
[[][[link classboost_1_1container_1_1static__vector_1a9553bdd8a9f3f98fdbdd3a5a46fb9474 `reserve(size_type)`]][This call has no effect because the Capacity of this container is constant. ]]
[[][[link classboost_1_1container_1_1static__vector_1ae61c0bcedf9162c63c8b738ddfaed93d `push_back(value_type const &)`]][Adds a copy of value at the end. ]]
[[][[link classboost_1_1container_1_1static__vector_1a8d23922fd8d2bd57b8125253e8a06c4d `push_back(value_type &&)`]][Moves value to the end. ]]
[[][[link classboost_1_1container_1_1static__vector_1a7be88e699c34a01953279e8f5b9deec4 `pop_back()`]][Destroys last value and decreases the size. ]]
[[][[link classboost_1_1container_1_1static__vector_1a949c881458809c08e0c6de6f54871fdf `insert(iterator, value_type const &)`]][Inserts a copy of element at position. ]]
[[][[link classboost_1_1container_1_1static__vector_1a93e722fcda2a5454901292642fcabfba `insert(iterator, value_type &&)`]][Inserts a move-constructed element at position. ]]
[[][[link classboost_1_1container_1_1static__vector_1a6381368d09a3b93c1bc6c28199f9810c `insert(iterator, size_type, value_type const &)`]][Inserts a count copies of value at position. ]]
[[][[link classboost_1_1container_1_1static__vector_1a7f3daa5ea1faae1f75f2f33f8fc5c15c `insert(iterator, Iterator, Iterator)`]][Inserts a copy of a range [^`[first, last)`] at position. ]]
[[][[link classboost_1_1container_1_1static__vector_1aa8ba2711fd2390953a10f02eb464d269 `erase(iterator)`]][Erases Value from position. ]]
[[][[link classboost_1_1container_1_1static__vector_1a2fc879a077c834f4305efc21706e033c `erase(iterator, iterator)`]][Erases Values from a range [^`[first, last)`]. ]]
[[][[link classboost_1_1container_1_1static__vector_1a5f820fa73c4728fed1df89da341b98cb `assign(Iterator, Iterator)`]][Assigns a range [^`[first, last)`] of Values to this container. ]]
[[][[link classboost_1_1container_1_1static__vector_1ac589c93c8b59e5712b0225a9b424f50f `assign(size_type, value_type const &)`]][Assigns a count copies of value to this container. ]]
[[][[link classboost_1_1container_1_1static__vector_1ac00c9401b86fdbf8816540ce92329f40 `emplace_back(Args &&...)`]][Inserts a Value constructed with [^`std::forward<Args>(args)`]... in the end of the container. ]]
[[][[link classboost_1_1container_1_1static__vector_1ae06ce1a29316261d44920ca0d3836dad `emplace(iterator, Args &&...)`]][Inserts a Value constructed with [^`std::forward<Args>(args)`]... before position. ]]
[[][[link classboost_1_1container_1_1static__vector_1a11ae430a28a7f9b9636f249bfc932a50 `clear()`]][Removes all elements from the container. ]]
[[][[link classboost_1_1container_1_1static__vector_1a2ab748bbf59967f381131dc2ded8878e `at(size_type)`]][Returns reference to the i-th element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1ad69bcb249614e043de9ad3c30848a046 `at(size_type)`]][Returns const reference to the i-th element. ]]
[[][[link classboost_1_1container_1_1static__vector_1a969626193cf92a99f3b03b1ac96044dc `operator[](size_type)`]][Returns reference to the i-th element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1ab13ec3ee9ce46cf1700a2900bad77531 `operator[](size_type)`]][Returns const reference to the i-th element. ]]
[[][[link classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137 `front()`]][Returns reference to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a2a1b6ca353a315e76c0f41cdb6440cf8 `front()`]][Returns const reference to the first element. ]]
[[][[link classboost_1_1container_1_1static__vector_1a8b3295ab8d967460eb4ed6f87e827eb6 `back()`]][Returns reference to the last element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1aa3a259c979e7755ae410f5b5250e2bd4 `back()`]][Returns const reference to the first element. ]]
[[][[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce `data()`]][Pointer such that [^`[`[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]`, `[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` + `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` == &`[link classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137 front()]]. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a3ac0ed788bfecd5103183f0b705d602d `data()`]][Const pointer such that [^`[`[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]`, `[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` + `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` == &`[link classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137 front()]]. ]]
[[][[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 `begin()`]][Returns iterator to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a5ad66643c38c5c0c5754b010011c0024 `begin()`]][Returns const iterator to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a33bd2d5cff22aa5a88050026367416a6 `cbegin()`]][Returns const iterator to the first element. ]]
[[][[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc `end()`]][Returns iterator to the one after the last element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1af619ba0152426c44cb59bd567c906139 `end()`]][Returns const iterator to the one after the last element. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1ad98b548743fab88322301e7a724ff73e `cend()`]][Returns const iterator to the one after the last element. ]]
[[][[link classboost_1_1container_1_1static__vector_1a692f56e1145d27694f3f01462921e4ad `rbegin()`]][Returns reverse iterator to the first element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a2cb882180fb82fe20104656b08ad0127 `rbegin()`]][Returns const reverse iterator to the first element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a443d1701ea36063ebff8c350ed45bc20 `crbegin()`]][Returns const reverse iterator to the first element of the reversed container. ]]
[[][[link classboost_1_1container_1_1static__vector_1ad1fe8aaeafefaf37ba49801f1f769c93 `rend()`]][Returns reverse iterator to the one after the last element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a660c0d82338d1c8c55546ece061cb7fa `rend()`]][Returns const reverse iterator to the one after the last element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1a9a5f65095c083b516585d1054338e850 `crend()`]][Returns const reverse iterator to the one after the last element of the reversed container. ]]
[[`static`][[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 `capacity()`]][Returns container's capacity. ]]
[[`static`][[link classboost_1_1container_1_1static__vector_1afe9bdc2c8fd236e17b946963f6497b83 `max_size()`]][Returns container's capacity. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 `size()`]][Returns the number of stored elements. ]]
[[ `const`][[link classboost_1_1container_1_1static__vector_1aa408660722a22b80104613e28c514fc8 `empty()`]][Queries if the container contains elements. ]]
[[][[link classboost_1_1container_1_1static__vector_1a4d89dc588ace1ce15c307a923a89f1b5 `shrink_to_fit()`]][Capacity is fixed so this call has no effects. ]]
]

[#classboost_1_1container_1_1static__vector_1ae0f7f391d06180aea516a6b03b3402c2]
[section static_vector()]
Constructs an empty [link classboost_1_1container_1_1static__vector static_vector]. 

[heading Synopsis]
[pre

`static_vector``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ab6461f56b1a46dc3e708e22d24b262c5]
[section static_vector(size_type)]
Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing count default constructed Values. 

[heading Synopsis]
[pre

`static_vector``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``)`
]

[heading Modifier(s)]
``explicit ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of values which will be contained in the container.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's default constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a5f0a8f8d5a685d0d9ed9c54e202c7c3c]
[section static_vector(size_type, value_type const &)]
Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing count copies of value. 

[heading Synopsis]
[pre

`static_vector``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``,` [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of copies of a values that will be contained in the container. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value which will be used to copy construct values.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a5e2c5c81fe53874667e3b9c2c07757b3]
[section static_vector(Iterator, Iterator)]
Constructs a [link classboost_1_1container_1_1static__vector static_vector] containing copy of a range [^`[first, last)`]. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
`static_vector``(``Iterator` `first``,` `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Iterator`][ `first` ][The iterator to the first element in range. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element in range.]]
]
[heading Precondition(s)]


* [^`distance(first, last) <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]
* Iterator must meet the [^`ForwardTraversalIterator`] concept.



[heading Throws]
If Value's constructor taking a dereferenced Iterator throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a48efc321954acc24a3a6f37a26c676f2]
[section static_vector(static_vector const &)]
Constructs a copy of other [link classboost_1_1container_1_1static__vector static_vector]. 

[heading Synopsis]
[pre

`static_vector``(`[^[link classboost_1_1container_1_1static__vector static_vector]]` const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]` const &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be copied to this one.]]
]
[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ae9a84810e47883c67b51dbaf760a6c1b]
[section static_vector(static_vector<...> const &)]
Constructs a copy of other [link classboost_1_1container_1_1static__vector static_vector]. 

[heading Synopsis]
[pre
`template<``std::size_t C``,` `typename S``>`
`static_vector``(`[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > const &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be copied to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]].

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a5e19b124c38ed45fbd5868349622c228]
[section static_vector(static_vector &&)]
Move constructor. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre

`static_vector``(`[^[link classboost_1_1container_1_1static__vector static_vector]]` &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]` &&`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be moved to this one.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ab680dfce94853dbcbffa7c789199e668]
[section static_vector(static_vector<...> &&)]
Move constructor. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``,` `typename S``>`
`static_vector``(`[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &&`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be moved to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a047c909045c5fdc2dfba86d82bde57f5]
[section ~static_vector()]
Destructor. Destroys Values stored in this container. 

[heading Synopsis]
[pre

`~static_vector``()`
]

[heading Throws]
Nothing

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a22aae352c5cfe7f9ccb0fda5a900ec98]
[section operator=(const static_vector &)]
Copy assigns Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `operator=``(``const `[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`const `[^[link classboost_1_1container_1_1static__vector static_vector]]` &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be copied to this one.]]
]
[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a58b56229fbbb996c394d89db80f8751d]
[section operator=(static_vector<...> const &)]
Copy assigns Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``,` `typename S``>`
[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `operator=``(`[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > const &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be copied to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a736084d326ffa4d50ec2dd15fd4dadca]
[section operator=(static_vector &&)]
Move assignment. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `operator=``(`[^[link classboost_1_1container_1_1static__vector static_vector]]` &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]` &&`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be moved to this one.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a03eaa538061845c7477ea5aba4f5fd7e]
[section operator=(static_vector<...> &&)]
Move assignment. Moves Values stored in the other [link classboost_1_1container_1_1static__vector static_vector] to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``,` `typename S``>`
[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `operator=``(`[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &&`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be moved to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a12cdeec047f6d310fe6a1746ddbf41d1]
[section swap(static_vector &)]
Swaps contents of the other [link classboost_1_1container_1_1static__vector static_vector] and this one. 

[heading Synopsis]
[pre

`void` `swap``(`[^[link classboost_1_1container_1_1static__vector static_vector]]` &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]` &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be swapped with this one's content.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws, 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws,



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a7a668affb50dad8ae4c92bff03ae9f22]
[section swap(static_vector<...> &)]
Swaps contents of the other [link classboost_1_1container_1_1static__vector static_vector] and this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``,` `typename S``>`
`void` `swap``(`[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector static_vector]]`< `[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]`, C, S > &`][ `other` ][The [link classboost_1_1container_1_1static__vector static_vector] which content will be swapped with this one's content.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]` && `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` <= other.capacity()`]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws, 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws,



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1acf7bf2c6ce597df2bfde495d9ee1bebd]
[section resize(size_type)]
Inserts or erases elements at the end such that the size becomes count. New elements are default constructed. 

[heading Synopsis]
[pre

`void` `resize``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of elements which will be stored in the container.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's default constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a19cd77b2fdcda815b780e65b2fb66cc9]
[section resize(size_type, value_type const &)]
Inserts or erases elements at the end such that the size becomes count. New elements are copy constructed from value. 

[heading Synopsis]
[pre

`void` `resize``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``,` [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of elements which will be stored in the container. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a9553bdd8a9f3f98fdbdd3a5a46fb9474]
[section reserve(size_type)]
This call has no effect because the Capacity of this container is constant. 

[heading Synopsis]
[pre

`void` `reserve``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of elements which the container should be able to contain.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
Nothing.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ae61c0bcedf9162c63c8b738ddfaed93d]
[section push_back(value_type const &)]
Adds a copy of value at the end. 

[heading Synopsis]
[pre

`void` `push_back``(`[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a8d23922fd8d2bd57b8125253e8a06c4d]
[section push_back(value_type &&)]
Moves value to the end. 

[heading Synopsis]
[pre

`void` `push_back``(`[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` &&` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` &&`][ `value` ][The value to move construct the new element.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's move constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a7be88e699c34a01953279e8f5b9deec4]
[section pop_back()]
Destroys last value and decreases the size. 

[heading Synopsis]
[pre

`void` `pop_back``()`
]

[heading Precondition(s)]
[^`!empty()`]

[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a949c881458809c08e0c6de6f54871fdf]
[section insert(iterator, value_type const &)]
Inserts a copy of element at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `insert``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``,` [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position at which the new value will be inserted. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]. 
* [^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]



[heading Throws]


* If Value's copy constructor or copy assignment throws 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1static__vector_1a93e722fcda2a5454901292642fcabfba]
[section insert(iterator, value_type &&)]
Inserts a move-constructed element at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `insert``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``,` [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` &&` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position at which the new value will be inserted. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` &&`][ `value` ][The value used to move construct the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]. 
* [^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]



[heading Throws]
If Value's move constructor or move assignment throws.

[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1static__vector_1a6381368d09a3b93c1bc6c28199f9810c]
[section insert(iterator, size_type, value_type const &)]
Inserts a count copies of value at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `insert``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``,`
                [^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``,`
                [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The number of new elements which will be inserted. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value used to copy construct new elements.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]. 
* [^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` + count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]



[heading Throws]


* If Value's copy constructor or copy assignment throws. 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a7f3daa5ea1faae1f75f2f33f8fc5c15c]
[section insert(iterator, Iterator, Iterator)]
Inserts a copy of a range [^`[first, last)`] at position. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `insert``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``,`
                `Iterator` `first``,`
                `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[`Iterator`][ `first` ][The iterator to the first element of a range used to construct new elements. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element of a range used to construct new elements.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]. 
* [^`distance(first, last) <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]
* [^`Iterator`] must meet the [^`ForwardTraversalIterator`] concept.



[heading Throws]


* If Value's constructor and assignment taking a dereferenced [^`Iterator`]. 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aa8ba2711fd2390953a10f02eb464d269]
[section erase(iterator)]
Erases Value from position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `erase``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position of the element which will be erased from the container.]]
]
[heading Precondition(s)]
[^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`)`]

[heading Throws]
If Value's move assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a2fc879a077c834f4305efc21706e033c]
[section erase(iterator, iterator)]
Erases Values from a range [^`[first, last)`]. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `erase``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `first``,` [^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `first` ][The position of the first element of a range which will be erased from the container. ]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `last` ][The position of the one after the last element of a range which will be erased from the container.]]
]
[heading Precondition(s)]


* [^`first`] and [^`last`] must define a valid range 
* iterators must be in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]



[heading Throws]
If Value's move assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a5f820fa73c4728fed1df89da341b98cb]
[section assign(Iterator, Iterator)]
Assigns a range [^`[first, last)`] of Values to this container. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
`void` `assign``(``Iterator` `first``,` `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Iterator`][ `first` ][The iterator to the first element of a range used to construct new content of this container. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element of a range used to construct new content of this container.]]
]
[heading Precondition(s)]
[^`distance(first, last) <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws,

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ac589c93c8b59e5712b0225a9b424f50f]
[section assign(size_type, value_type const &)]
Assigns a count copies of value to this container. 

[heading Synopsis]
[pre

`void` `assign``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `count``,` [^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `count` ][The new number of elements which will be container in the container. ]]
[[[^[link classboost_1_1container_1_1static__vector_1a5985fc0bab97e6e2b923c9b97ef32b7e value_type]]` const &`][ `value` ][The value which will be used to copy construct the new content.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ac00c9401b86fdbf8816540ce92329f40]
[section emplace_back(Args &&...)]
Inserts a Value constructed with [^`std::forward<Args>(args)`]... in the end of the container. 

[heading Synopsis]
[pre
`template<``class... Args``>`
`void` `emplace_back``(``Args &&...` `args``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Args &&...`][ `args` ][The arguments of the constructor of the new element which will be created at the end of the container.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]

[heading Throws]
If in-place constructor throws or Value's move constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ae06ce1a29316261d44920ca0d3836dad]
[section emplace(iterator, Args &&...)]
Inserts a Value constructed with [^`std::forward<Args>(args)`]... before position. 

[heading Synopsis]
[pre
`template<``class... Args``>`
[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `emplace``(`[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `position``,` `Args &&...` `args``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[`Args &&...`][ `args` ][The arguments of the constructor of the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628 begin()]`, `[link classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc end()]`]`]
* [^[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]` < `[link classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844 capacity()]]



[heading Throws]
If in-place constructor throws or if Value's move constructor or move assignment throws.

[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1static__vector_1a11ae430a28a7f9b9636f249bfc932a50]
[section clear()]
Removes all elements from the container. 

[heading Synopsis]
[pre

`void` `clear``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a2ab748bbf59967f381131dc2ded8878e]
[section at(size_type)]
Returns reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a24cb3c33ddbeab8b6a82ac03a8482f16 reference]] `at``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `i``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]]

[heading Returns]
reference to the i-th element from the beginning of the container.
[heading Throws]
[^`std::out_of_range`] exception by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ad69bcb249614e043de9ad3c30848a046]
[section at(size_type)]
Returns const reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a05ebdcd801a4e03109a709ab91981e4a const_reference]] `at``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `i``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]]

[heading Returns]
const reference to the i-th element from the beginning of the container.
[heading Throws]
[^`std::out_of_range`] exception by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a969626193cf92a99f3b03b1ac96044dc]
[section operator\[\](size_type)]
Returns reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a24cb3c33ddbeab8b6a82ac03a8482f16 reference]] `operator[]``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `i``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]]

[heading Returns]
reference to the i-th element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ab13ec3ee9ce46cf1700a2900bad77531]
[section operator\[\](size_type)]
Returns const reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a05ebdcd801a4e03109a709ab91981e4a const_reference]] `operator[]``(`[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `i``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]]

[heading Returns]
const reference to the i-th element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137]
[section front()]
Returns reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a24cb3c33ddbeab8b6a82ac03a8482f16 reference]] `front``()`
]

[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
reference to the first element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a2a1b6ca353a315e76c0f41cdb6440cf8]
[section front()]
Returns const reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a05ebdcd801a4e03109a709ab91981e4a const_reference]] `front``()`
]

[heading Modifier(s)]
``const ``[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
const reference to the first element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a8b3295ab8d967460eb4ed6f87e827eb6]
[section back()]
Returns reference to the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a24cb3c33ddbeab8b6a82ac03a8482f16 reference]] `back``()`
]

[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
reference to the last element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aa3a259c979e7755ae410f5b5250e2bd4]
[section back()]
Returns const reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a05ebdcd801a4e03109a709ab91981e4a const_reference]] `back``()`
]

[heading Modifier(s)]
``const ``[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
const reference to the last element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce]
[section data()]
Pointer such that [^`[`[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]`, `[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` + `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` == &`[link classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137 front()]]. 

[heading Synopsis]
[pre

`Value *` `data``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a3ac0ed788bfecd5103183f0b705d602d]
[section data()]
Const pointer such that [^`[`[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]`, `[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` + `[link classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3 size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1static__vector_1aa1fed11b189287b9e671ab935332c5ce data()]` == &`[link classboost_1_1container_1_1static__vector_1a88bab6629556db28aac8a3e3142e3137 front()]]. 

[heading Synopsis]
[pre

`const Value *` `data``()`
]

[heading Modifier(s)]
``const ``[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aa2cd3e93cea4913f4c7a9e2e8c5f6628]
[section begin()]
Returns iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `begin``()`
]

[heading Returns]
iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a5ad66643c38c5c0c5754b010011c0024]
[section begin()]
Returns const iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1af9d23146b9e766c7ea2453a48ca63eae const_iterator]] `begin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a33bd2d5cff22aa5a88050026367416a6]
[section cbegin()]
Returns const iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1af9d23146b9e766c7ea2453a48ca63eae const_iterator]] `cbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a14db552be707d1da6b6a3298650316bc]
[section end()]
Returns iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ae9387f4d5cba4f4f87ad06222b46357e iterator]] `end``()`
]

[heading Returns]
iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1af619ba0152426c44cb59bd567c906139]
[section end()]
Returns const iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1af9d23146b9e766c7ea2453a48ca63eae const_iterator]] `end``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ad98b548743fab88322301e7a724ff73e]
[section cend()]
Returns const iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1af9d23146b9e766c7ea2453a48ca63eae const_iterator]] `cend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a692f56e1145d27694f3f01462921e4ad]
[section rbegin()]
Returns reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ab143d0cd51d29d261dd705a957d9969a reverse_iterator]] `rbegin``()`
]

[heading Returns]
reverse_iterator pointing to the beginning of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a2cb882180fb82fe20104656b08ad0127]
[section rbegin()]
Returns const reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1aedca56b1b3e41ef352f7cc5c4dabdcd4 const_reverse_iterator]] `rbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the beginning of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a443d1701ea36063ebff8c350ed45bc20]
[section crbegin()]
Returns const reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1aedca56b1b3e41ef352f7cc5c4dabdcd4 const_reverse_iterator]] `crbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the beginning of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1ad1fe8aaeafefaf37ba49801f1f769c93]
[section rend()]
Returns reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1ab143d0cd51d29d261dd705a957d9969a reverse_iterator]] `rend``()`
]

[heading Returns]
reverse_iterator pointing to the one after the last element of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a660c0d82338d1c8c55546ece061cb7fa]
[section rend()]
Returns const reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1aedca56b1b3e41ef352f7cc5c4dabdcd4 const_reverse_iterator]] `rend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the one after the last element of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a9a5f65095c083b516585d1054338e850]
[section crend()]
Returns const reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1aedca56b1b3e41ef352f7cc5c4dabdcd4 const_reverse_iterator]] `crend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the one after the last element of the reversed [link classboost_1_1container_1_1static__vector static_vector].
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aabaf12d350a1b5457ba8ae4176819844]
[section capacity()]
Returns container's capacity. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `capacity``()`
]

[heading Modifier(s)]
``static ``[heading Returns]
container's capacity.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1afe9bdc2c8fd236e17b946963f6497b83]
[section max_size()]
Returns container's capacity. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `max_size``()`
]

[heading Modifier(s)]
``static ``[heading Returns]
container's capacity.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1af2a0e0148e73a8b6799ac7af3a26d6a3]
[section size()]
Returns the number of stored elements. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1static__vector_1a4805729a79dc41f690c279636e20b31e size_type]] `size``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
Number of elements contained in the container.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1aa408660722a22b80104613e28c514fc8]
[section empty()]
Queries if the container contains elements. 

[heading Synopsis]
[pre

`bool` `empty``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
true if the number of elements contained in the container is equal to 0.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1static__vector_1a4d89dc588ace1ce15c307a923a89f1b5]
[section shrink_to_fit()]
Capacity is fixed so this call has no effects. 

[heading Synopsis]
[pre

`void` `shrink_to_fit``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[endsect]

