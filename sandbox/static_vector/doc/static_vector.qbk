[/
 / Copyright (c) 2012 Adam Wulkiewicz
 / Copyright (c) 2012 Andrew Hundt
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[library StaticVector
    [quickbook 1.5]
    [authors [Wulkiewicz, Adam], [Hundt, Andrew]]
    [copyright 2012 Adam Wulkiewicz, 2011-2012 Andrew Hundt]
    [id static_vector]
    [category containers]
    [purpose Containers library]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[section:static_vector static_vector]

static_vector is a hybrid of boost::container::vector and boost::array. 

static_vector is a sequence container like boost::container::vector with contiguous storage that can
change in size, but provides the static allocation, low overhead, and fixed capacity of boost::array.

<Insert example here>

static_vector is well suited for use in a buffer or in the internal implementation of of other classes, or use cases where there is a fixed limit to the number of elements that must be stored. Embedded and realtime applications are a particular case where static_vector is most useful, where allocation either may not be available or acceptable. 

Exceptions can be disabled for cases where it is not supported or not desired.


[endsect]

[include auto_index_helpers.qbk]

[section:index Indexes]

[named_index class_name Class Index]
[named_index typedef_name Typedef Index]
[named_index function_name Function Index]
[/named_index macro_name Macro Index]
[/index]

[endsect]

[xinclude autodoc.xml]