[/=============================================================================
    Copyright (C) 2011 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:associative_container_gen `associative_container_gen`]

[section Synopsis]
[reference__associative_container_gen]
[endsect]

[section Description]
This metafunction class can be used to determine the appropriate associative
container type given the specified selector.  The example routine below uses
the `associative_container_gen` return type to associate each distinct string
character with the number of times it appears in the string.

[example__output_char_tallies__definition]

This library provides specializations of this metafunction class for each
selector it provides whose resulting storage type models the
__Associative_Container__ concept.  Here, two such selectors are passed in
calls to the example routine.

[example__output_char_tallies__calls]

It is possible to nest containers via `associative_container_gen`, e.g.:

``
typedef _mpl_apply_wrap2_<
            associative_container_gen<mapS>
          , _mpl_apply_wrap1_<associative_container_gen<setS>,char>::type
          , _std_string_
        >::type
        MapOfCharSets2Strings;
``

[important
    This last capability depends on __Boost_Type_Traits_Operators__, which has
    been recently accepted into Boost but is currently not part of an official
    release.  For now, you must perform a Subversion checkout from the
    __SVN_Trac__, add the `type_traits` module to your list of header
    directories, and `#define BOOST_CONTAINER_GEN_USES_OP_TYPE_TRAITS` in order
    to obtain this capability.

    If you do not need this capability, then you do not need
    __Boost_Type_Traits_Operators__.
]
[endsect]

[section:definition Where defined]
``
#include <__boost_utility_associative_container_gen_hpp__>
``
[endsect]

[endsect] [/ associative_container_gen]

