[library container_gen
    [quickbook 1.5]
    [version 0.2]
    [authors [Lumsdaine, Andrew][Lee, Lie-Quan][Claveirole, Thomas][Siek, Jeremy G.][Enage, Cromwell D.]]
    [copyright 1997-2012 Andrew Lumsdaine, Lie-Quan Lee, Thomas Claveirole, Jeremy G. Siek, Cromwell D. Enage]
    [purpose Collection of container-generating metafunctions]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ General concept links.]
[def __Random_Access_Container__ [@http://www.sgi.com/tech/stl/RandomAccessContainer.html [*Random Access Container]]]
[def __Associative_Container__ [@http://www.sgi.com/tech/stl/AssociativeContainer.html [*Associative Container]]]
[def __Unique_Associative_Container__ [@http://www.sgi.com/tech/stl/UniqueAssociativeContainer.html [*Unique Associative Container]]]
[def __Multiple_Associative_Container__ [@http://www.sgi.com/tech/stl/MultipleAssociativeContainer.html [*Multiple Associative Container]]]

[/ STL reference links.]
[def __std_list__ [@http://www.sgi.com/tech/stl/List.html `std::list`]]
[def _std_string_ [@http://www.sgi.com/tech/stl/basic_string.html std::string]]

[/ Boost library links.]
[def __Boost_Utility__ [@boost:libs/utility/index.html [*Boost.Utility]]]
[def __Boost_Unordered__ [@boost:doc/html/unordered.html [*Boost.Unordered]]]
[def __Boost_Pointer_Container__ [@boost:libs/ptr_container/doc/index.html [*Boost.PointerContainer]]]
[def __BGL__ [@boost:libs/graph/doc/index.html BGL]]

[/ Boost reference links.]
[def _mpl_apply_wrap1_ [@boost:libs/mpl/doc/refmanual/apply-wrap.html boost::mpl::apply_wrap1]]
[def _mpl_apply_wrap2_ [@boost:libs/mpl/doc/refmanual/apply-wrap.html boost::mpl::apply_wrap2]]
[def __mpl_true__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::true_`]]
[def __mpl_false__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::false_`]]
[def __graph_adjacency_list__ [@boost:libs/graph/doc/adjacency_list.html `boost::adjacency_list`]]
[def __graph_parallel_edge_traits__ [@boost:libs/graph/doc/using_adjacency_list.html#SECTION00834200000000000000 `boost::parallel_edge_traits`]]
[def __tr1_unordered_set__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_set `std::tr1::unordered_set`]]
[def __tr1_unordered_multiset__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_set `std::tr1::unordered_multiset`]]
[def __tr1_unordered_map__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_map `std::tr1::unordered_map`]]
[def __tr1_unordered_multimap__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_map `std::tr1::unordered_multimap`]]

[/ Boost.Utility.ContainerGen reference header file links.]
[def __boost_utility_container_selector_hpp__ [@../../../../../boost/utility/container_selector.hpp boost/utility/container_selector.hpp]]
[def __boost_utility_is_random_access_selector_hpp__ [@../../../../../boost/utility/is_random_access_selector.hpp boost/utility/is_random_access_selector.hpp]]
[def __boost_utility_is_unique_assoc_selector_hpp__ [@../../../../../boost/utility/is_unique_assoc_selector.hpp boost/utility/is_unique_assoc_selector.hpp]]
[def __boost_utility_is_multiple_assoc_selector_hpp__ [@../../../../../boost/utility/is_multiple_assoc_selector.hpp boost/utility/is_multiple_assoc_selector.hpp]]
[def __boost_utility_is_associative_selector_hpp__ [@../../../../../boost/utility/is_associative_selector.hpp boost/utility/is_associative_selector.hpp]]
[def __boost_utility_is_unordered_selector_hpp__ [@../../../../../boost/utility/is_unordered_selector.hpp boost/utility/is_unordered_selector.hpp]]
[def __boost_utility_has_stable_iters_selector_hpp__ [@../../../../../boost/utility/has_stable_iters_selector.hpp boost/utility/has_stable_iters_selector.hpp]]
[def __boost_utility_container_gen_hpp__ [@../../../../../boost/utility/container_gen.hpp boost/utility/container_gen.hpp]]
[def __boost_utility_associative_container_gen_hpp__ [@../../../../../boost/utility/associative_container_gen.hpp boost/utility/associative_container_gen.hpp]]
[def __boost_utility_ptr_container_gen_hpp__ [@../../../../../boost/utility/ptr_container_gen.hpp boost/utility/ptr_container_gen.hpp]]
[def __boost_utility_ptr_assoc_container_gen_hpp__ [@../../../../../boost/utility/ptr_assoc_container_gen.hpp boost/utility/ptr_assoc_container_gen.hpp]]

[/ Boost.Utility.ContainerGen reference links.]
[def __container_gen__ [link container_gen.reference.container_gen `container_gen`]]
[def _container_gen_ [link container_gen.reference.container_gen container_gen]]
[def __associative_container_gen__ [link container_gen.reference.associative_container_gen `associative_container_gen`]]
[def _associative_container_gen_ [link container_gen.reference.associative_container_gen associative_container_gen]]
[def __ptr_container_gen__ [link container_gen.reference.ptr_container_gen `ptr_container_gen`]]
[def _ptr_container_gen_ [link container_gen.reference.ptr_container_gen ptr_container_gen]]
[def __ptr_associative_container_gen__ [link container_gen.reference.ptr_assoc_cont_gen `ptr_associative_container_gen`]]
[def _ptr_associative_container_gen_ [link container_gen.reference.ptr_assoc_cont_gen ptr_associative_container_gen]]
[def __is_random_access_selector__ [link container_gen.reference.is_random_access_selector `is_random_access_selector`]]
[def _is_random_access_selector_ [link container_gen.reference.is_random_access_selector is_random_access_selector]]
[def __is_unique_associative_selector__ [link container_gen.reference.is_unique_assoc_selector `is_unique_associative_selector`]]
[def _is_unique_associative_selector_ [link container_gen.reference.is_unique_assoc_selector is_unique_associative_selector]]
[def __is_multiple_associative_selector__ [link container_gen.reference.is_multiple_assoc_selector `is_multiple_associative_selector`]]
[def _is_multiple_associative_selector_ [link container_gen.reference.is_multiple_assoc_selector is_multiple_associative_selector]]
[def __is_associative_selector__ [link container_gen.reference.is_associative_selector `is_associative_selector`]]
[def _is_associative_selector_ [link container_gen.reference.is_associative_selector is_associative_selector]]
[def __is_unordered_selector__ [link container_gen.reference.is_unordered_selector `is_unordered_selector`]]
[def _is_unordered_selector_ [link container_gen.reference.is_unordered_selector is_unordered_selector]]
[def __has_stable_iterators_selector__ [link container_gen.reference.has_stable_iters_selector `has_stable_iterators_selector`]]
[def _has_stable_iterators_selector_ [link container_gen.reference.has_stable_iters_selector has_stable_iterators_selector]]

[/ Autogenerate reference documentation directly from code.]
[/ Bypass Doxygen.]
[import ../../../../boost/utility/container_selector.hpp]
[import ../../../../boost/utility/container_gen.hpp]
[import ../../../../boost/utility/associative_container_gen.hpp]
[import ../../../../boost/utility/ptr_container_gen.hpp]
[import ../../../../boost/utility/ptr_assoc_container_gen.hpp]
[import ../../../../boost/utility/is_random_access_selector.hpp]
[import ../../../../boost/utility/is_unique_assoc_selector.hpp]
[import ../../../../boost/utility/is_multiple_assoc_selector.hpp]
[import ../../../../boost/utility/is_associative_selector.hpp]
[import ../../../../boost/utility/is_unordered_selector.hpp]
[import ../../../../boost/utility/has_stable_iters_selector.hpp]
[import ../../../../libs/graph/example/container_gen.cpp]
[import ../../../../libs/utility/container_gen/example/output_shape_stats.cpp]
[import ../../../../libs/utility/container_gen/example/output_char_tallies.cpp]

[/ index.html Start]

[heading Rationale]
Significant interest was expressed in moving the `container_gen` metafunction
from its current place in the __BGL__ to a more general residence such as
__Boost_Utility__.  The relevant discussion is archived here:
[@http://lists.boost.org/Archives/boost/2011/05/181573.php].

[/ index.html End]

[include reference.qbk]
[include changelog.qbk]

