[/=============================================================================
    Copyright (C) 2011-2012 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:has_stable_iters_selector `has_stable_iterators_selector`]

[section Synopsis]
[reference__has_stable_iterators_selector]
[endsect]

[section Description]
Returns __mpl_true__ if the type to be returned by __container_gen__ does not
invalidate iterators other than the argument during an `erase()` call, or if
the `erase()` method does not exist, __mpl_false__ otherwise.

The current implementation returns __mpl_false__ when passed in selectors for
which __container_gen__ will return a __Hashed_Associative_Container__, a
__Flat_Associative_Container__, or a __Random_Access_Container__ other than
__array__ or __container_stable_vector__; it will return __mpl_true__ for all
other types of selectors.  Specialize this metafunction to return __mpl_false__
for your custom selector if and only if the type to be returned by
__container_gen__ invalidates iterators other than the argument
during an `erase()` call.
[endsect]

[section:definition Where defined]
``
#include <__boost_container_gen_has_stable_iters_selector_hpp__>
``
[endsect]

[endsect] [/ has_stable_iterators_selector]

