[library container_gen
    [quickbook 1.5]
    [version 0.3]
    [authors [Lumsdaine, Andrew][Lee, Lie-Quan][Claveirole, Thomas][Siek, Jeremy G.][Enage, Cromwell D.]]
    [copyright 1997-2012 Andrew Lumsdaine, Lie-Quan Lee, Thomas Claveirole, Jeremy G. Siek, Cromwell D. Enage]
    [purpose Collection of container-generating and selector-introspecting metafunctions]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ General links.]
[def __recursive_data_types__ [@http://en.wikipedia.org/wiki/Recursive_data_type recursive data types]]

[/ General concept links.]
[def __Default_Constructible__ [@http://www.sgi.com/tech/stl/DefaultConstructible.html [*Default Constructible]]]
[def __STL_Container__ [@http://www.sgi.com/tech/stl/Container.html [*STL Container]]]
[def __Random_Access_Iterator__ [@http://www.sgi.com/tech/stl/RandomAccessIterator.html [*Random Access Iterator]]]
[def __Random_Access_Container__ [@http://www.sgi.com/tech/stl/RandomAccessContainer.html [*Random Access Container]]]
[def __Associative_Container__ [@http://www.sgi.com/tech/stl/AssociativeContainer.html [*Associative Container]]]
[def __Sorted_Associative_Container__ [@http://www.sgi.com/tech/stl/SortedAssociativeContainer.html [*Sorted Associative Container]]]
[def __Hashed_Associative_Container__ [@http://www.sgi.com/tech/stl/HashAssociativeContainer.html [*Hashed Associative Container]]]
[def __Unique_Associative_Container__ [@http://www.sgi.com/tech/stl/UniqueAssociativeContainer.html [*Unique Associative Container]]]
[def __Multiple_Associative_Container__ [@http://www.sgi.com/tech/stl/MultipleAssociativeContainer.html [*Multiple Associative Container]]]
[def __Binary_Predicate__ [@http://www.sgi.com/tech/stl/BinaryPredicate.html [*Binary Predicate]]]
[def __Strict_Weak_Ordering__ [@http://www.sgi.com/tech/stl/StrictWeakOrdering.html [*Strict Weak Ordering]]]
[def __Hash_Function__ [@http://www.sgi.com/tech/stl/HashFunction.html [*Hash Function]]]

[/ STL reference links.]
[def __std_list__ [@http://www.sgi.com/tech/stl/List.html `std::list`]]
[def __std_pair__ [@http://www.sgi.com/tech/stl/pair.html `std::pair`]]
[def _std_string_ [@http://www.sgi.com/tech/stl/basic_string.html std::string]]

[/ Boost library links.]
[def __Boost_Utility__ [@boost:libs/utility/index.html [*Boost.Utility]]]
[def __Boost_Assign__ [@boost:libs/assign/doc/index.html [*Boost.Assign]]]
[def __Boost_Container__ [@boost:doc/html/container.html [*Boost.Container]]]
[def __Boost_Unordered__ [@boost:doc/html/unordered.html [*Boost.Unordered]]]
[def __Boost_TR1__ [@boost:doc/html/boost_tr1.html [*Boost.TR1]]]
[def __Boost_Pointer_Container__ [@boost:libs/ptr_container/doc/index.html [*Boost.PointerContainer]]]
[def __BGL__ [@boost:libs/graph/doc/index.html BGL]]

[/ Boost concept links.]
[def __Integral_Constant__ [@boost:libs/mpl/doc/refmanual/integral-constant.html [*Integral Constant]]]
[def __Boolean_Integral_Constant__ [@boost:libs/mpl/doc/refmanual/integral-constant.html [*Boolean Integral Constant]]]
[def __Unary_Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Unary Metafunction Class]]]
[def __Binary_Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Binary Metafunction Class]]]
[def __Clone_Allocator__ [@boost:libs/ptr_container/doc/reference.html#the-clone-allocator-concept [*Clone Allocator]]]
[def __Recursive_Container__ [@boost:doc/html/container/containers_of_incomplete_types.html [*Recursive Container]]]
[def __Flat_Associative_Container__ [@boost:doc/html/container/non_standard_containers.html#container.non_standard_containers.flat_xxx [*Flat Associative Container]]]

[/ Boost reference links.]
[def _ASSERT_ [@boost:libs/utility/assert.html BOOST_ASSERT]]
[def _AUTO_TPL_ [@boost:doc/html/typeof/refe.html#typeof.auto BOOST_AUTO_TPL]]
[def __TYPEOF_EMULATION__ [@boost:doc/html/typeof/refe.html#typeof.compl `BOOST_TYPEOF_EMULATION`]]
[def __MPL_CFG_NO_HAS_XXX__ [@boost:libs/mpl/doc/refmanual/cfg-no-has-xxx.html `BOOST_MPL_CFG_NO_HAS_XXX`]]
[def __mpl_true__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::true_`]]
[def _mpl_true_ [@boost:libs/mpl/doc/refmanual/bool.html boost::mpl::true_]]
[def __mpl_false__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::false_`]]
[def _range_equal_ [@boost:libs/range/doc/html/range/reference/algorithms/non_mutating/equal.html boost::range::equal]]
[def __array__ [@boost:doc/html/array.html `boost::array`]]
[def __container_stable_vector__ [@boost:doc/html/boost/container/stable_vector.html `boost::container::stable_vector`]]
[def __graph_adjacency_list__ [@boost:libs/graph/doc/adjacency_list.html `boost::adjacency_list`]]
[def __graph_parallel_edge_traits__ [@boost:libs/graph/doc/using_adjacency_list.html#SECTION00834200000000000000 `boost::parallel_edge_traits`]]
[def __tr1_array__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.array `std::tr1::array`]]
[def __tr1_unordered_set__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_set `std::tr1::unordered_set`]]
[def __tr1_unordered_multiset__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_set `std::tr1::unordered_multiset`]]
[def __tr1_unordered_map__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_map `std::tr1::unordered_map`]]
[def __tr1_unordered_multimap__ [@boost:doc/html/boost_tr1/subject_list.html#boost_tr1.subject_list.unordered_map `std::tr1::unordered_multimap`]]

[/ Boost.ContainerGen reference header file links.]
[def __boost_container_gen_selectors_hpp__ [@../../../../boost/container_gen/selectors.hpp boost/container_gen/selectors.hpp]]
[def __boost_container_gen_container_gen_hpp__ [@../../../../boost/container_gen/container_gen.hpp boost/container_gen/container_gen.hpp]]
[def __boost_container_gen_emplace_function_gen_hpp__ [@../../../../boost/container_gen/emplace_function_gen.hpp boost/container_gen/emplace_function_gen.hpp]]
[def __boost_container_gen_emplace_assoc_function_gen_hpp__ [@../../../../boost/container_gen/emplace_assoc_function_gen.hpp boost/container_gen/emplace_assoc_function_gen.hpp]]
[def __boost_container_gen_is_random_access_selector_hpp__ [@../../../../boost/container_gen/is_random_access_selector.hpp boost/container_gen/is_random_access_selector.hpp]]
[def __boost_container_gen_is_associative_selector_hpp__ [@../../../../boost/container_gen/is_associative_selector.hpp boost/container_gen/is_associative_selector.hpp]]
[def __boost_container_gen_is_unique_assoc_selector_hpp__ [@../../../../boost/container_gen/is_unique_assoc_selector.hpp boost/container_gen/is_unique_assoc_selector.hpp]]
[def __boost_container_gen_is_multiple_assoc_selector_hpp__ [@../../../../boost/container_gen/is_multiple_assoc_selector.hpp boost/container_gen/is_multiple_assoc_selector.hpp]]
[def __boost_container_gen_is_flat_assoc_selector_hpp__ [@../../../../boost/container_gen/is_flat_assoc_selector.hpp boost/container_gen/is_flat_assoc_selector.hpp]]
[def __boost_container_gen_is_hashed_assoc_selector_hpp__ [@../../../../boost/container_gen/is_hashed_assoc_selector.hpp boost/container_gen/is_hashed_assoc_selector.hpp]]
[def __boost_container_gen_is_ptr_selector_hpp__ [@../../../../boost/container_gen/is_ptr_selector.hpp boost/container_gen/is_ptr_selector.hpp]]
[def __boost_container_gen_is_recursive_selector_hpp__ [@../../../../boost/container_gen/is_recursive_selector.hpp boost/container_gen/is_recursive_selector.hpp]]
[def __boost_container_gen_is_tr1_selector_hpp__ [@../../../../boost/container_gen/is_tr1_selector.hpp boost/container_gen/is_tr1_selector.hpp]]
[def __boost_container_gen_has_emplace_mfunc_selector_hpp__ [@../../../../boost/container_gen/has_emplace_mfunc_selector.hpp boost/container_gen/has_emplace_mfunc_selector.hpp]]
[def __boost_container_gen_has_stable_iters_selector_hpp__ [@../../../../boost/container_gen/has_stable_iters_selector.hpp boost/container_gen/has_stable_iters_selector.hpp]]

[/ Boost.ContainerGen reference links.]
[def __Selectors__ [link container_gen.reference.selectors *Selectors*]]
[def _vector_selector_ [link container_gen.reference.selectors boost::vector_selector]]
[def _map_selector_ [link container_gen.reference.selectors boost::map_selector]]
[def __container_gen__ [link container_gen.reference.container_gen `container_gen`]]
[def _container_gen_ [link container_gen.reference.container_gen container_gen]]
[def __emplace_function_gen__ [link container_gen.reference.emplace_function_gen `emplace_function_gen`]]
[def _emplace_function_gen_ [link container_gen.reference.emplace_function_gen emplace_function_gen]]
[def __emplace_associative_function_gen__ [link container_gen.reference.emplace_assoc_function_gen `emplace_associative_function_gen`]]
[def _emplace_associative_function_gen_ [link container_gen.reference.emplace_assoc_function_gen emplace_associative_function_gen]]
[def __is_random_access_selector__ [link container_gen.reference.is_random_access_selector `is_random_access_selector`]]
[def _is_random_access_selector_ [link container_gen.reference.is_random_access_selector is_random_access_selector]]
[def __is_associative_selector__ [link container_gen.reference.is_associative_selector `is_associative_selector`]]
[def _is_associative_selector_ [link container_gen.reference.is_associative_selector is_associative_selector]]
[def __is_unique_associative_selector__ [link container_gen.reference.is_unique_assoc_selector `is_unique_associative_selector`]]
[def _is_unique_associative_selector_ [link container_gen.reference.is_unique_assoc_selector is_unique_associative_selector]]
[def __is_multiple_associative_selector__ [link container_gen.reference.is_multiple_assoc_selector `is_multiple_associative_selector`]]
[def _is_multiple_associative_selector_ [link container_gen.reference.is_multiple_assoc_selector is_multiple_associative_selector]]
[def __is_flat_associative_selector__ [link container_gen.reference.is_flat_assoc_selector `is_flat_associative_selector`]]
[def _is_flat_associative_selector_ [link container_gen.reference.is_flat_assoc_selector is_flat_associative_selector]]
[def __is_hashed_associative_selector__ [link container_gen.reference.is_hashed_assoc_selector `is_hashed_associative_selector`]]
[def _is_hashed_associative_selector_ [link container_gen.reference.is_hashed_assoc_selector is_hashed_associative_selector]]
[def __is_ptr_selector__ [link container_gen.reference.is_ptr_selector `is_ptr_selector`]]
[def _is_ptr_selector_ [link container_gen.reference.is_ptr_selector is_ptr_selector]]
[def __is_recursive_selector__ [link container_gen.reference.is_recursive_selector `is_recursive_selector`]]
[def _is_recursive_selector_ [link container_gen.reference.is_recursive_selector is_recursive_selector]]
[def __is_tr1_selector__ [link container_gen.reference.is_tr1_selector `is_tr1_selector`]]
[def _is_tr1_selector_ [link container_gen.reference.is_tr1_selector is_tr1_selector]]
[def __has_stable_iterators_selector__ [link container_gen.reference.has_stable_iters_selector `has_stable_iterators_selector`]]
[def _has_stable_iterators_selector_ [link container_gen.reference.has_stable_iters_selector has_stable_iterators_selector]]
[def __has_emplace_member_function_selector__ [link container_gen.reference.has_emplace_mfunc_selector `has_emplace_member_function_selector`]]
[def _has_emplace_member_function_selector_ [link container_gen.reference.has_emplace_mfunc_selector has_emplace_member_function_selector]]

[/ Autogenerate reference documentation directly from code.]
[/ Bypass Doxygen.]
[import ../../../boost/container_gen/selectors.hpp]
[import ../../../boost/container_gen/container_gen.hpp]
[import ../../../boost/container_gen/emplace_function_gen.hpp]
[import ../../../boost/container_gen/emplace_assoc_function_gen.hpp]
[import ../../../boost/container_gen/is_random_access_selector.hpp]
[import ../../../boost/container_gen/is_associative_selector.hpp]
[import ../../../boost/container_gen/is_unique_assoc_selector.hpp]
[import ../../../boost/container_gen/is_multiple_assoc_selector.hpp]
[import ../../../boost/container_gen/is_flat_assoc_selector.hpp]
[import ../../../boost/container_gen/is_hashed_assoc_selector.hpp]
[import ../../../boost/container_gen/is_ptr_selector.hpp]
[import ../../../boost/container_gen/is_recursive_selector.hpp]
[import ../../../boost/container_gen/is_tr1_selector.hpp]
[import ../../../boost/container_gen/has_stable_iters_selector.hpp]
[import ../../../boost/container_gen/has_emplace_mfunc_selector.hpp]
[import ../../../libs/graph/example/container_gen.cpp]
[import ../../../libs/container_gen/example/output_shape_stats.cpp]
[import ../../../libs/container_gen/example/output_char_tallies.cpp]

[/ index.html Start]

[heading Rationale]
Significant interest was expressed in moving the `container_gen` metafunction
from its current place in the __BGL__ to a more general or first-class
residence.  The relevant discussion is archived here:
[@http://lists.boost.org/Archives/boost/2011/05/181573.php].

[/ index.html End]

[include reference.qbk]
[include changelog.qbk]

