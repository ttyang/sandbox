[/ Generated by doxygen_xml2qbk, don't change, will be overwritten automatically]
[/ Generated from xml/classboost_1_1container_1_1varray.xml]
[#classboost_1_1container_1_1varray]
[section:boost_container_varray boost::container::varray]

'''<indexterm><primary>boost</primary></indexterm><indexterm><primary>container</primary></indexterm><indexterm><primary>varray</primary></indexterm>'''
A variable-size array container with fixed capacity. 

[heading Description]
varray is a sequence container like boost::container::vector with contiguous storage that can change in size, along with the static allocation, low overhead, and fixed capacity of boost::array.

A varray is a sequence that supports random access to elements, constant time insertion and removal of elements at the end, and linear time insertion and removal of elements at the beginning or in the middle. The number of elements in a varray may vary dynamically up to a fixed capacity because elements are stored within the object itself similarly to an array. However, objects are initialized as they are inserted into varray unlike C arrays or std::array which must construct all elements on instantiation. The behavior of varray enables the use of statically allocated elements in cases with complex object lifetime requirements that would otherwise not be trivially possible.

[heading Error Handling]
Insertion beyond the capacity and out of bounds errors result in undefined behavior. The reason for this is because unlike vectors, varray does not perform allocation.

[heading Header]
`#include <boost/container/varray.hpp>`

[heading Synopsis]
[pre
`template<``typename Value``,` `std::size_t Capacity``>`
`class varray`
`{`
`  // ...`
`};`
]

[heading Template parameter(s)]
[table
[[Parameter] [Description]]
[[`Value`][The type of element that will be stored. ]]
[[`std::size_t Capacity`][The maximum number of elements varray can store, fixed at compile time. ]]
]

[heading Typedef(s)]
[table
[[Type] [Description]]
[[[#classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541] `value_type`][The type of elements stored in the container. ]]
[[[#classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb] `size_type`][The unsigned integral type used by the container. ]]
[[[#classboost_1_1container_1_1varray_1a6d393f05372a6f4438252e9cfeec3ef9] `difference_type`][The pointers difference type. ]]
[[[#classboost_1_1container_1_1varray_1a1337df6f9ffabd18c089fc84a4d037f9] `pointer`][The pointer type. ]]
[[[#classboost_1_1container_1_1varray_1a7d3dd66a255ddbbb4d13d103079f55be] `const_pointer`][The const pointer type. ]]
[[[#classboost_1_1container_1_1varray_1a05b75d88cbedf3eab29330fb1548e508] `reference`][The value reference type. ]]
[[[#classboost_1_1container_1_1varray_1a56d0d240489dbc10aa635c824d853eff] `const_reference`][The value const reference type. ]]
[[[#classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85] `iterator`][The iterator type. ]]
[[[#classboost_1_1container_1_1varray_1aa840b50811973d5c88b964bce7378638] `const_iterator`][The const iterator type. ]]
[[[#classboost_1_1container_1_1varray_1ad43f9fe12a748d2ea3df66b0c12bf7c9] `reverse_iterator`][The reverse iterator type. ]]
[[[#classboost_1_1container_1_1varray_1a6a67ad936ad5ccb55f1347a0142c8a2e] `const_reverse_iterator`][The const reverse iterator. ]]
]

[heading Constructor(s) and destructor]
[table
[[Function][Description]]
[[[link classboost_1_1container_1_1varray_1aadb48d269849181defe637d12b159fec `varray()`]][Constructs an empty varray. ]]
[[[link classboost_1_1container_1_1varray_1a7c6f738e55cdd20d403b947931e89e7e `varray(size_type)`]][Constructs a varray containing count default constructed Values. ]]
[[[link classboost_1_1container_1_1varray_1af118f5951453faa55f0e52dcec3df5cb `varray(size_type, value_type const &)`]][Constructs a varray containing count copies of value. ]]
[[[link classboost_1_1container_1_1varray_1ac8ee4a1204ff29f65f0ac17f8b2e289d `varray(Iterator, Iterator)`]][Constructs a varray containing copy of a range [^`[first, last)`]. ]]
[[[link classboost_1_1container_1_1varray_1a3d516423eee1363dbe540b38e580575f `varray(varray const &)`]][Constructs a copy of other varray. ]]
[[[link classboost_1_1container_1_1varray_1a76b8054a64ee1221a50ba9b44f71abc3 `varray(varray<...> const &)`]][Constructs a copy of other varray. ]]
[[[link classboost_1_1container_1_1varray_1a9db6fbaef8af6919105d02f0231528fb `varray(varray &&)`]][Move constructor. Moves Values stored in the other varray to this one. ]]
[[[link classboost_1_1container_1_1varray_1a0be957dfb47329a2815d39cbafef8bd3 `varray(varray<...> &&)`]][Move constructor. Moves Values stored in the other varray to this one. ]]
[[[link classboost_1_1container_1_1varray_1a1390b805a0eb43165d72185e96fa7df1 `~varray()`]][Destructor. Destroys Values stored in this container. ]]
]

[heading Member(s)]
[table
[[Modifier][Function][Description]]
[[][[link classboost_1_1container_1_1varray_1a6fbb1c206cfd358b0a5cc360ca79fb24 `operator=(const varray &)`]][Copy assigns Values stored in the other varray to this one. ]]
[[][[link classboost_1_1container_1_1varray_1a31fe823d544f71713652d7df9d240d00 `operator=(varray<...> const &)`]][Copy assigns Values stored in the other varray to this one. ]]
[[][[link classboost_1_1container_1_1varray_1aba10e6d03d65f8d70d7422f42733b412 `operator=(varray &&)`]][Move assignment. Moves Values stored in the other varray to this one. ]]
[[][[link classboost_1_1container_1_1varray_1afcab7730328f059fd06b97f66b4533af `operator=(varray<...> &&)`]][Move assignment. Moves Values stored in the other varray to this one. ]]
[[][[link classboost_1_1container_1_1varray_1a002fb09972d8a2f11673265d0d06a100 `swap(varray &)`]][Swaps contents of the other varray and this one. ]]
[[][[link classboost_1_1container_1_1varray_1adbe2c73da47f3bb3cd86059a20877ab6 `swap(varray<...> &)`]][Swaps contents of the other varray and this one. ]]
[[][[link classboost_1_1container_1_1varray_1a9de0b0ac75eac1f162f770355c309d9a `resize(size_type)`]][Inserts or erases elements at the end such that the size becomes count. New elements are default constructed. ]]
[[][[link classboost_1_1container_1_1varray_1aeaca57e27ade29051474e05f99cae22a `resize(size_type, value_type const &)`]][Inserts or erases elements at the end such that the size becomes count. New elements are copy constructed from value. ]]
[[][[link classboost_1_1container_1_1varray_1ab971b4cb97973683abb4e47aa47a6468 `reserve(size_type)`]][This call has no effect because the Capacity of this container is constant. ]]
[[][[link classboost_1_1container_1_1varray_1ab8cad0f5aeaed822a5624f50eaa362f4 `push_back(value_type const &)`]][Adds a copy of value at the end. ]]
[[][[link classboost_1_1container_1_1varray_1a4fd37d745ea993c938d8d2bcc0bc1a07 `push_back(value_type &&)`]][Moves value to the end. ]]
[[][[link classboost_1_1container_1_1varray_1abc090953d0e88759dbd9ee68b8cfdd36 `pop_back()`]][Destroys last value and decreases the size. ]]
[[][[link classboost_1_1container_1_1varray_1a7418cf440cd3669c9960396410aad4e2 `insert(iterator, value_type const &)`]][Inserts a copy of element at position. ]]
[[][[link classboost_1_1container_1_1varray_1a3c97b6663d70b5b148cb212fb83d3c50 `insert(iterator, value_type &&)`]][Inserts a move-constructed element at position. ]]
[[][[link classboost_1_1container_1_1varray_1a753eeafe00d6310c4ac43be74b77738c `insert(iterator, size_type, value_type const &)`]][Inserts a count copies of value at position. ]]
[[][[link classboost_1_1container_1_1varray_1a0fbca63b44af8587c197a8e74a627391 `insert(iterator, Iterator, Iterator)`]][Inserts a copy of a range [^`[first, last)`] at position. ]]
[[][[link classboost_1_1container_1_1varray_1a50ba0b1c63037dff5d4da1a87d6d0527 `erase(iterator)`]][Erases Value from position. ]]
[[][[link classboost_1_1container_1_1varray_1a85a3160d07095b74d75427254fe4b8de `erase(iterator, iterator)`]][Erases Values from a range [^`[first, last)`]. ]]
[[][[link classboost_1_1container_1_1varray_1a1784355a0617bebe1b73a581e577ed40 `assign(Iterator, Iterator)`]][Assigns a range [^`[first, last)`] of Values to this container. ]]
[[][[link classboost_1_1container_1_1varray_1a7cc3bf731e182f1273a41745f8e26c29 `assign(size_type, value_type const &)`]][Assigns a count copies of value to this container. ]]
[[][[link classboost_1_1container_1_1varray_1ae74cfa70f9e0fde9327fcf2556542731 `emplace_back(Args &&...)`]][Inserts a Value constructed with [^`std::forward<Args>(args)`]... in the end of the container. ]]
[[][[link classboost_1_1container_1_1varray_1a73cdcc0ab3caaded0bf0dabce1954aee `emplace(iterator, Args &&...)`]][Inserts a Value constructed with [^`std::forward<Args>(args)`]... before position. ]]
[[][[link classboost_1_1container_1_1varray_1a50662ffb9b16c2fa3ffb9e6b564f8781 `clear()`]][Removes all elements from the container. ]]
[[][[link classboost_1_1container_1_1varray_1aa575c41f0cb63441e8a7dbe6a5b0e03b `at(size_type)`]][Returns reference to the i-th element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1aaa8cfb62af1f8dcc74c00fc902a02dda `at(size_type)`]][Returns const reference to the i-th element. ]]
[[][[link classboost_1_1container_1_1varray_1a7928906fd1a6cce0738e943e905bde54 `operator[](size_type)`]][Returns reference to the i-th element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a34c2693dd04e42a18a4b4ec92808789f `operator[](size_type)`]][Returns const reference to the i-th element. ]]
[[][[link classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f `front()`]][Returns reference to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1aefbe5c43c3f58e7d93486a92d92aac47 `front()`]][Returns const reference to the first element. ]]
[[][[link classboost_1_1container_1_1varray_1ac879a0197fb86beacdc11c278daab7a4 `back()`]][Returns reference to the last element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1ac6cbf65ae907eaab5b3d76c175b1bc48 `back()`]][Returns const reference to the first element. ]]
[[][[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 `data()`]][Pointer such that [^`[`[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]`, `[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` + `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` == &`[link classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f front()]]. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a7938e442dc7885b07e32f3867d4e5381 `data()`]][Const pointer such that [^`[`[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]`, `[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` + `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` == &`[link classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f front()]]. ]]
[[][[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 `begin()`]][Returns iterator to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1aa490ebcda805ec9845f1be721d907ad8 `begin()`]][Returns const iterator to the first element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a1fc220adc77f4746985b40d86c8a90e8 `cbegin()`]][Returns const iterator to the first element. ]]
[[][[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac `end()`]][Returns iterator to the one after the last element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1ace7e241acb70f96c67e456b6a1c8d040 `end()`]][Returns const iterator to the one after the last element. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1aa31b29309b0a7256698dbc873f1b80cf `cend()`]][Returns const iterator to the one after the last element. ]]
[[][[link classboost_1_1container_1_1varray_1a5d8caccc720f6aa8c143b876919978ff `rbegin()`]][Returns reverse iterator to the first element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a3e2a64c923e286cdf4e8efbb4cec0996 `rbegin()`]][Returns const reverse iterator to the first element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a7b4f301c0f06b17d946fbb0567b0e900 `crbegin()`]][Returns const reverse iterator to the first element of the reversed container. ]]
[[][[link classboost_1_1container_1_1varray_1a3f2b446da94a4adcf732e500691c66fb `rend()`]][Returns reverse iterator to the one after the last element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1ac236bdd92afcd938957a8450115e449c `rend()`]][Returns const reverse iterator to the one after the last element of the reversed container. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1aa455c0cc57d24e6548db521159839bca `crend()`]][Returns const reverse iterator to the one after the last element of the reversed container. ]]
[[`static`][[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d `capacity()`]][Returns container's capacity. ]]
[[`static`][[link classboost_1_1container_1_1varray_1a4926efc6e9f4d6c3f4d59b2f18340188 `max_size()`]][Returns container's capacity. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a `size()`]][Returns the number of stored elements. ]]
[[ `const`][[link classboost_1_1container_1_1varray_1a1beb131b7aafc6c263529d17a2dcd9ac `empty()`]][Queries if the container contains elements. ]]
]

[#classboost_1_1container_1_1varray_1aadb48d269849181defe637d12b159fec]
[section varray()]
Constructs an empty varray. 

[heading Synopsis]
[pre

`varray``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a7c6f738e55cdd20d403b947931e89e7e]
[section varray(size_type)]
Constructs a varray containing count default constructed Values. 

[heading Synopsis]
[pre

`varray``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``)`
]

[heading Modifier(s)]
``explicit ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of values which will be contained in the container.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's default constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1af118f5951453faa55f0e52dcec3df5cb]
[section varray(size_type, value_type const &)]
Constructs a varray containing count copies of value. 

[heading Synopsis]
[pre

`varray``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``,` [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of copies of a values that will be contained in the container. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value which will be used to copy construct values.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1ac8ee4a1204ff29f65f0ac17f8b2e289d]
[section varray(Iterator, Iterator)]
Constructs a varray containing copy of a range [^`[first, last)`]. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
`varray``(``Iterator` `first``,` `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Iterator`][ `first` ][The iterator to the first element in range. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element in range.]]
]
[heading Precondition(s)]


* [^`distance(first, last) <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]
* Iterator must meet the [^`ForwardTraversalIterator`] concept.



[heading Throws]
If Value's constructor taking a dereferenced Iterator throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a3d516423eee1363dbe540b38e580575f]
[section varray(varray const &)]
Constructs a copy of other varray. 

[heading Synopsis]
[pre

`varray``(`[^[link classboost_1_1container_1_1varray varray]]` const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]` const &`][ `other` ][The varray which content will be copied to this one.]]
]
[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a76b8054a64ee1221a50ba9b44f71abc3]
[section varray(varray<...> const &)]
Constructs a copy of other varray. 

[heading Synopsis]
[pre
`template<``std::size_t C``>`
`varray``(`[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > const &`][ `other` ][The varray which content will be copied to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]].

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a9db6fbaef8af6919105d02f0231528fb]
[section varray(varray &&)]
Move constructor. Moves Values stored in the other varray to this one. 

[heading Synopsis]
[pre

`varray``(`[^[link classboost_1_1container_1_1varray varray]]` &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]` &&`][ `other` ][The varray which content will be moved to this one.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a0be957dfb47329a2815d39cbafef8bd3]
[section varray(varray<...> &&)]
Move constructor. Moves Values stored in the other varray to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``>`
`varray``(`[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &&`][ `other` ][The varray which content will be moved to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a1390b805a0eb43165d72185e96fa7df1]
[section ~varray()]
Destructor. Destroys Values stored in this container. 

[heading Synopsis]
[pre

`~varray``()`
]

[heading Throws]
Nothing

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a6fbb1c206cfd358b0a5cc360ca79fb24]
[section operator=(const varray &)]
Copy assigns Values stored in the other varray to this one. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray varray]]` &` `operator=``(``const `[^[link classboost_1_1container_1_1varray varray]]` &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`const `[^[link classboost_1_1container_1_1varray varray]]` &`][ `other` ][The varray which content will be copied to this one.]]
]
[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a31fe823d544f71713652d7df9d240d00]
[section operator=(varray<...> const &)]
Copy assigns Values stored in the other varray to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``>`
[^[link classboost_1_1container_1_1varray varray]]` &` `operator=``(`[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > const &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > const &`][ `other` ][The varray which content will be copied to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1aba10e6d03d65f8d70d7422f42733b412]
[section operator=(varray &&)]
Move assignment. Moves Values stored in the other varray to this one. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray varray]]` &` `operator=``(`[^[link classboost_1_1container_1_1varray varray]]` &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]` &&`][ `other` ][The varray which content will be moved to this one.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1afcab7730328f059fd06b97f66b4533af]
[section operator=(varray<...> &&)]
Move assignment. Moves Values stored in the other varray to this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``>`
[^[link classboost_1_1container_1_1varray varray]]` &` `operator=``(`[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &&` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &&`][ `other` ][The varray which content will be moved to this one.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws. 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a002fb09972d8a2f11673265d0d06a100]
[section swap(varray &)]
Swaps contents of the other varray and this one. 

[heading Synopsis]
[pre

`void` `swap``(`[^[link classboost_1_1container_1_1varray varray]]` &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]` &`][ `other` ][The varray which content will be swapped with this one's content.]]
]
[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws, 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws,



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1adbe2c73da47f3bb3cd86059a20877ab6]
[section swap(varray<...> &)]
Swaps contents of the other varray and this one. 

[heading Synopsis]
[pre
`template<``std::size_t C``>`
`void` `swap``(`[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &` `other``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray varray]]`< `[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]`, C > &`][ `other` ][The varray which content will be swapped with this one's content.]]
]
[heading Precondition(s)]
[^`other.size() <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]` && `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` <= other.capacity()`]

[heading Throws]


* If [^`boost::has_nothrow_move<Value>::value`] is [^`true`] and Value's move constructor or move assignment throws, 
* If [^`boost::has_nothrow_move<Value>::value`] is [^`false`] and Value's copy constructor or copy assignment throws,



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a9de0b0ac75eac1f162f770355c309d9a]
[section resize(size_type)]
Inserts or erases elements at the end such that the size becomes count. New elements are default constructed. 

[heading Synopsis]
[pre

`void` `resize``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of elements which will be stored in the container.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's default constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1aeaca57e27ade29051474e05f99cae22a]
[section resize(size_type, value_type const &)]
Inserts or erases elements at the end such that the size becomes count. New elements are copy constructed from value. 

[heading Synopsis]
[pre

`void` `resize``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``,` [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of elements which will be stored in the container. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1ab971b4cb97973683abb4e47aa47a6468]
[section reserve(size_type)]
This call has no effect because the Capacity of this container is constant. 

[heading Synopsis]
[pre

`void` `reserve``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of elements which the container should be able to contain.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
Nothing.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1ab8cad0f5aeaed822a5624f50eaa362f4]
[section push_back(value_type const &)]
Adds a copy of value at the end. 

[heading Synopsis]
[pre

`void` `push_back``(`[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a4fd37d745ea993c938d8d2bcc0bc1a07]
[section push_back(value_type &&)]
Moves value to the end. 

[heading Synopsis]
[pre

`void` `push_back``(`[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` &&` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` &&`][ `value` ][The value to move construct the new element.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's move constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1abc090953d0e88759dbd9ee68b8cfdd36]
[section pop_back()]
Destroys last value and decreases the size. 

[heading Synopsis]
[pre

`void` `pop_back``()`
]

[heading Precondition(s)]
[^`!empty()`]

[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a7418cf440cd3669c9960396410aad4e2]
[section insert(iterator, value_type const &)]
Inserts a copy of element at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `insert``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``,` [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position at which the new value will be inserted. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value used to copy construct the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]. 
* [^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]



[heading Throws]


* If Value's copy constructor or copy assignment throws 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1varray_1a3c97b6663d70b5b148cb212fb83d3c50]
[section insert(iterator, value_type &&)]
Inserts a move-constructed element at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `insert``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``,` [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` &&` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position at which the new value will be inserted. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` &&`][ `value` ][The value used to move construct the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]. 
* [^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]



[heading Throws]
If Value's move constructor or move assignment throws.

[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1varray_1a753eeafe00d6310c4ac43be74b77738c]
[section insert(iterator, size_type, value_type const &)]
Inserts a count copies of value at position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `insert``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``,`
                [^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``,`
                [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The number of new elements which will be inserted. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value used to copy construct new elements.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]. 
* [^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` + count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]



[heading Throws]


* If Value's copy constructor or copy assignment throws. 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a0fbca63b44af8587c197a8e74a627391]
[section insert(iterator, Iterator, Iterator)]
Inserts a copy of a range [^`[first, last)`] at position. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `insert``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``,`
                `Iterator` `first``,`
                `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[`Iterator`][ `first` ][The iterator to the first element of a range used to construct new elements. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element of a range used to construct new elements.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]. 
* [^`distance(first, last) <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]
* [^`Iterator`] must meet the [^`ForwardTraversalIterator`] concept.



[heading Throws]


* If Value's constructor and assignment taking a dereferenced [^`Iterator`]. 
* If Value's move constructor or move assignment throws.



[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a50ba0b1c63037dff5d4da1a87d6d0527]
[section erase(iterator)]
Erases Value from position. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `erase``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position of the element which will be erased from the container.]]
]
[heading Precondition(s)]
[^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`)`]

[heading Throws]
If Value's move assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a85a3160d07095b74d75427254fe4b8de]
[section erase(iterator, iterator)]
Erases Values from a range [^`[first, last)`]. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `erase``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `first``,` [^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `first` ][The position of the first element of a range which will be erased from the container. ]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `last` ][The position of the one after the last element of a range which will be erased from the container.]]
]
[heading Precondition(s)]


* [^`first`] and [^`last`] must define a valid range 
* iterators must be in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]



[heading Throws]
If Value's move assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a1784355a0617bebe1b73a581e577ed40]
[section assign(Iterator, Iterator)]
Assigns a range [^`[first, last)`] of Values to this container. 

[heading Synopsis]
[pre
`template<``typename Iterator``>`
`void` `assign``(``Iterator` `first``,` `Iterator` `last``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Iterator`][ `first` ][The iterator to the first element of a range used to construct new content of this container. ]]
[[`Iterator`][ `last` ][The iterator to the one after the last element of a range used to construct new content of this container.]]
]
[heading Precondition(s)]
[^`distance(first, last) <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws,

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1a7cc3bf731e182f1273a41745f8e26c29]
[section assign(size_type, value_type const &)]
Assigns a count copies of value to this container. 

[heading Synopsis]
[pre

`void` `assign``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `count``,` [^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &` `value``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `count` ][The new number of elements which will be container in the container. ]]
[[[^[link classboost_1_1container_1_1varray_1ab6af6c9dab76040eb46a97616dffc541 value_type]]` const &`][ `value` ][The value which will be used to copy construct the new content.]]
]
[heading Precondition(s)]
[^`count <= `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If Value's copy constructor or copy assignment throws.

[heading Complexity]
Linear O(N). 

[endsect]

[#classboost_1_1container_1_1varray_1ae74cfa70f9e0fde9327fcf2556542731]
[section emplace_back(Args &&...)]
Inserts a Value constructed with [^`std::forward<Args>(args)`]... in the end of the container. 

[heading Synopsis]
[pre
`template<``class... Args``>`
`void` `emplace_back``(``Args &&...` `args``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[`Args &&...`][ `args` ][The arguments of the constructor of the new element which will be created at the end of the container.]]
]
[heading Precondition(s)]
[^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]

[heading Throws]
If in-place constructor throws or Value's move constructor throws.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a73cdcc0ab3caaded0bf0dabce1954aee]
[section emplace(iterator, Args &&...)]
Inserts a Value constructed with [^`std::forward<Args>(args)`]... before position. 

[heading Synopsis]
[pre
`template<``class... Args``>`
[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `emplace``(`[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `position``,` `Args &&...` `args``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]]][ `position` ][The position at which new elements will be inserted. ]]
[[`Args &&...`][ `args` ][The arguments of the constructor of the new element.]]
]
[heading Precondition(s)]


* [^`position`] must be a valid iterator of [^`*this`] in range [^`[`[link classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8 begin()]`, `[link classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac end()]`]`]
* [^[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]` < `[link classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d capacity()]]



[heading Throws]
If in-place constructor throws or if Value's move constructor or move assignment throws.

[heading Complexity]
Constant or linear. 

[endsect]

[#classboost_1_1container_1_1varray_1a50662ffb9b16c2fa3ffb9e6b564f8781]
[section clear()]
Removes all elements from the container. 

[heading Synopsis]
[pre

`void` `clear``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aa575c41f0cb63441e8a7dbe6a5b0e03b]
[section at(size_type)]
Returns reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a05b75d88cbedf3eab29330fb1548e508 reference]] `at``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `i``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]]

[heading Returns]
reference to the i-th element from the beginning of the container.
[heading Throws]
[^`std::out_of_range`] exception by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aaa8cfb62af1f8dcc74c00fc902a02dda]
[section at(size_type)]
Returns const reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a56d0d240489dbc10aa635c824d853eff const_reference]] `at``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `i``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]]

[heading Returns]
const reference to the i-th element from the beginning of the container.
[heading Throws]
[^`std::out_of_range`] exception by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a7928906fd1a6cce0738e943e905bde54]
[section operator\[\](size_type)]
Returns reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a05b75d88cbedf3eab29330fb1548e508 reference]] `operator[]``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `i``)`
]

[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]]

[heading Returns]
reference to the i-th element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a34c2693dd04e42a18a4b4ec92808789f]
[section operator\[\](size_type)]
Returns const reference to the i-th element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a56d0d240489dbc10aa635c824d853eff const_reference]] `operator[]``(`[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `i``)`
]

[heading Modifier(s)]
``const ``[heading Parameter(s)]
[table 
[[Type][Name][Description]]
[[[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]]][ `i` ][The element's index.]]
]
[heading Precondition(s)]
[^`i < `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]]

[heading Returns]
const reference to the i-th element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f]
[section front()]
Returns reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a05b75d88cbedf3eab29330fb1548e508 reference]] `front``()`
]

[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
reference to the first element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aefbe5c43c3f58e7d93486a92d92aac47]
[section front()]
Returns const reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a56d0d240489dbc10aa635c824d853eff const_reference]] `front``()`
]

[heading Modifier(s)]
``const ``[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
const reference to the first element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1ac879a0197fb86beacdc11c278daab7a4]
[section back()]
Returns reference to the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a05b75d88cbedf3eab29330fb1548e508 reference]] `back``()`
]

[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
reference to the last element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1ac6cbf65ae907eaab5b3d76c175b1bc48]
[section back()]
Returns const reference to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a56d0d240489dbc10aa635c824d853eff const_reference]] `back``()`
]

[heading Modifier(s)]
``const ``[heading Precondition(s)]
[^`!empty`]()

[heading Returns]
const reference to the last element from the beginning of the container.
[heading Throws]
Nothing by default.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531]
[section data()]
Pointer such that [^`[`[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]`, `[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` + `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` == &`[link classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f front()]]. 

[heading Synopsis]
[pre

`Value *` `data``()`
]

[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a7938e442dc7885b07e32f3867d4e5381]
[section data()]
Const pointer such that [^`[`[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]`, `[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` + `[link classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a size()]`)`] is a valid range. For a non-empty vector [^[link classboost_1_1container_1_1varray_1a43c8feac1f4544ca75a1bf629c84c531 data()]` == &`[link classboost_1_1container_1_1varray_1ae2c9ed2f8d15ca78bf2f3489c139fd0f front()]]. 

[heading Synopsis]
[pre

`const Value *` `data``()`
]

[heading Modifier(s)]
``const ``[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a58a54f51e24232ba42524ac4686707a8]
[section begin()]
Returns iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `begin``()`
]

[heading Returns]
iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aa490ebcda805ec9845f1be721d907ad8]
[section begin()]
Returns const iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1aa840b50811973d5c88b964bce7378638 const_iterator]] `begin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a1fc220adc77f4746985b40d86c8a90e8]
[section cbegin()]
Returns const iterator to the first element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1aa840b50811973d5c88b964bce7378638 const_iterator]] `cbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator to the first element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aa055435cb8902b1e3a80f339ea3ceeac]
[section end()]
Returns iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1add2e8a4f7dc027cdf8a7daff4cecdd85 iterator]] `end``()`
]

[heading Returns]
iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1ace7e241acb70f96c67e456b6a1c8d040]
[section end()]
Returns const iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1aa840b50811973d5c88b964bce7378638 const_iterator]] `end``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aa31b29309b0a7256698dbc873f1b80cf]
[section cend()]
Returns const iterator to the one after the last element. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1aa840b50811973d5c88b964bce7378638 const_iterator]] `cend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_iterator pointing to the one after the last element contained in the vector.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a5d8caccc720f6aa8c143b876919978ff]
[section rbegin()]
Returns reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1ad43f9fe12a748d2ea3df66b0c12bf7c9 reverse_iterator]] `rbegin``()`
]

[heading Returns]
reverse_iterator pointing to the beginning of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a3e2a64c923e286cdf4e8efbb4cec0996]
[section rbegin()]
Returns const reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a6a67ad936ad5ccb55f1347a0142c8a2e const_reverse_iterator]] `rbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the beginning of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a7b4f301c0f06b17d946fbb0567b0e900]
[section crbegin()]
Returns const reverse iterator to the first element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a6a67ad936ad5ccb55f1347a0142c8a2e const_reverse_iterator]] `crbegin``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the beginning of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a3f2b446da94a4adcf732e500691c66fb]
[section rend()]
Returns reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1ad43f9fe12a748d2ea3df66b0c12bf7c9 reverse_iterator]] `rend``()`
]

[heading Returns]
reverse_iterator pointing to the one after the last element of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1ac236bdd92afcd938957a8450115e449c]
[section rend()]
Returns const reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a6a67ad936ad5ccb55f1347a0142c8a2e const_reverse_iterator]] `rend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the one after the last element of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1aa455c0cc57d24e6548db521159839bca]
[section crend()]
Returns const reverse iterator to the one after the last element of the reversed container. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1a6a67ad936ad5ccb55f1347a0142c8a2e const_reverse_iterator]] `crend``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
const_reverse_iterator pointing to the one after the last element of the reversed varray.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a062947339f470aa55ccf7183223e092d]
[section capacity()]
Returns container's capacity. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `capacity``()`
]

[heading Modifier(s)]
``static ``[heading Returns]
container's capacity.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a4926efc6e9f4d6c3f4d59b2f18340188]
[section max_size()]
Returns container's capacity. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `max_size``()`
]

[heading Modifier(s)]
``static ``[heading Returns]
container's capacity.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a28c88cd5eafe53fff6724f56fe9d976a]
[section size()]
Returns the number of stored elements. 

[heading Synopsis]
[pre

[^[link classboost_1_1container_1_1varray_1ab447fa7cf4cde78edf308d77afd3cbdb size_type]] `size``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
Number of elements contained in the container.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[#classboost_1_1container_1_1varray_1a1beb131b7aafc6c263529d17a2dcd9ac]
[section empty()]
Queries if the container contains elements. 

[heading Synopsis]
[pre

`bool` `empty``()`
]

[heading Modifier(s)]
``const ``[heading Returns]
true if the number of elements contained in the container is equal to 0.
[heading Throws]
Nothing.

[heading Complexity]
Constant O(1). 

[endsect]

[endsect]

