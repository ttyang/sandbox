[/==============================================================================
    Copyright (C) 2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section TriviallyCopyConstructible]

[heading Description]
Describes types whose copy constructor is equivalent to `memcpy`.

[heading Definition]

[import ../../../../include/boost/generic/std_concept/concepts/trivially_copy_constructible.hpp]

[table TriviallyCopyConstructible Definition
    [[Boost.Generic Definition] [N2914 Definition]]
    [[[TriviallyCopyConstructible]]
[``
concept TriviallyCopyConstructible<typename T> : CopyConstructible<T> { }

// Requires: for every type T that is a trivial type, a reference, or a class
// type with a trivial copy constructor, a concept map
// TriviallyCopyConstructible<T> shall be implicitly defined in namespace std.
``]]
]

[heading Header]

 #include <boost/generic/std_concept/concepts/trivially_copy_constructible.hpp>

[section_in_n2914_heading `TriviallyCopyConstructible`..[['concept.copymove]]]

[heading Differences From N2914]

TODO: Fill this in

[endsect]
