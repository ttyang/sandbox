[/==============================================================================
    Copyright (C) 2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section FreeStoreAllocatable]

[heading Description]
Describes types for which objects and arrays of objects can be allocated on or
freed from the free store with `new` and `delete`.

[heading Definition]

[import ../../../../include/boost/generic/std_concept/concepts/free_store_allocatable.hpp]

[table FreeStoreAllocatable Definition
    [[Boost.Generic Definition] [N2914 Definition]]
    [[[FreeStoreAllocatable]]
[``
auto concept FreeStoreAllocatable<typename T> {
  void* T::operator new(size_t size);
  void T::operator delete(void*);

  void* T::operator new[](size_t size) {
    return T::operator new(size);
  }

  void T::operator delete[](void* ptr) {
    T::operator delete(ptr);
  }

  void* T::operator new(size_t size, const nothrow_t&) {
    try {
      return T::operator new(size);
    } catch(...) {
      return 0;
    }
  }

  void* T::operator new[](size_t size, const nothrow_t&) {
    try {
      return T::operator new[](size);
    } catch(...) {
      return 0;
    }
  }

  void T::operator delete(void* ptr, const nothrow_t&) {
    T::operator delete(ptr);
  }

  void T::operator delete[](void* ptr, const nothrow_t&) {
    T::operator delete[](ptr);
  }
}
``]]
]

[heading Header]

 #include <boost/generic/std_concept/concepts/free_store_allocatable.hpp>

[section_in_n2914_heading `FreeStoreAllocatable`..[['concept.memory]]]

[heading Differences From N2914]

TODO: Fill this in

[endsect]
