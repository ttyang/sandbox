[/==============================================================================
    Copyright (C) 2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section EqualityComparable]

[heading Description]
Describes types whose values can be compared for equality with `operator==`,
which is an equivalence relation.

[heading Definition]

[import ../../../../include/boost/generic/std_concept/concepts/equality_comparable.hpp]

[table EqualityComparable Definition
    [[Boost.Generic Definition] [N2914 Definition]]
    [[[EqualityComparable]]
[``
auto concept EqualityComparable<typename T> : HasEqualTo<T, T> {
  bool operator!=(const T& a, const T& b) { return !(a == b); }

  axiom Consistency(T a, T b) {
    (a == b) == !(a != b);
  }

  axiom Reflexivity(T a) { a == a; }

  axiom Symmetry(T a, T b) {
    if (a == b)
      b == a;
  }

  axiom Transitivity(T a, T b, T c) {
    if (a == b && b == c)
      a == c;
  }
}
``]]
]

[heading Header]

 #include <boost/generic/std_concept/concepts/equality_comparable.hpp>

[section_in_n2914_heading `EqualityComparable`..[['concept.comparison]]]

[heading Differences From N2914]

TODO: Fill this in

[endsect]
