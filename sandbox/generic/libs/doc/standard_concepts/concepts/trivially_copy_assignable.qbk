[/==============================================================================
    Copyright (C) 2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section TriviallyCopyAssignable]

[heading Description]
Describes types whose copy-assignment operator is equivalent to `memcpy`.

[heading Definition]

[import ../../../../include/boost/generic/std_concept/concepts/trivially_copy_assignable.hpp]

[table TriviallyCopyAssignable Definition
    [[Boost.Generic Definition] [N2914 Definition]]
    [[[TriviallyCopyAssignable]]
[``
concept TriviallyCopyAssignable<typename T> : CopyAssignable<T> { }

// Requires: for every type T that is a trivial type (ref) or a class type with
// a trivial copy assignment operator, a concept map TriviallyCopyAssignable<T>
// shall be implicitly defined in namespace std.
``]]
]

[heading Header]

 #include <boost/generic/std_concept/concepts/trivially_copy_assignable.hpp>

[section_in_n2914_heading `TriviallyCopyAssignable`..[['concept.copymove]]]

[heading Differences From N2914]

TODO: Fill this in

[endsect]
