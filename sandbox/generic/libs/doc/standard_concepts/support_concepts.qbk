[/==============================================================================
    Copyright (C) 2011-2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[section Support Concepts]

[heading Overview]

The concepts described in this section correspond to the "support concepts" of
[n2914] that are specified to be automatically defined in each translation unit.
Because this is not possible in a library-level implementation, these concepts
are instead contained in header files that must be explicitly included. This may
be done in one of two ways:

 // Include all of the support concepts
 #include <boost/generic/std_concept/support_concepts.hpp>

 // -or-

 // Include the support concepts on a case-by-case basis
 #include <boost/generic/std_concept/support_concepts/arithmetic_type.hpp>
 #include <boost/generic/std_concept/support_concepts/class.hpp>
 // etc.

[note These concepts as described in N2914 are generally [explicit_concepts],
but they are implemented in [boost_generic] as [auto_concepts] with an internal
[concept_requires_clause] that depends on the C++ standard library type traits.
This difference should generally not be noticeable in practice when using the
library, but it deserves mention.]

[include support_concepts/arithmetic_type.qbk]
[include support_concepts/enumeration_type.qbk]
[include support_concepts/class.qbk]
[include support_concepts/class_type.qbk]
[include support_concepts/derived_from.qbk]
[include support_concepts/floating_point_type.qbk]
[include support_concepts/integral_constant_expression_type.qbk]
[include support_concepts/integral_type.qbk]
[include support_concepts/literal_type.qbk]
[include support_concepts/member_pointee_type.qbk]
[include support_concepts/non_type_template_parameter_type.qbk]
[include support_concepts/object_type.qbk]
[include support_concepts/pointee_type.qbk]
[include support_concepts/polymorphic_class.qbk]
[include support_concepts/referent_type.qbk]
[include support_concepts/returnable.qbk]
[include support_concepts/same_type.qbk]
[include support_concepts/scalar_type.qbk]
[include support_concepts/standard_layout_type.qbk]
[include support_concepts/trivial_type.qbk]
[include support_concepts/union.qbk]
[include support_concepts/value_type.qbk]
[include support_concepts/variable_type.qbk]

[endsect]
