[/==============================================================================
    Copyright (C) 2011-2012 Matt Calabrese

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
==============================================================================/]

[chapter Generic
    [quickbook 1.5]
    [authors [Calabrese, Matt]]
    [copyright 2010, 2011, 2012 Matt Calabrese]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[template bgl[] [@http://www.boost.org/doc/libs/release/libs/graph/ BGL]]
[template boost_build[] [@http://www.boost.org/ Boost.Build]]
[template boost_generic[] =Boost.Generic=]
[template bsl[] [@http://opensource.org/licenses/BSL-1.0 Boost Software License]]
[template clang[] [@http://clang.llvm.org/ Clang]]
[template concepts[] [@http://www.generic-programming.org/about/glossary.php?term=concept concepts]]
[template cpp11[] [@http://en.wikipedia.org/wiki/C%2B%2B11 C++11]]
[template gcc[] [@http://gcc.gnu.org/ GCC]]
[template gcc_cl_define[] [@http://gcc.gnu.org/onlinedocs/gcc/Preprocessor-Options.html#index-D-929 GCC's -D]]
[template generic_programming[] [@http://lcsd05.cs.tamu.edu/papers/dos_reis_et_al.pdf Generic Programming]]
[template quickbook[] [@http://www.boost.org/tools/quickbook/index.html Quickbook]]
[template n2914[] [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2914.pdf N2914]]
[template n3351[] [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3351.pdf N3351]]
[template tag_dispatch[] [@http://www.boost.org/community/generic_programming.html#tag_dispatching tag dispatch]]
[template sandbox[] [@http://svn.boost.org/svn/boost/sandbox/ sandbox]]
[template trunk[] [@http://svn.boost.org/svn/boost/trunk trunk]]

[def ArithmeticType [link generic.standard_concepts.support_concepts.arithmetictype ArithmeticType]]
[def EnumerationType [link generic.standard_concepts.support_concepts.enumerationtype EnumerationType]]
[def Class [link generic.standard_concepts.support_concepts.class Class]]
[def ClassType [link generic.standard_concepts.support_concepts.classtype ClassType]]
[def DerivedFrom [link generic.standard_concepts.support_concepts.derivedfrom DerivedFrom]]
[def FloatingPointType [link generic.standard_concepts.support_concepts.floatingpointtype FloatingPointType]]
[def IntegralConstantExpressionType [link generic.standard_concepts.support_concepts.integralconstantexpressiontype IntegralConstantExpressionType]]
[def IntegralType [link generic.standard_concepts.support_concepts.integraltype IntegralType]]
[def LiteralType [link generic.standard_concepts.support_concepts.literaltype LiteralType]]
[def MemberPointeeType [link generic.standard_concepts.support_concepts.memberpointeetype MemberPointeeType]]
[def NonTypeTemplateParameterType [link generic.standard_concepts.support_concepts.nontypetemplateparametertype NonTypeTemplateParameterType]]
[def ObjectType [link generic.standard_concepts.support_concepts.objecttype ObjectType]]
[def PointeeType [link generic.standard_concepts.support_concepts.pointeetype PointeeType]]
[def PolymorphicClass [link generic.standard_concepts.support_concepts.polymorphicclass PolymorphicClass]]
[def ReferentType [link generic.standard_concepts.support_concepts.referenttype ReferentType]]
[def Returnable [link generic.standard_concepts.support_concepts.returnable Returnable]]
[def SameType [link generic.standard_concepts.support_concepts.sametype SameType]]
[def ScalarType [link generic.standard_concepts.support_concepts.scalartype ScalarType]]
[def StandardLayoutType [link generic.standard_concepts.support_concepts.standardlayouttype StandardLayoutType]]
[def TrivialType [link generic.standard_concepts.support_concepts.trivialtype TrivialType]]
[def Union [link generic.standard_concepts.support_concepts.union Union]]
[def ValueType [link generic.standard_concepts.support_concepts.valuetype ValueType]]
[def VariableType [link generic.standard_concepts.support_concepts.variabletype VariableType]]

[def ArithmeticLike [link generic.standard_concepts.concepts.arithmeticlike ArithmeticLike]]
[def Callable [link generic.standard_concepts.concepts.callable Callable]]
[def Constructible [link generic.standard_concepts.concepts.constructible Constructible]]
[def Convertible [link generic.standard_concepts.concepts.convertible Convertible]]
[def CopyAssignable [link generic.standard_concepts.concepts.copyassignable CopyAssignable]]
[def CopyConstructible [link generic.standard_concepts.concepts.copyconstructible CopyConstructible]]
[def DefaultConstructible [link generic.standard_concepts.concepts.defaultconstructible DefaultConstructible]]
[def EqualityComparable [link generic.standard_concepts.concepts.equalitycomparable EqualityComparable]]
[def EquivalenceRelation [link generic.standard_concepts.concepts.equivalencerelation EquivalenceRelation]]
[def ExplicitlyConvertible [link generic.standard_concepts.concepts.explicitlyconvertible ExplicitlyConvertible]]
[def FloatingPointLike [link generic.standard_concepts.concepts.floatingpointlike FloatingPointLike]]
[def FreeStoreAllocatable [link generic.standard_concepts.concepts.freestoreallocatable FreeStoreAllocatable]]
[def HasAddressOf [link generic.standard_concepts.concepts.hasaddressof HasAddressOf]]
[def HasAssign [link generic.standard_concepts.concepts.hasassign HasAssign]]
[def HasBitAnd [link generic.standard_concepts.concepts.hasbitand HasBitAnd]]
[def HasBitAndAssign [link generic.standard_concepts.concepts.hasbitandassign HasBitAndAssign]]
[def HasBitOr [link generic.standard_concepts.concepts.hasbitor HasBitOr]]
[def HasBitOrAssign [link generic.standard_concepts.concepts.hasbitorassign HasBitOrAssign]]
[def HasBitXor [link generic.standard_concepts.concepts.hasbitxor HasBitXor]]
[def HasBitXorAssign [link generic.standard_concepts.concepts.hasbitxorassign HasBitXorAssign]]
[def HasComma [link generic.standard_concepts.concepts.hascomma HasComma]]
[def HasComplement [link generic.standard_concepts.concepts.hascomplement HasComplement]]
[def HasConstructor [link generic.standard_concepts.concepts.hasconstructor HasConstructor]]
[def HasDereference [link generic.standard_concepts.concepts.hasdereference HasDereference]]
[def HasDestructor [link generic.standard_concepts.concepts.hasdestructor HasDestructor]]
[def HasDivide [link generic.standard_concepts.concepts.hasdivide HasDivide]]
[def HasDivideAssign [link generic.standard_concepts.concepts.hasdivideassign HasDivideAssign]]
[def HasEqualTo [link generic.standard_concepts.concepts.hasequalto HasEqualTo]]
[def HasGreater [link generic.standard_concepts.concepts.hasgreater HasGreater]]
[def HasGreaterEqual [link generic.standard_concepts.concepts.hasgreaterequal HasGreaterEqual]]
[def HasLeftShift [link generic.standard_concepts.concepts.hasleftshift HasLeftShift]]
[def HasLeftShiftAssign [link generic.standard_concepts.concepts.hasleftshiftassign HasLeftShiftAssign]]
[def HasLess [link generic.standard_concepts.concepts.hasless HasLess]]
[def HasLessEqual [link generic.standard_concepts.concepts.haslessequal HasLessEqual]]
[def HasLogicalAnd [link generic.standard_concepts.concepts.haslogicaland HasLogicalAnd]]
[def HasLogicalNot [link generic.standard_concepts.concepts.haslogicalnot HasLogicalNot]]
[def HasLogicalOr [link generic.standard_concepts.concepts.haslogicalor HasLogicalOr]]
[def HasMinus [link generic.standard_concepts.concepts.hasminus HasMinus]]
[def HasMinusAssign [link generic.standard_concepts.concepts.hasminusassign HasMinusAssign]]
[def HasModulus [link generic.standard_concepts.concepts.hasmodulus HasModulus]]
[def HasModulusAssign [link generic.standard_concepts.concepts.hasmodulusassign HasModulusAssign]]
[def HasMultiply [link generic.standard_concepts.concepts.hasmultiply HasMultiply]]
[def HasMultiplyAssign [link generic.standard_concepts.concepts.hasmultiplyassign HasMultiplyAssign]]
[def HasNegate [link generic.standard_concepts.concepts.hasnegate HasNegate]]
[def HasNotEqualTo [link generic.standard_concepts.concepts.hasnotequalto HasNotEqualTo]]
[def HasPlus [link generic.standard_concepts.concepts.hasplus HasPlus]]
[def HasPlusAssign [link generic.standard_concepts.concepts.hasplusassign HasPlusAssign]]
[def HasPostdecrement [link generic.standard_concepts.concepts.haspostdecrement HasPostdecrement]]
[def HasPostincrement [link generic.standard_concepts.concepts.haspostincrement HasPostincrement]]
[def HasPredecrement [link generic.standard_concepts.concepts.haspredecrement HasPredecrement]]
[def HasPreincrement [link generic.standard_concepts.concepts.haspreincrement HasPreincrement]]
[def HasRightShift [link generic.standard_concepts.concepts.hasrightshift HasRightShift]]
[def HasRightShiftAssign [link generic.standard_concepts.concepts.hasrightshiftassign HasRightShiftAssign]]
[def HasSubscript [link generic.standard_concepts.concepts.hassubscript HasSubscript]]
[def HasSwap [link generic.standard_concepts.concepts.hasswap HasSwap]]
[def HasUnaryPlus [link generic.standard_concepts.concepts.hasunaryplus HasUnaryPlus]]
[def HasVirtualDestructor [link generic.standard_concepts.concepts.hasvirtualdestructor HasVirtualDestructor]]
[def IdentityOf [link generic.standard_concepts.concepts.identityof IdentityOf]]
[def IntegralLike [link generic.standard_concepts.concepts.integrallike IntegralLike]]
[def LessThanComparable [link generic.standard_concepts.concepts.lessthancomparable LessThanComparable]]
[def LvalueReference [link generic.standard_concepts.concepts.lvaluereference LvalueReference]]
[def MoveAssignable [link generic.standard_concepts.concepts.moveassignable MoveAssignable]]
[def MoveConstructible [link generic.standard_concepts.concepts.moveconstructible MoveConstructible]]
[def NothrowDestructible [link generic.standard_concepts.concepts.nothrowdestructible NothrowDestructible]]
[def Predicate [link generic.standard_concepts.concepts.predicate Predicate]]
[def Regular [link generic.standard_concepts.concepts.regular Regular]]
[def RvalueOf [link generic.standard_concepts.concepts.rvalueof RvalueOf]]
[def RvalueReference [link generic.standard_concepts.concepts.rvaluereference RvalueReference]]
[def Semiregular [link generic.standard_concepts.concepts.semiregular Semiregular]]
[def SignedIntegralLike [link generic.standard_concepts.concepts.signedintegrallike SignedIntegralLike]]
[def StrictWeakOrder [link generic.standard_concepts.concepts.strictweakorder StrictWeakOrder]]
[def Swappable [link generic.standard_concepts.concepts.swappable Swappable]]
[def TriviallyCopyAssignable [link generic.standard_concepts.concepts.triviallycopyassignable TriviallyCopyAssignable]]
[def TriviallyCopyConstructible [link generic.standard_concepts.concepts.triviallycopyconstructible TriviallyCopyC[']onstructible]]
[def TriviallyDefaultConstructible [link generic.standard_concepts.concepts.triviallydefaultconstructible TriviallyDefaultC[']onstructible]]
[def TriviallyDestructible [link generic.standard_concepts.concepts.triviallydestructible TriviallyDestructible]]
[def True [link generic.standard_concepts.concepts.true True]]
[def UnsignedIntegralLike [link generic.standard_concepts.concepts.unsignedintegrallike UnsignedIntegralLike]]

[def BackEmplacementContainer [link generic.standard_concepts.container_concepts.backemplacementcontainer BackEmplacementContainer]]
[def BackInsertionContainer [link generic.standard_concepts.container_concepts.backinsertioncontainer BackInsertionContainer]]
[def Container [link generic.standard_concepts.container_concepts.container Container]]
[def EmplacementContainer [link generic.standard_concepts.container_concepts.emplacementcontainer EmplacementContainer]]
[def FrontEmplacementContainer [link generic.standard_concepts.container_concepts.frontemplacementcontainer FrontEmplacementC[']ontainer]]
[def FrontInsertionContainer [link generic.standard_concepts.container_concepts.frontinsertioncontainer FrontInsertionContainer]]
[def InsertionContainer [link generic.standard_concepts.container_concepts.insertioncontainer InsertionContainer]]
[def MemberBackEmplacementContainer [link generic.standard_concepts.container_concepts.memberbackemplacementcontainer MemberBackEmplacementContainer]]
[def MemberBackInsertionContainer [link generic.standard_concepts.container_concepts.memberbackinsertioncontainer MemberBackInsertionContainer]]
[def MemberContainer [link generic.standard_concepts.container_concepts.membercontainer MemberContainer]]
[def MemberEmplacementContainer [link generic.standard_concepts.container_concepts.memberemplacementcontainer MemberEmplacementC[']ontainer]]
[def MemberFrontEmplacementContainer [link generic.standard_concepts.container_concepts.memberfrontemplacementcontainer MemberFrontEmplacementC[']ontainer]]
[def MemberFrontInsertionContainer [link generic.standard_concepts.container_concepts.memberfrontinsertioncontainer MemberFrontInsertionC[']ontainer]]
[def MemberInsertionContainer [link generic.standard_concepts.container_concepts.memberinsertioncontainer MemberInsertionC[']ontainer]]
[def MemberQueueLikeContainer [link generic.standard_concepts.container_concepts.memberqueuelikecontainer MemberQueueLikeContainer]]
[def MemberRangeInsertionContainer [link generic.standard_concepts.container_concepts.memberrangeinsertioncontainer MemberRangeInsertionC[']ontainer]]
[def MemberStackLikeContainer [link generic.standard_concepts.container_concepts.memberstacklikecontainer MemberStackLikeContainer]]
[def QueueLikeContainer [link generic.standard_concepts.container_concepts.queuelikecontainer QueueLikeContainer]]
[def RangeInsertionContainer [link generic.standard_concepts.container_concepts.rangeinsertioncontainer RangeInsertionC[']ontainer]]
[def StackLikeContainer [link generic.standard_concepts.container_concepts.stacklikecontainer StackLikeContainer]]

[def boost/generic/std_concept/support_concepts.hpp [@../../../include/boost/generic/std_concept/support_concepts.hpp boost/generic/std_concept/support_concepts.hpp]]

[def boost/generic/std_concept/support_concepts/arithmetic_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/arithmetic_type.hpp boost/generic/std_concept/support_concepts/arithmetic_type.hpp]]
[def boost/generic/std_concept/support_concepts/class.hpp [@../../../include/boost/generic/std_concept/support_concepts/class.hpp boost/generic/std_concept/support_concepts/class.hpp]]
[def boost/generic/std_concept/support_concepts/class_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/class_type.hpp boost/generic/std_concept/support_concepts/class_type.hpp]]
[def boost/generic/std_concept/support_concepts/derived_from.hpp [@../../../include/boost/generic/std_concept/support_concepts/derived_from.hpp boost/generic/std_concept/support_concepts/derived_from.hpp]]
[def boost/generic/std_concept/support_concepts/enumeration_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/enumeration_type.hpp boost/generic/std_concept/support_concepts/enumeration_type.hpp]]
[def boost/generic/std_concept/support_concepts/floating_point_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/floating_point_type.hpp boost/generic/std_concept/support_concepts/floating_point_type.hpp]]
[def boost/generic/std_concept/support_concepts/integral_constant_expression_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/integral_constant_expression_type.hpp boost/generic/std_concept/support_concepts/integral_constant_expression_type.hpp]]
[def boost/generic/std_concept/support_concepts/integral_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/integral_type.hpp boost/generic/std_concept/support_concepts/integral_type.hpp]]
[def boost/generic/std_concept/support_concepts/literal_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/literal_type.hpp boost/generic/std_concept/support_concepts/literal_type.hpp]]
[def boost/generic/std_concept/support_concepts/member_pointee_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/member_pointee_type.hpp boost/generic/std_concept/support_concepts/member_pointee_type.hpp]]
[def boost/generic/std_concept/support_concepts/non_type_template_parameter_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/non_type_template_parameter_type.hpp boost/generic/std_concept/support_concepts/non_type_template_parameter_type.hpp]]
[def boost/generic/std_concept/support_concepts/object_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/object_type.hpp boost/generic/std_concept/support_concepts/object_type.hpp]]
[def boost/generic/std_concept/support_concepts/pointee_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/pointee_type.hpp boost/generic/std_concept/support_concepts/pointee_type.hpp]]
[def boost/generic/std_concept/support_concepts/polymorphic_class.hpp [@../../../include/boost/generic/std_concept/support_concepts/polymorphic_class.hpp boost/generic/std_concept/support_concepts/polymorphic_class.hpp]]
[def boost/generic/std_concept/support_concepts/referent_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/referent_type.hpp boost/generic/std_concept/support_concepts/referent_type.hpp]]
[def boost/generic/std_concept/support_concepts/returnable.hpp [@../../../include/boost/generic/std_concept/support_concepts/returnable.hpp boost/generic/std_concept/support_concepts/returnable.hpp]]
[def boost/generic/std_concept/support_concepts/same_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/same_type.hpp boost/generic/std_concept/support_concepts/same_type.hpp]]
[def boost/generic/std_concept/support_concepts/scalar_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/scalar_type.hpp boost/generic/std_concept/support_concepts/scalar_type.hpp]]
[def boost/generic/std_concept/support_concepts/standard_layout_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/standard_layout_type.hpp boost/generic/std_concept/support_concepts/standard_layout_type.hpp]]
[def boost/generic/std_concept/support_concepts/trivial_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/trivial_type.hpp boost/generic/std_concept/support_concepts/trivial_type.hpp]]
[def boost/generic/std_concept/support_concepts/union.hpp [@../../../include/boost/generic/std_concept/support_concepts/union.hpp boost/generic/std_concept/support_concepts/union.hpp]]
[def boost/generic/std_concept/support_concepts/value_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/value_type.hpp boost/generic/std_concept/support_concepts/value_type.hpp]]
[def boost/generic/std_concept/support_concepts/variable_type.hpp [@../../../include/boost/generic/std_concept/support_concepts/variable_type.hpp boost/generic/std_concept/support_concepts/variable_type.hpp]]

[def boost/generic/std_concept/concepts.hpp [@../../../include/boost/generic/std_concept/concepts.hpp boost/generic/std_concept/concepts.hpp]]

[def boost/generic/std_concept/concepts/arithmetic_like.hpp [@../../../include/boost/generic/std_concept/concepts/arithmetic_like.hpp boost/generic/std_concept/concepts/arithmetic_like.hpp]]
[def boost/generic/std_concept/concepts/callable.hpp [@../../../include/boost/generic/std_concept/concepts/callable.hpp boost/generic/std_concept/concepts/callable.hpp]]
[def boost/generic/std_concept/concepts/constructible.hpp [@../../../include/boost/generic/std_concept/concepts/constructible.hpp boost/generic/std_concept/concepts/constructible.hpp]]
[def boost/generic/std_concept/concepts/convertible.hpp [@../../../include/boost/generic/std_concept/concepts/convertible.hpp boost/generic/std_concept/concepts/convertible.hpp]]
[def boost/generic/std_concept/concepts/copy_assignable.hpp [@../../../include/boost/generic/std_concept/concepts/copy_assignable.hpp boost/generic/std_concept/concepts/copy_assignable.hpp]]
[def boost/generic/std_concept/concepts/copy_constructible.hpp [@../../../include/boost/generic/std_concept/concepts/copy_constructible.hpp boost/generic/std_concept/concepts/copy_constructible.hpp]]
[def boost/generic/std_concept/concepts/default_constructible.hpp [@../../../include/boost/generic/std_concept/concepts/default_constructible.hpp boost/generic/std_concept/concepts/default_constructible.hpp]]
[def boost/generic/std_concept/concepts/equality_comparable.hpp [@../../../include/boost/generic/std_concept/concepts/equality_comparable.hpp boost/generic/std_concept/concepts/equality_comparable.hpp]]
[def boost/generic/std_concept/concepts/equivalence_relation.hpp [@../../../include/boost/generic/std_concept/concepts/equivalence_relation.hpp boost/generic/std_concept/concepts/equivalence_relation.hpp]]
[def boost/generic/std_concept/concepts/explicitly_convertible.hpp [@../../../include/boost/generic/std_concept/concepts/explicitly_convertible.hpp boost/generic/std_concept/concepts/explicitly_convertible.hpp]]
[def boost/generic/std_concept/concepts/floating_point_like.hpp [@../../../include/boost/generic/std_concept/concepts/floating_point_like.hpp boost/generic/std_concept/concepts/floating_point_like.hpp]]
[def boost/generic/std_concept/concepts/free_store_allocatable.hpp [@../../../include/boost/generic/std_concept/concepts/free_store_allocatable.hpp boost/generic/std_concept/concepts/free_store_allocatable.hpp]]
[def boost/generic/std_concept/concepts/has_address_of.hpp [@../../../include/boost/generic/std_concept/concepts/has_address_of.hpp boost/generic/std_concept/concepts/has_address_of.hpp]]
[def boost/generic/std_concept/concepts/has_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_assign.hpp boost/generic/std_concept/concepts/has_assign.hpp]]
[def boost/generic/std_concept/concepts/has_bit_and.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_and.hpp boost/generic/std_concept/concepts/has_bit_and.hpp]]
[def boost/generic/std_concept/concepts/has_bit_and_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_and_assign.hpp boost/generic/std_concept/concepts/has_bit_and_assign.hpp]]
[def boost/generic/std_concept/concepts/has_bit_or.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_or.hpp boost/generic/std_concept/concepts/has_bit_or.hpp]]
[def boost/generic/std_concept/concepts/has_bit_or_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_or_assign.hpp boost/generic/std_concept/concepts/has_bit_or_assign.hpp]]
[def boost/generic/std_concept/concepts/has_bit_xor.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_xor.hpp boost/generic/std_concept/concepts/has_bit_xor.hpp]]
[def boost/generic/std_concept/concepts/has_bit_xor_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_bit_xor_assign.hpp boost/generic/std_concept/concepts/has_bit_xor_assign.hpp]]
[def boost/generic/std_concept/concepts/has_comma.hpp [@../../../include/boost/generic/std_concept/concepts/has_comma.hpp boost/generic/std_concept/concepts/has_comma.hpp]]
[def boost/generic/std_concept/concepts/has_complement.hpp [@../../../include/boost/generic/std_concept/concepts/has_complement.hpp boost/generic/std_concept/concepts/has_complement.hpp]]
[def boost/generic/std_concept/concepts/has_constructor.hpp [@../../../include/boost/generic/std_concept/concepts/has_constructor.hpp boost/generic/std_concept/concepts/has_constructor.hpp]]
[def boost/generic/std_concept/concepts/has_dereference.hpp [@../../../include/boost/generic/std_concept/concepts/has_dereference.hpp boost/generic/std_concept/concepts/has_dereference.hpp]]
[def boost/generic/std_concept/concepts/has_destructor.hpp [@../../../include/boost/generic/std_concept/concepts/has_destructor.hpp boost/generic/std_concept/concepts/has_destructor.hpp]]
[def boost/generic/std_concept/concepts/has_divide.hpp [@../../../include/boost/generic/std_concept/concepts/has_divide.hpp boost/generic/std_concept/concepts/has_divide.hpp]]
[def boost/generic/std_concept/concepts/has_divide_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_divide_assign.hpp boost/generic/std_concept/concepts/has_divide_assign.hpp]]
[def boost/generic/std_concept/concepts/has_equal_to.hpp [@../../../include/boost/generic/std_concept/concepts/has_equal_to.hpp boost/generic/std_concept/concepts/has_equal_to.hpp]]
[def boost/generic/std_concept/concepts/has_greater.hpp [@../../../include/boost/generic/std_concept/concepts/has_greater.hpp boost/generic/std_concept/concepts/has_greater.hpp]]
[def boost/generic/std_concept/concepts/has_greater_equal.hpp [@../../../include/boost/generic/std_concept/concepts/has_greater_equal.hpp boost/generic/std_concept/concepts/has_greater_equal.hpp]]
[def boost/generic/std_concept/concepts/has_left_shift.hpp [@../../../include/boost/generic/std_concept/concepts/has_left_shift.hpp boost/generic/std_concept/concepts/has_left_shift.hpp]]
[def boost/generic/std_concept/concepts/has_left_shift_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_left_shift_assign.hpp boost/generic/std_concept/concepts/has_left_shift_assign.hpp]]
[def boost/generic/std_concept/concepts/has_less.hpp [@../../../include/boost/generic/std_concept/concepts/has_less.hpp boost/generic/std_concept/concepts/has_less.hpp]]
[def boost/generic/std_concept/concepts/has_less_equal.hpp [@../../../include/boost/generic/std_concept/concepts/has_less_equal.hpp boost/generic/std_concept/concepts/has_less_equal.hpp]]
[def boost/generic/std_concept/concepts/has_logical_and.hpp [@../../../include/boost/generic/std_concept/concepts/has_logical_and.hpp boost/generic/std_concept/concepts/has_logical_and.hpp]]
[def boost/generic/std_concept/concepts/has_logical_not.hpp [@../../../include/boost/generic/std_concept/concepts/has_logical_not.hpp boost/generic/std_concept/concepts/has_logical_not.hpp]]
[def boost/generic/std_concept/concepts/has_logical_or.hpp [@../../../include/boost/generic/std_concept/concepts/has_logical_or.hpp boost/generic/std_concept/concepts/has_logical_or.hpp]]
[def boost/generic/std_concept/concepts/has_minus.hpp [@../../../include/boost/generic/std_concept/concepts/has_minus.hpp boost/generic/std_concept/concepts/has_minus.hpp]]
[def boost/generic/std_concept/concepts/has_minus_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_minus_assign.hpp boost/generic/std_concept/concepts/has_minus_assign.hpp]]
[def boost/generic/std_concept/concepts/has_modulus.hpp [@../../../include/boost/generic/std_concept/concepts/has_modulus.hpp boost/generic/std_concept/concepts/has_modulus.hpp]]
[def boost/generic/std_concept/concepts/has_modulus_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_modulus_assign.hpp boost/generic/std_concept/concepts/has_modulus_assign.hpp]]
[def boost/generic/std_concept/concepts/has_multiply.hpp [@../../../include/boost/generic/std_concept/concepts/has_multiply.hpp boost/generic/std_concept/concepts/has_multiply.hpp]]
[def boost/generic/std_concept/concepts/has_multiply_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_multiply_assign.hpp boost/generic/std_concept/concepts/has_multiply_assign.hpp]]
[def boost/generic/std_concept/concepts/has_negate.hpp [@../../../include/boost/generic/std_concept/concepts/has_negate.hpp boost/generic/std_concept/concepts/has_negate.hpp]]
[def boost/generic/std_concept/concepts/has_not_equal_to.hpp [@../../../include/boost/generic/std_concept/concepts/has_not_equal_to.hpp boost/generic/std_concept/concepts/has_not_equal_to.hpp]]
[def boost/generic/std_concept/concepts/has_plus.hpp [@../../../include/boost/generic/std_concept/concepts/has_plus.hpp boost/generic/std_concept/concepts/has_plus.hpp]]
[def boost/generic/std_concept/concepts/has_plus_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_plus_assign.hpp boost/generic/std_concept/concepts/has_plus_assign.hpp]]
[def boost/generic/std_concept/concepts/has_postdecrement.hpp [@../../../include/boost/generic/std_concept/concepts/has_postdecrement.hpp boost/generic/std_concept/concepts/has_postdecrement.hpp]]
[def boost/generic/std_concept/concepts/has_postincrement.hpp [@../../../include/boost/generic/std_concept/concepts/has_postincrement.hpp boost/generic/std_concept/concepts/has_postincrement.hpp]]
[def boost/generic/std_concept/concepts/has_predecrement.hpp [@../../../include/boost/generic/std_concept/concepts/has_predecrement.hpp boost/generic/std_concept/concepts/has_predecrement.hpp]]
[def boost/generic/std_concept/concepts/has_preincrement.hpp [@../../../include/boost/generic/std_concept/concepts/has_preincrement.hpp boost/generic/std_concept/concepts/has_preincrement.hpp]]
[def boost/generic/std_concept/concepts/has_right_shift.hpp [@../../../include/boost/generic/std_concept/concepts/has_right_shift.hpp boost/generic/std_concept/concepts/has_right_shift.hpp]]
[def boost/generic/std_concept/concepts/has_right_shift_assign.hpp [@../../../include/boost/generic/std_concept/concepts/has_right_shift_assign.hpp boost/generic/std_concept/concepts/has_right_shift_assign.hpp]]
[def boost/generic/std_concept/concepts/has_subscript.hpp [@../../../include/boost/generic/std_concept/concepts/has_subscript.hpp boost/generic/std_concept/concepts/has_subscript.hpp]]
[def boost/generic/std_concept/concepts/has_swap.hpp [@../../../include/boost/generic/std_concept/concepts/has_swap.hpp boost/generic/std_concept/concepts/has_swap.hpp]]
[def boost/generic/std_concept/concepts/has_unary_plus.hpp [@../../../include/boost/generic/std_concept/concepts/has_unary_plus.hpp boost/generic/std_concept/concepts/has_unary_plus.hpp]]
[def boost/generic/std_concept/concepts/has_virtual_destructor.hpp [@../../../include/boost/generic/std_concept/concepts/has_virtual_destructor.hpp boost/generic/std_concept/concepts/has_virtual_destructor.hpp]]
[def boost/generic/std_concept/concepts/identity_of.hpp [@../../../include/boost/generic/std_concept/concepts/identity_of.hpp boost/generic/std_concept/concepts/identity_of.hpp]]
[def boost/generic/std_concept/concepts/integral_like.hpp [@../../../include/boost/generic/std_concept/concepts/integral_like.hpp boost/generic/std_concept/concepts/integral_like.hpp]]
[def boost/generic/std_concept/concepts/less_than_comparable.hpp [@../../../include/boost/generic/std_concept/concepts/less_than_comparable.hpp boost/generic/std_concept/concepts/less_than_comparable.hpp]]
[def boost/generic/std_concept/concepts/lvalue_reference.hpp [@../../../include/boost/generic/std_concept/concepts/lvalue_reference.hpp boost/generic/std_concept/concepts/lvalue_reference.hpp]]
[def boost/generic/std_concept/concepts/move_assignable.hpp [@../../../include/boost/generic/std_concept/concepts/move_assignable.hpp boost/generic/std_concept/concepts/move_assignable.hpp]]
[def boost/generic/std_concept/concepts/move_constructible.hpp [@../../../include/boost/generic/std_concept/concepts/move_constructible.hpp boost/generic/std_concept/concepts/move_constructible.hpp]]
[def boost/generic/std_concept/concepts/nothrow_destructible.hpp [@../../../include/boost/generic/std_concept/concepts/nothrow_destructible.hpp boost/generic/std_concept/concepts/nothrow_destructible.hpp]]
[def boost/generic/std_concept/concepts/predicate.hpp [@../../../include/boost/generic/std_concept/concepts/predicate.hpp boost/generic/std_concept/concepts/predicate.hpp]]
[def boost/generic/std_concept/concepts/regular.hpp [@../../../include/boost/generic/std_concept/concepts/regular.hpp boost/generic/std_concept/concepts/regular.hpp]]
[def boost/generic/std_concept/concepts/rvalue_of.hpp [@../../../include/boost/generic/std_concept/concepts/rvalue_of.hpp boost/generic/std_concept/concepts/rvalue_of.hpp]]
[def boost/generic/std_concept/concepts/rvalue_reference.hpp [@../../../include/boost/generic/std_concept/concepts/rvalue_reference.hpp boost/generic/std_concept/concepts/rvalue_reference.hpp]]
[def boost/generic/std_concept/concepts/semiregular.hpp [@../../../include/boost/generic/std_concept/concepts/semiregular.hpp boost/generic/std_concept/concepts/semiregular.hpp]]
[def boost/generic/std_concept/concepts/signed_integral_like.hpp [@../../../include/boost/generic/std_concept/concepts/signed_integral_like.hpp boost/generic/std_concept/concepts/signed_integral_like.hpp]]
[def boost/generic/std_concept/concepts/strict_weak_order.hpp [@../../../include/boost/generic/std_concept/concepts/strict_weak_order.hpp boost/generic/std_concept/concepts/strict_weak_order.hpp]]
[def boost/generic/std_concept/concepts/swappable.hpp [@../../../include/boost/generic/std_concept/concepts/swappable.hpp boost/generic/std_concept/concepts/swappable.hpp]]
[def boost/generic/std_concept/concepts/trivially_copy_assignable.hpp [@../../../include/boost/generic/std_concept/concepts/trivially_copy_assignable.hpp boost/generic/std_concept/concepts/trivially_copy_assignable.hpp]]
[def boost/generic/std_concept/concepts/trivially_copy_constructible.hpp [@../../../include/boost/generic/std_concept/concepts/trivially_copy_constructible.hpp boost/generic/std_concept/concepts/trivially_copy_constructible.hpp]]
[def boost/generic/std_concept/concepts/trivially_default_constructible.hpp [@../../../include/boost/generic/std_concept/concepts/trivially_default_constructible.hpp boost/generic/std_concept/concepts/trivially_default_constructible.hpp]]
[def boost/generic/std_concept/concepts/trivially_destructible.hpp [@../../../include/boost/generic/std_concept/concepts/trivially_destructible.hpp boost/generic/std_concept/concepts/trivially_destructible.hpp]]
[def boost/generic/std_concept/concepts/true.hpp [@../../../include/boost/generic/std_concept/concepts/true.hpp boost/generic/std_concept/concepts/true.hpp]]
[def boost/generic/std_concept/concepts/unsigned_integral_like.hpp [@../../../include/boost/generic/std_concept/concepts/unsigned_integral_like.hpp boost/generic/std_concept/concepts/unsigned_integral_like.hpp]]

[def boost/generic/std_concept/iterator_concepts.hpp [@../../../include/boost/generic/std_concept/iterator_concepts.hpp boost/generic/std_concept/iterator_concepts.hpp]]

[def boost/generic/std_concept/iterator_concepts/bidirectional_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/bidirectional_iterator.hpp boost/generic/std_concept/iterator_concepts/bidirectional_iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/forward_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/forward_iterator.hpp boost/generic/std_concept/iterator_concepts/forward_iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/input_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/input_iterator.hpp boost/generic/std_concept/iterator_concepts/input_iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/iterator.hpp boost/generic/std_concept/iterator_concepts/iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/output_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/output_iterator.hpp boost/generic/std_concept/iterator_concepts/output_iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/random_access_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/random_access_iterator.hpp boost/generic/std_concept/iterator_concepts/random_access_iterator.hpp]]
[def boost/generic/std_concept/iterator_concepts/range.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/range.hpp boost/generic/std_concept/iterator_concepts/range.hpp]]
[def boost/generic/std_concept/iterator_concepts/shuffle_iterator.hpp [@../../../include/boost/generic/std_concept/iterator_concepts/shuffle_iterator.hpp boost/generic/std_concept/iterator_concepts/shuffle_iterator.hpp]]

[def boost/generic/std_concept/memory_concepts.hpp [@../../../include/boost/generic/std_concept/memory_concepts.hpp boost/generic/std_concept/memory_concepts.hpp]]

[def boost/generic/std_concept/memory_concepts/allocatable_element.hpp [@../../../include/boost/generic/std_concept/memory_concepts/allocatable_element.hpp boost/generic/std_concept/memory_concepts/allocatable_element.hpp]]
[def boost/generic/std_concept/memory_concepts/allocator.hpp [@../../../include/boost/generic/std_concept/memory_concepts/allocator.hpp boost/generic/std_concept/memory_concepts/allocator.hpp]]
[def boost/generic/std_concept/memory_concepts/constructible_with_allocator.hpp [@../../../include/boost/generic/std_concept/memory_concepts/constructible_with_allocator.hpp boost/generic/std_concept/memory_concepts/constructible_with_allocator.hpp]]
[def boost/generic/std_concept/memory_concepts/has_allocator.hpp [@../../../include/boost/generic/std_concept/memory_concepts/has_allocator.hpp boost/generic/std_concept/memory_concepts/has_allocator.hpp]]
[def boost/generic/std_concept/memory_concepts/legacy_allocator.hpp [@../../../include/boost/generic/std_concept/memory_concepts/legacy_allocator.hpp boost/generic/std_concept/memory_concepts/legacy_allocator.hpp]]
[def boost/generic/std_concept/memory_concepts/uses_allocator.hpp [@../../../include/boost/generic/std_concept/memory_concepts/uses_allocator.hpp boost/generic/std_concept/memory_concepts/uses_allocator.hpp]]

[def boost/generic/std_concept/container_concepts.hpp [@../../../include/boost/generic/std_concept/container_concepts.hpp boost/generic/std_concept/container_concepts.hpp]]

[def boost/generic/std_concept/container_concepts/back_emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/back_emplacement_container.hpp boost/generic/std_concept/container_concepts/back_emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/back_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/back_insertion_container.hpp boost/generic/std_concept/container_concepts/back_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/container.hpp [@../../../include/boost/generic/std_concept/container_concepts/container.hpp boost/generic/std_concept/container_concepts/container.hpp]]
[def boost/generic/std_concept/container_concepts/emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/emplacement_container.hpp boost/generic/std_concept/container_concepts/emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/front_emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/front_emplacement_container.hpp boost/generic/std_concept/container_concepts/front_emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/front_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/front_insertion_container.hpp boost/generic/std_concept/container_concepts/front_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/insertion_container.hpp boost/generic/std_concept/container_concepts/insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_back_emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_back_emplacement_container.hpp boost/generic/std_concept/container_concepts/member_back_emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_back_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_back_insertion_container.hpp boost/generic/std_concept/container_concepts/member_back_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_container.hpp boost/generic/std_concept/container_concepts/member_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_emplacement_container.hpp boost/generic/std_concept/container_concepts/member_emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_front_emplacement_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_front_emplacement_container.hpp boost/generic/std_concept/container_concepts/member_front_emplacement_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_front_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_front_insertion_container.hpp boost/generic/std_concept/container_concepts/member_front_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_insertion_container.hpp boost/generic/std_concept/container_concepts/member_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_queue_like_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_queue_like_container.hpp boost/generic/std_concept/container_concepts/member_queue_like_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_range_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_range_insertion_container.hpp boost/generic/std_concept/container_concepts/member_range_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/member_stack_like_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/member_stack_like_container.hpp boost/generic/std_concept/container_concepts/member_stack_like_container.hpp]]
[def boost/generic/std_concept/container_concepts/queue_like_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/queue_like_container.hpp boost/generic/std_concept/container_concepts/queue_like_container.hpp]]
[def boost/generic/std_concept/container_concepts/range_insertion_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/range_insertion_container.hpp boost/generic/std_concept/container_concepts/range_insertion_container.hpp]]
[def boost/generic/std_concept/container_concepts/stack_like_container.hpp [@../../../include/boost/generic/std_concept/container_concepts/stack_like_container.hpp boost/generic/std_concept/container_concepts/stack_like_container.hpp]]

[template section_in_n2914_heading[name section_id]

[heading Section in N2914]

The corresponding definition of [name] may be found in the [n2914] section
[section_id].
]

[template intrinsic_concept_differences[]
In [n2914] this concept is `explicit` with concept maps implicitly defined for
the implementation's arithmetic types. In [boost_generic], this concept is
`auto` and is defined via the standard's `type_traits` facilities and True.
]

[include preface.qbk]
[include getting_started.qbk]
[include standard_concepts.qbk]
[include future_direction.qbk]
[include acknowledgments.qbk]
