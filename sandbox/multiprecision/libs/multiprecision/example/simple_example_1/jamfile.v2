# multiprecision/libs/multiprecision/example/simple_example_1/jamfile.v2

# Runs some simple examples using bjam.

# Copyright Paul A. Bristow 2011

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import testing ;

project
  : requirements
		#<library>/boost/test//boost_test_exec_monitor/<link>static
		# But this original version does not use Boost.Test.
		# (See elsewhere for tests using Boost.Test)
		<include>../../../.. 
		<include>../../../../boost/ # MP Headers.
		<define>BOOST_ALL_NO_LIB=1 # Why?
		<define>BOOST_MULTIPRECISION_BACKEND_MP_FLOAT_TYPE_EFX # Could also be BOOST_MULTIPRECISION_BACKEND_MP_FLOAT_TYPE_GMP or BOOST_MULTIPRECISION_BACKEND_MP_FLOAT_TYPE_MFPR.
		<define>BOOST_MULTIPRECISION_BACKEND_MP_FLOAT_DIGITS10=50 # Overriding the default of 100 for testing purposes.
		# But has no effect without bjam -a option?
		
		<toolset>gcc:<cxxflags>-Wextra
		<toolset>gcc:<cxxflags>-Wshadow
		<toolset>gcc:<warnings-as-errors>on
		<toolset>gcc:<cxxflags>-Wno-long-long
		<toolset>gcc:<cxxflags>-Wcast-align
		<toolset>intel:<warnings-as-errors>on
		
		-<toolset>msvc:<cxxflags>/Za # Requires MS extensions, so explictly cancel /Za to *enable extensions*.
		<toolset>msvc:<asynch-exceptions>on # Needed for Boost.Test
		<toolset>msvc:<warnings>all
		<toolset>msvc:<warnings-as-errors>on
		<toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
		<toolset>msvc:<define>_SCL_SECURE_NO_DEPRECATE
		<toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
		<toolset>msvc:<define>_CRT_SECURE_NO_WARNINGS
		# <toolset>msvc:<define>BOOST_MULTIPRECISION_BACKEND_MP_FLOAT_DIGITS10=100 # Overriding the default of 50 (for testing MSVC only)?
		
		# Warning suppression:
		<toolset>msvc:<cxxflags>/wd4224 # nonstandard extension used : formal parameter 'arg' was previously defined as a type.
		<toolset>msvc:<cxxflags>/wd4127 # expression is constant.
  ;

    # Simple example 1 from Paul Bristow.
 test-suite "multiprecision examples" :
		[
		  run ./simple_example_1.cpp
		      
		      # Source files required .
		      ../../src/backends/float/mp_float.cpp
		      ../../src/backends/float/mp_float_base.cpp
		      ../../src/backends/float/efx/mp_float_efx.cpp
		      ../../src/functions/constants/constants.cpp
		      ../../src/functions/elementary/elementary_complex.cpp
		      ../../src/functions/elementary/elementary_math.cpp
		      ../../src/functions/elementary/elementary_hyper_g.cpp
		      ../../src/functions/elementary/elementary_trans.cpp
		      ../../src/functions/elementary/elementary_trig.cpp

		]
  ;
  
# Output is at 

# /boost-sandbox/multiprecision/libs/multiprecision/example/simple_example_1/bin/simple_example_1.test/msvc-10.0/debug/asynch-exceptions-on/threading-multi/simple_example_1.output
