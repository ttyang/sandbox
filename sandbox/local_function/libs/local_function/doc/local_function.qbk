
[/ Copyright (C) 2009-2011 Lorenzo Caminiti ]
[/ Use, modification, and distribution is subject to the Boost Software ]
[/ License, Version 1.0 (see accompanying file LICENSE_1_0.txt or a ]
[/ copy at http://www.boost.org/LICENSE_1_0.txt). ]

[library Boost.LocalFunction
    [quickbook 1.5]
    [version 1.0.0 ]
    [copyright 2009-2012 Lorenzo Caminiti]
    [purpose declare functions at local scope]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [authors [Caminiti <email>lorcaminiti@gmail.com</email>, Lorenzo]]
    [category Function Objects and Higher-Order Programming]
    [id local_function]
    [dirname local_function]
]

[def __CPP03__ [@http://www.open-std.org/JTC1/SC22/WG21/docs/standards C++03]]
[def __CPP11__ [@http://www.open-std.org/JTC1/SC22/WG21/ C++11]]
[def __C99__ [@http://www.open-std.org/jtc1/sc22/wg14/www/projects#9899 C99]]
[def __Boost__ [@http://www.boost.org/ Boost]]
[def __Boost_LocalFunction__ [@http://www.boost.org/doc/libs/release/libs/local_function/doc/html/index.html Boost.LocalFunction]]
[def __Boost_ScopeExit__ [@http://www.boost.org/doc/libs/release/libs/scope_exit/doc/html/index.html Boost.ScopeExit]]
[def __Boost_Test__ [@http://www.boost.org/doc/libs/release/libs/test/doc/html/index.html Boost.Test]]
[def __Boost_Lambda__ [@http://www.boost.org/doc/libs/release/doc/html/lambda.html Boost.Lambda]]
[def __Boost_Phoenix__ [@http://www.boost.org/doc/libs/release/libs/spirit/phoenix/index.html Boost.Phoenix]]
[def __Boost_Preprocessor__ [@http://www.boost.org/doc/libs/release/libs/preprocessor/doc/index.html Boost.Preprocessor]]
[def __Boost_MPL__ [@http://www.boost.org/doc/libs/release/libs/mpl/doc/index.html Boost.MPL]]
[def __Boost_ConceptCheck__ [@http://www.boost.org/doc/libs/release/libs/concept_check/doc/index.html Boost.ConceptCheck]]
[def __Boost_Parameter__ [@http://www.boost.org/doc/libs/release/libs/parameter/doc/index.html Boost.Paramater]]
[def __Boost_Typeof__ [@http://www.boost.org/doc/libs/release/doc/html/typeof.html Boost.Typeof]]
[def __Boost_Function__ [@http://www.boost.org/doc/libs/release/doc/html/function.html Boost.Function]]
[def __Boost_TypeTraits__ [@http://www.boost.org/doc/libs/release/libs/type_traits/doc/html/index.html Boost.TypeTraits]]
[def __Boost_Utility__ [@http://www.boost.org/doc/libs/release/libs/utility/doc/html/index.html Boost.Utility]]
[def __Boost_Chrono__ [@http://www.boost.org/doc/libs/release/libs/chrono/doc/html/index.html Boost.Chrono]]
[def __CPP11_lambda__ [@http://en.wikipedia.org/wiki/C%2B%2B0x#Lambda_functions_and_expressions C++11 lambda]]
[def __LISP__ [@http://en.wikipedia.org/wiki/Lisp_(programming_language) LISP]]
[def __Contractpp__ [@http://sourceforge.net/projects/contractpp Contract++]]
[def __D_Programming_Language__ [@http://d.digitalmars.com D Programming Language]]
[def __expression_template__ [@http://en.wikibooks.org/wiki/More_C%2B%2B_Idioms/Expression-template expression template]]
[def __N1613__ [@http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2004/n1613.pdf \[N1613\]]]
[def __N2511__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2511.html \[N2511\]]]
[def __N2529__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2529.pdf \[N2529\]]]
[def __N2550__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2550.pdf \[N2550\]]]
[def __N2657__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2657.htm \[N2657\]]]

[def __Introduction__ [link boost_local.Introduction Introduction]]
[def __Getting_Started__ [link boost_local.Getting_Started Getting Started]]
[def __Tutorial__ [link boost_local.Tutorial Tutorial]]
[def __Advanced_Topics__ [link boost_local.Advanced_Topics Advanced Topics]]
[def __Reference__ [@reference.html Reference]]
[def __Examples__ [link boost_local.Examples Examples]]
[def __Alternatives__ [link boost_local.Alternatives Alternatives]]
[def __No_Variadic_Macros__ [link boost_local.No_Variadic_Macros No Variadic Macros]]
[def __Implementation__ [link boost_local.Implementation Implementation]]
[def __Release_Notes__ [link boost_local.Release_Notes Release Notes]]
[def __Bibliography__ [link boost_local.Bibliography Bibliography]]
[def __Acknowledgments__ [link boost_local.Acknowledgments Acknowledgments]]

[import ../test/add.cpp]
[import ../test/add_seq.cpp]
[import ../test/add_lambda.cpp]
[import ../test/add_nobind.cpp]
[import ../test/ten.cpp]
[import ../test/add_this.cpp]
[import ../test/add_template.cpp]
[import ../test/add_default.cpp]
[import ../test/add_with_default.cpp]
[import ../test/return_assign.cpp]
[import ../test/transform.cpp]
[import ../test/typeof.cpp]
[import ../test/typeof_template.cpp]
[import ../test/add_typed.cpp]
[import ../test/add_inline.cpp]
[import ../test/nesting.cpp]
[import ../test/factorial.cpp]
[import ../test/overload.cpp]
[import ../test/add_except.cpp]
[import ../test/add_classifiers.cpp]
[import ../test/seq.cpp]

[import ../example/const_block.cpp]
[import ../example/gcc_lambda.cpp]
[import ../example/gcc_lambda_cpp11.cpp]
[import ../example/scope_exit.cpp]
[import ../example/scope_exit.hpp]
[import ../example/impl_tparam_tricks.cpp]
[import ../example/impl_pp_keyword.cpp]
[import ../example/impl_factorial.cpp]

This library allows to declare functions at local scope within an enclosing function.

[include introduction.qbk]
[include getting_started.qbk]
[include tutorial.qbk]
[include advanced_topics.qbk]
[xinclude ../reference.xml]
[include examples.qbk]
[include alternatives.qbk]
[include no_variadic_macros.qbk]
[include implementation.qbk]
[include release_notes.qbk]
[include bibliography.qbk]
[include acknowledgements.qbk]

