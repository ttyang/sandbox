
[/ Copyright (C) 2008-2012 Lorenzo Caminiti ]
[/ Distributed under the Boost Software License, Version 1.0 ]
[/ (see accompanying file LICENSE_1_0.txt or a copy at ]
[/ http://www.boost.org/LICENSE_1_0.txt) ]
[/ Home at http://sourceforge.net/projects/contractpp ]

[library Contract++
    [quickbook 1.5]
    [version 0.4.1]
    [authors [Caminiti <email>lorcaminiti@gmail.com</email>, Lorenzo]]
    [copyright 2008-2012 Lorenzo Caminiti]
    [license Distributed under the Boost Software License, Version 1.0 (see accompanying file LICENSE_1_0.txt or a copy at [@http://www.boost.org/LICENSE_1_0.txt])]
    [/ purpose Contract Programming for C++]
    [/ category Correctness and Testing]
]

[template file[dir name] '''<ulink url="../../'''[dir]'''/'''[name]'''">'''[^[name]]'''</ulink>''']

[def __CXX03__ [@http://en.wikipedia.org/wiki/C%2B%2B C++03]]
[def __CXX11__ [@http://en.wikipedia.org/wiki/C%2B%2B11 C++11]]
[def __C99__ [@http://en.wikipedia.org/wiki/C99 C99]]
[def __Java__ [@http://en.wikipedia.org/wiki/Java_(programming_language) Java]]
[def __Ada__ [@http://en.wikipedia.org/wiki/Ada_(programming_language) Ada]]
[def __Python__ [@http://www.python.org/ Python]]
[def __Eiffel__ [@http://en.wikipedia.org/wiki/Eiffel_(programming_language) Eiffel]]
[def __D__ [@http://dlang.org D]]
[def __substitution_principle__ [@http://en.wikipedia.org/wiki/Liskov_substitution_principle substitution principle]]
[def __Doxygen__ [@http://www.doxygen.org Doxygen]]
[def __SFINAE__ [@http://en.wikipedia.org/wiki/Substitution_failure_is_not_an_error SFINAE]]

[def __Boost__ [@http://www.boost.org Boost]]
[def __Boost_ConceptCheck__ [@http://www.boost.org/doc/libs/release/libs/concept_check Boost.ConceptCheck]]
[def __Boost_Config__ [@http://www.boost.org/doc/libs/release/libs/config Boost.Config]]
[def __Boost_Foreach__ [@http://www.boost.org/doc/libs/release/libs/foreach Boost.Foreach]]
[def __Boost_Function__ [@http://www.boost.org/doc/libs/release/libs/function Boost.Function]]
[def __Boost_Graph__ [@http://www.boost.org/doc/libs/release/libs/graph Boost.Graph]]
[def __Boost_Jam__ [@http://www.boost.org/doc/libs/release/doc/html/jam.html Boost.Jam]]
[def __Boost_LocalFunction__ [@http://www.boost.org/doc/libs/release/libs/local_function Boost.LocalFunction]]
[def __Boost_MPL__ [@http://www.boost.org/doc/libs/release/libs/mpl Boost.MPL]]
[def __Boost_Parameter__ [@http://www.boost.org/doc/libs/release/libs/parameter Boost.Parameter]]
[def __Boost_Phoenix__ [@http://www.boost.org/doc/libs/release/libs/phoenix Boost.Phoenix]]
[def __Boost_Preprocessor__ [@http://www.boost.org/doc/libs/release/libs/preprocessor Boost.Preprocessor]]
[def __Boost_Python__ [@http://www.boost.org/doc/libs/release/libs/python Boost.Python]]
[def __Boost_Typeof__ [@http://www.boost.org/doc/libs/release/libs/typeof Boost.Typeof]]
[def __Boost_TypeTraits__ [@http://www.boost.org/doc/libs/release/libs/type_traits Boost.TypeTraits]]
[def __Boost_Utility_IdentityType__ [@http://www.boost.org/doc/libs/release/libs/utility/identity_type Boost.Utility/IdentityType]]

[def __Bright04__ [link Bright04_anchor \[Bright04\]]]
[def __Bright04b__ [link Bright04b_anchor \[Bright04b\]]]
[def __C2__ [link C2_anchor \[C2\]]]
[def __Chrome02__ [link Chrome02_anchor \[Chrome02\]]]
[def __Cline90__ [link Cline90_anchor \[Cline90\]]]
[def __CodeContracts__ [link CodeContracts_anchor \[CodeContracts\]]]
[def __iContract__ [link iContract_anchor \[iContract\]]]
[def __Hoare73__ [link Hoare73_anchor \[Hoare73\]]]
[def __Jcontract__ [link Jcontract_anchor \[Jcontract\]]]
[def __Lindrud04__ [link Lindrud04_anchor \[Lindrud04\]]]
[def __Maley99__ [link Maley99_anchor \[Maley99\]]]
[def __Meyer97__ [link Meyer97_anchor \[Meyer97\]]]
[def __Mitchell02__ [link Mitchell02_anchor \[Mitchell02\]]]
[def __N1613__ [link N1613_anchor \[N1613\]]]
[def __N1866__ [link N1866_anchor \[N1866\]]]
[def __N1962__ [link N1962_anchor \[N1962\]]]
[def __N2081__ [link N2081_anchor \[N2081\]]]
[def __N2914__ [link N2914_anchor \[N2914\]]]
[def __SPARKAda__ [link SPARKAda_anchor \[SPARKAda\]]]
[def __SpecSharp__ [link SpecSharp_anchor \[SpecSharp\]]]
[def __Stroustrup97__ [link Stroustrup97_anchor \[Stroustrup97\]]]
[def __Stroustrup94__ [link Stroustrup94_anchor \[Stroustrup94\]]]
[def __Tandin04__ [link Tandin04_anchor \[Tandin04\]]]

[def __Introduction__ [link contract__.introduction Introduction]]
[def __Full_Table_of_Contents__ [link contract__.full_table_of_contents Full Table of Contents]]
[def __Getting_Started__ [link contract__.getting_started Getting Started]]
[def __Contract_Programming_Overview__ [link contract__.contract_programming_overview Contract Programming Overview]]
[def __Costs__ [link contract__.contract_programming_overview.costs Costs]]
[def __Free_Function_Calls__ [link contract__.contract_programming_overview.free_function_calls Free Function Calls]]
[def __Member_Function_Calls__ [link contract__.contract_programming_overview.member_function_calls Member Function Calls]]
[def __Constructor_Calls__ [link contract__.contract_programming_overview.constructor_calls Constructor Calls]]
[def __Destructor_Calls__ [link contract__.contract_programming_overview.destructor_calls Destructor Calls]]
[def __Constant_Correctness__ [link contract__.contract_programming_overview.constant_correctness Constant-Correctness]]
[def __Specification_vs__Implementation__ [link contract__.contract_programming_overview.specification_vs__implementation Specification vs. Implementation]]
[def __Broken_Contracts__ [link contract__.contract_programming_overview.broken_contracts Broken Contracts]]
[def __Features__ [link contract__.contract_programming_overview.features Features]]
[def __Tutorial__ [link contract__.tutorial Tutorial]]
[def __Forward_Declarations_and_Body_Definitions__ [link contract__.tutorial.forward_declarations_and_body_definitions Forward Declarations and Body Definitions]]
[def __Advanced_Topics__ [link contract__.advanced_topics Advanced Topics]]
[def __Assertion_Requirements__ [link contract__.advanced_topics.assertion_requirements Assertion Requirements]]
[def __Contract_Broken_Handlers__ [link contract__.advanced_topics.contract_broken_handlers__throw_on_failure_ Contract Broken Handlers]]
[def __Virtual_Specifiers__ [link contract__.virtual_specifiers Virtual Specifiers]]
[def __Concepts__ [link contract__.concepts Concepts]]
[def __Named_Parameters__ [link contract__.named_parameters Named Parameters]]
[def __Parameter_Identifiers__ [link contract__.named_parameters.parameter_identifiers Parameter Identifiers]]
[def __Examples__ [link contract__.examples Examples]]
[def __Grammar__ [link contract__.grammar Grammar]]
[def __Differences_with_CXX_Syntax__ [link contract__.grammar.differences_with_c___syntax Differences with C++ Syntax]]
[def __No_Variadic_Macros__ [link contract__.no_variadic_macros No Variadic Macros]]
[def __Reference__ [link contract__.reference Reference]]
[def __Bibliography__ [link contract__.bibliography Bibliography]]
[def __Release_Notes__ [link contract__.release_notes Release Notes]]
[def __Acknowledgments__ [link contract__.acknowledgments Acknowledgments]]

[def __logic_and__ [link logic_and_anchor logic-and]]
[def __logic_or__ [link logic_or_anchor logic-or]]
[def __Assignable__ [@http://www.boost.org/doc/libs/release/libs/utility/Assignable.html [^Assignable]]]
[def __ConstantCopyConstructible__ [link contract__.advanced_topics.old_and_result_value_copies [^ConstantCopyConstructible]]]
[def __CopyConstructible__ [@http://www.boost.org/doc/libs/release/libs/utility/CopyConstructible.html [^CopyConstructible]]]
[def __DefaultConstructible__ [@http://www.sgi.com/tech/stl/DefaultConstructible.html [^DefaultConstructible]]]
[def __EqualityComparable__ [@http://www.sgi.com/tech/stl/EqualityComparable.html [^EqualityComparable]]]
[def __InputIterator__ [@http://www.sgi.com/tech/stl/InputIterator.html [^InputIterator]]]

[:['["Our field needs more formality, but the profession has not realized it yet.]]]
[:['-- Bertrand Meyer (see __Meyer97__ page 400)]]

This library implements Contract Programming for the C++ programming language.
In addition, the library implements virtual specifiers (`final`, `override`, and `new`, see __CXX11__), concept checking, and named parameters.

Consult this documentation in [@index.html HTML] or [@contractpp.pdf PDF] format.

[include introduction.qbk]
[include full_table_of_contents.qbk]
[include getting_started.qbk]
[include contract_programming_overview.qbk]
[include tutorial.qbk]
[include advanced_topics.qbk]
[include virtual_specifiers.qbk]
[include concepts.qbk]
[include named_parameters.qbk]
[include examples.qbk]
[include grammar.qbk]
[include no_variadic_macros.qbk]
[xinclude reference.xml]
[include release_notes.qbk]
[include bibliography.qbk]
[include acknowledgments.qbk]

