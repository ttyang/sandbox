    template<class This,class A0 , class A1> struct result<This(A0 , A1)> { typedef float base_real; BOOST_STATIC_CONSTANT ( std::size_t, value0 = sizeof(base_real) ); BOOST_STATIC_CONSTANT ( std::size_t , value1 = ( value0 > sizeof(A0) ) ? value0 : sizeof(A0) ); BOOST_STATIC_CONSTANT ( std::size_t , value2 = ( value1 > sizeof(A1) ) ? value1 : sizeof(A1) ); typedef typename meta::make_real<value2>::type type; }; template<class This,class A0 , class A1 , class A2> struct result<This(A0 , A1 , A2)> { typedef float base_real; BOOST_STATIC_CONSTANT ( std::size_t, value0 = sizeof(base_real) ); BOOST_STATIC_CONSTANT ( std::size_t , value1 = ( value0 > sizeof(A0) ) ? value0 : sizeof(A0) ); BOOST_STATIC_CONSTANT ( std::size_t , value2 = ( value1 > sizeof(A1) ) ? value1 : sizeof(A1) ); BOOST_STATIC_CONSTANT ( std::size_t , value3 = ( value2 > sizeof(A2) ) ? value2 : sizeof(A2) ); typedef typename meta::make_real<value3>::type type; }; template<class This,class A0 , class A1 , class A2 , class A3> struct result<This(A0 , A1 , A2 , A3)> { typedef float base_real; BOOST_STATIC_CONSTANT ( std::size_t, value0 = sizeof(base_real) ); BOOST_STATIC_CONSTANT ( std::size_t , value1 = ( value0 > sizeof(A0) ) ? value0 : sizeof(A0) ); BOOST_STATIC_CONSTANT ( std::size_t , value2 = ( value1 > sizeof(A1) ) ? value1 : sizeof(A1) ); BOOST_STATIC_CONSTANT ( std::size_t , value3 = ( value2 > sizeof(A2) ) ? value2 : sizeof(A2) ); BOOST_STATIC_CONSTANT ( std::size_t , value4 = ( value3 > sizeof(A3) ) ? value3 : sizeof(A3) ); typedef typename meta::make_real<value4>::type type; };
    
