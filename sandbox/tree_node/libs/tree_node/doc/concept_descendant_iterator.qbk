[/=============================================================================
    Copyright (C) 2011 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:tree_node_desc_iterator Tree Node Descendant Iterator]

[section Description]
This concept may seem redundant at first, especially when iterating through
__Non_Associative_Tree_Node__ objects; however, for __Associative_Tree_Node__
objects, models of this concept provide the sole means of accessing the key
associated with each node being traversed.  (Root nodes are not associated with
keys at the tree node level, so models of this concept do not traverse them.)
[endsect]

[section Refinement of]
__Tree_Node_Iterator__
[endsect]

[variablelist Notation
    [
        [`Iterator`]
        [A type that models the [*Tree Node Descendant Iterator] concept.]
    ]
    [
        [`itr`]
        [An object of type `Iterator`.]
    ]
    [
        [`Node`]
        [A type that models the __Tree_Node__ concept.]
    ]
    [
        [`node`]
        [An object of type `Node::pointer`.]
    ]
    [
        [`const_node`]
        [An object of type `Node::const_pointer`.]
    ]
]

[section:types Associated Types]
No additional types beyond those defined in the __Tree_Node_Iterator__ concept;
however, the requirements for the value type are strengthened: its value type,
in turn, must model the __Forward_Iterator__ concept.
[endsect]

[section:expressions Valid Expressions and Semantics]
None beyond those defined in the __Tree_Node_Iterator__ concept; however, the
type requirements for the constructors are strengthened, and their semantics
are clarified.

[table
    [
        [Name]
        [Expression]
        [Type requirements]
        [Semantics]
    ]
    [
        [Constructor from mutable node]
        [``
            Iterator(node)
            Iterator itr(node)
        ``]
        []
        [
            Constructs an iterator that will iterate through the descendants of
            the specified node.
        ]
    ]
    [
        [Constructor from immutable node]
        [``
            Iterator(const_node)
            Iterator itr(const_node)
        ``]
        [
            The value type of `Iterator` must be the value type of
            `Node::const_child_iterator`.
        ]
        [
            Constructs an iterator that will iterate through the descendants of
            the specified node.
        ]
    ]
]
[endsect]

[section Models]

  * The return type of __make_breadth_first_descendant_iterator__.
  * The return type of __make_pre_order_descendant_iterator__.
  * The return type of __make_post_order_descendant_iterator__.
  * The return type of __make_depth_first_descendant_iterator__.

[endsect]

[endsect] [/ Tree Node Descendant Iterator]

