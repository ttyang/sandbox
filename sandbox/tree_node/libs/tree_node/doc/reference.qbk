[/=============================================================================
    Copyright (C) 2011-2012 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section Reference]

[include ref_binary_node.qbk]
[include ref_binary_node_base.qbk]
[include ref_binary_node_gen.qbk]
[include ref_nary_node.qbk]
[include ref_nary_node_base.qbk]
[include ref_nary_node_gen.qbk]
[include ref_associative_node.qbk]
[include ref_associative_node_base.qbk]
[include ref_associative_node_gen.qbk]
[include ref_with_depth.qbk]
[include ref_with_depth_base.qbk]
[include ref_with_depth_gen.qbk]
[include ref_with_position.qbk]
[include ref_with_position_base.qbk]
[include ref_with_position_gen.qbk]
[include ref_with_rb_flag.qbk]
[include ref_with_rb_flag_base.qbk]
[include ref_with_rb_flag_gen.qbk]
[include ref_tree_node_base.qbk]
[include ref_breadth_first_iterator.qbk]
[include ref_breadth_first_desc_iter.qbk]
[include ref_pre_order_iterator.qbk]
[include ref_pre_order_desc_iter.qbk]
[include ref_post_order_iterator.qbk]
[include ref_post_order_desc_iter.qbk]
[include ref_in_order_iterator.qbk]
[include ref_depth_first_iterator.qbk]
[include ref_depth_first_desc_iter.qbk]
[include ref_traversal_state.qbk]
[include ref_dereference_iterator.qbk]
[include ref_equal.qbk]
[include ref_strictly_equal.qbk]
[include ref_lexicographical_compare.qbk]
[include ref_strict_lexicograph_comp.qbk]

[heading Data Structures]

  * __binary_node__
  * __nary_node__
  * __associative_node__

[heading Adaptor Types]

  * __tree_node_with_depth__
  * __tree_node_with_position__
  * __tree_node_with_red_black_flag__

[heading Base Types]

  * __tree_node_base__
  * __binary_node_base__
  * __nary_node_base__
  * __associative_node_base__
  * __tree_node_with_depth_base__
  * __tree_node_with_position_base__
  * __tree_node_with_red_black_flag_base__

[heading Type Generators]

  * __binary_node_gen__
  * __nary_node_gen__
  * __associative_node_gen__
  * __tree_node_with_depth_gen__
  * __tree_node_with_position_gen__
  * __tree_node_with_red_black_flag_gen__

[heading Iterator Types]

  * __breadth_first_iterator__
  * __breadth_first_descendant_iterator__
  * __pre_order_iterator__
  * __pre_order_descendant_iterator__
  * __post_order_iterator__
  * __post_order_descendant_iterator__
  * __in_order_iterator__
  * __depth_first_iterator__
  * __depth_first_descendant_iterator__

[heading Enum Types]

  * __traversal_state__

[heading Functions]

  * __dereference_iterator__
  * __tree_node_equal__
  * __tree_node_strictly_equal__
  * __tree_node_lexicographical_compare__
  * __tree_node_strict_lexicographical_compare__

[endsect] [/ Reference]

