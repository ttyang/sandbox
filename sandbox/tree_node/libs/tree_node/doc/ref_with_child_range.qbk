[/=============================================================================
    Copyright (C) 2011 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:with_child_range_access `with_child_range_access`]

[section Synopsis]
[reference__with_child_range_access]
[endsect]

[section Description]
This __Tree_Node__ adaptor provides __Boost_Range__ access to its child nodes
as well as the other operations it inherits.  Objects of this type must be
stored by `with_child_range_access::pointer` and can only be instantiated
through the __tree_node_factory__ facade or the `clone()` method if the base
type models the __Cloneable_Tree_Node__ concept.
[endsect]

[section:definition Where defined]
``
#include <__boost_tree_node_with_child_range_access_hpp__>
``
[endsect]

[section:tpl_param Template Parameters]
[table
    [[Parameter][Description][Requirements][Default]]
    [
        [`BaseGenerator`]
        [
            The __Metafunction_Class__ from whose return type
            `with_child_range_access` will ultimately inherit.
        ]
        [It must model the __Type_Generator__ concept.]
        []
    ]
    [
        [`T1`]
        [The key type if `T2` is specified; the data type otherwise.]
        []
        []
    ]
    [
        [`T2`]
        [The data type if specified; ignored otherwise.]
        []
        [`void`]
    ]
]
[endsect]

[section:model_of Model of]

  * __Associative_Tree_Node__ if `T2` is specified;
    __Non_Associative_Tree_Node__ otherwise
  * __Factory_Constructible_Tree_Node__
  * any other concept that the return type of `BaseGenerator` models

[endsect]

[section:public_bases Public Base Classes]
__with_child_range_access_base__
[endsect]

[section:members Public Members]
[table
    [[Name][Expression][Description]]
    [
        [Traits type]
        [`traits`]
        [Same as the traits type of the return type of `BaseGenerator`.]
    ]
    [
        [Pointer type]
        [`pointer`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Pointer-to-const type]
        [`const_pointer`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Child iterator type]
        [`child_iterator`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Immutable child iterator type]
        [`const_child_iterator`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Child range]
        [
            [^_std_pair_<const_child_iterator,const_child_iterator>
            get_children() const;]
        ]
        [Returns a __Boost_Range__ over all its child nodes.]
    ]
    [
        [Child range]
        [[^_std_pair_<child_iterator,child_iterator> get_children();]]
        [Returns a __Boost_Range__ over all its child nodes.]
    ]
]
[endsect] [/ Members]

[endsect] [/ with_child_range_access]

