[/=============================================================================
    Copyright (C) 2011-2012 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:nary_node `nary_node<T,Selector>`]

[section Description]
This class template is suitable for classes or algorithms that require a tree
node data structure that can handle an arbitrary number of children.  Objects
of this type can be stored by value.
[endsect]

[section:definition Where defined]
``
#include <__boost_tree_node_nary_node_hpp__>
``
[endsect]

[section:tpl_param Template Parameters]
[table
    [[Parameter][Description][Requirements][Default]]
    [
        [`T`]
        [The type of the object to be stored in an `nary_node`.]
        []
        []
    ]
    [
        [`Selector`]
        [The type that determines the child container type.]
        [[^_is_recursive_selector_<Selector>] must return __mpl_true__.]
        [__ptr_dequeS__]
    ]
]
[endsect]

[section:model_of Model of]

  * __N_ary_Tree_Node__
  * __Default_Constructible__ if `T` is __Default_Constructible__
  * __Copy_Constructible__ if `T` is __Copy_Constructible__
  * __Assignable__ if `T` is __Copy_Constructible__ and __Movable__
  * __Movable__ if `T` is __Movable__

[endsect]

[section:public_bases Public Base Classes]
[reference__nary_node__bases]
[endsect]

[section:members Public Members]
Given:
[reference__nary_node__super_t]
[table
    [[Name][Definition][Where defined]]
    [
        [Data type]
        [[reference__nary_node__traits]]
        [__Tree_Node__]
    ]
    [
        [Pointer type]
        [[reference__nary_node__pointer]]
        [__Tree_Node__]
    ]
    [
        [Pointer-to-const type]
        [[reference__nary_node__const_pointer]]
        [__Tree_Node__]
    ]
    [
        [Iterator type]
        [[reference__nary_node__iterator]]
        [__Non_Associative_Tree_Node__]
    ]
    [
        [Immutable iterator type]
        [[reference__nary_node__const_iterator]]
        [__Non_Associative_Tree_Node__]
    ]
    [
        [Copy constructor]
        [``
            nary_node(nary_node const&);
        ``]
        [__Copy_Constructible__]
    ]
    [
        [Move constructor]
        [``
            nary_node(nary_node&&);
        ``]
        [__Movable__]
    ]
    [
        [Emplacement constructor]
        [[reference__nary_node__emplacement_ctor]]
        [__Tree_Node__]
    ]
    [
        [Copy assignment operator]
        [``
            nary_node& operator=(nary_node const&);
        ``]
        [__Assignable__]
    ]
    [
        [Move assignment operator]
        [``
            nary_node& operator=(nary_node&&);
        ``]
        [__Movable__]
    ]
    [
        [Data access]
        [[reference__nary_node_base__get_data__const]]
        [__Tree_Node__]
    ]
    [
        [Data access]
        [[reference__nary_node_base__get_data]]
        [__Tree_Node__]
    ]
    [
        [Parent access]
        [[reference__nary_node_base__get_parent_ptr__const]]
        [__Tree_Node__]
    ]
    [
        [Parent access]
        [[reference__nary_node_base__get_parent_ptr]]
        [__Tree_Node__]
    ]
    [
        [Child creation]
        [[reference__nary_node_base__emplace]]
        [__N_ary_Tree_Node__]
    ]
    [
        [Child copy creation]
        [``
            iterator insert(nary_node const& child);
        ``]
        [__N_ary_Tree_Node__]
    ]
    [
        [Children range begin access]
        [[reference__nary_node_base__begin__const]]
        [__Tree_Node__]
    ]
    [
        [Children range begin access]
        [[reference__nary_node_base__begin]]
        [__Tree_Node__]
    ]
    [
        [Children range past-the-end access]
        [[reference__nary_node_base__end__const]]
        [__Tree_Node__]
    ]
    [
        [Children range past-the-end access]
        [[reference__nary_node_base__end]]
        [__Tree_Node__]
    ]
    [
        [Children range size query]
        [[reference__nary_node_base__size]]
        [__Tree_Node__]
    ]
    [
        [Leaf node query]
        [[reference__nary_node_base__empty]]
        [__Tree_Node__]
    ]
    [
        [Remove all children]
        [[reference__nary_node_base__clear]]
        [__Tree_Node__]
    ]
]
[endsect] [/ Members]

[section Example]
<__example_nary_node_cpp__>
[endsect]

[section Test]
<__test_nary_node_cpp__>
[endsect]

[endsect] [/ nary_node]

