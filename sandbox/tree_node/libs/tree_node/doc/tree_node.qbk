[library tree_node
    [quickbook 1.5]
    [version 0.4]
    [authors [Enage, Cromwell D.]]
    [copyright 2011-2013 Cromwell D. Enage]
    [purpose Low-level tree node framework]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ General links.]
[def __Runtime_Complexity__ [@http://en.wikipedia.org/wiki/Amortized_analysis Runtime Complexity]]

[/ General concept links.]
[def __Default_Constructible__ [@http://www.sgi.com/tech/stl/DefaultConstructible.html [*Default Constructible]]]
[def __Trivial_Iterator__ [@http://www.sgi.com/tech/stl/trivial.html [*Trivial Iterator]]]
[def __Input_Iterator__ [@http://www.sgi.com/tech/stl/InputIterator.html [*Input Iterator]]]
[def __Forward_Iterator__ [@http://www.sgi.com/tech/stl/ForwardIterator.html [*Forward Iterator]]]
[def __Reverse_Iterator__ [@http://www.sgi.com/tech/stl/ReverseIterator.html [*Reverse Iterator]]]
[def __Bidirectional_Iterator__ [@http://www.sgi.com/tech/stl/BidirectionalIterator.html [*Bidirectional Iterator]]]
[def __Random_Access_Iterator__ [@http://www.sgi.com/tech/stl/RandomAccessIterator.html [*Random Access Iterator]]]
[def __Strict_Weak_Ordering__ [@http://www.sgi.com/tech/stl/StrictWeakOrdering.html [*Strict Weak Ordering]]]
[def __Container__ [@http://www.sgi.com/tech/stl/Container.html [*Container]]]
[def __Reversible_Container__ [@http://www.sgi.com/tech/stl/ReversibleContainer.html [*Reversible Container]]]
[def __Associative_Container__ [@http://www.sgi.com/tech/stl/AssociativeContainer.html [*Associative Container]]]
[def __Sorted_Associative_Container__ [@http://www.sgi.com/tech/stl/SortedAssociativeContainer.html [*Sorted Associative Container]]]
[def __Simple_Associative_Container__ [@http://www.sgi.com/tech/stl/SimpleAssociativeContainer.html [*Simple Associative Container]]]
[def __Pair_Associative_Container__ [@http://www.sgi.com/tech/stl/PairAssociativeContainer.html [*Pair Associative Container]]]
[def __Unique_Sorted_Associative_Container__ [@http://www.sgi.com/tech/stl/UniqueSortedAssociativeContainer.html [*Unique Sorted Associative Container]]]
[def __Multiple_Sorted_Associative_Container__ [@http://www.sgi.com/tech/stl/MultipleSortedAssociativeContainer.html [*Multiple Sorted Associative Container]]]
[def __Sequence__ [@http://www.sgi.com/tech/stl/Sequence.html [*Sequence]]]
[def __Front_Insertion_Sequence__ [@http://www.sgi.com/tech/stl/FrontInsertionSequence.html [*Front Insertion Sequence]]]
[def __Back_Insertion_Sequence__ [@http://www.sgi.com/tech/stl/BackInsertionSequence.html [*Back Insertion Sequence]]]
[def __Unary_Function__ [@http://www.sgi.com/tech/stl/UnaryFunction.html [*Unary Function]]]
[def __Equality_Comparable__ [@http://www.sgi.com/tech/stl/EqualityComparable.html [*Equality Comparable]]]
[def __Less_Than_Comparable__ [@http://www.sgi.com/tech/stl/LessThanComparable.html [*Less-Than Comparable]]]

[/ Boost library and installation links.]
[def __Boost_PP__ [@boost:libs/preprocessor/doc/index.html [*Boost.PP]]]
[def __Boost_Preprocessor__ [@boost:libs/preprocessor/doc/index.html [*Boost.Preprocessor]]]
[def __Boost_Typeof__ [@boost:doc/html/typeof.html [*Boost.Typeof]]]
[def __Boost_Range__ [@boost:libs/range/doc/html/index.html [*Boost.Range]]]
[def __Boost_Pointer_Container__ [@boost:libs/ptr_container/doc/index.html [*Boost.PointerContainer]]]
[def __Boost_Fusion__ [@boost:libs/fusion/doc/html/index.html [*Boost.Fusion]]]
[def __Boost_Accumulators__ [@boost:doc/html/accumulators.html [*Boost.Accumulators]]]
[def __SVN_Trac__ [@http://svn.boost.org/ SVN Trac]]
[def __Boost_ContainerGen__ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/index.html [*Boost.ContainerGen]]]

[/ Boost concept links.]
[def __Copy_Constructible__ [@boost:libs/utility/CopyConstructible.html [*Copy Constructible]]]
[def __Assignable__ [@boost:libs/utility/Assignable.html [*Assignable]]]
[def __Movable__ [@boost:doc/html/move.html [*Movable]]]
[def __Boolean_Integral_Constant__ [@boost:libs/mpl/doc/refmanual/integral-constant.html [*Boolean Integral Constant]]]
[def __Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Metafunction Class]]]
[def __Unary_Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Unary Metafunction Class]]]
[def __Binary_Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Binary Metafunction Class]]]
[def __Trinary_Metafunction_Class__ [@boost:libs/mpl/doc/refmanual/metafunction-class.html [*Trinary Metafunction Class]]]
[def __Fusion_Sequence__ [@boost:libs/fusion/doc/html/fusion/sequence/concepts/sequence.html [*Fusion Sequence]]]
[def __Fusion_Associative_Sequence__ [@boost:libs/fusion/doc/html/fusion/sequence/concepts/associative_sequence.html [*Fusion Associative Sequence]]]

[/ Boost reference links.]
[def __PP_REPEAT__ [@boost:libs/preprocessor/doc/ref/repeat.html `BOOST_PP_REPEAT`]]
[def _PP_REPEAT_ [@boost:libs/preprocessor/doc/ref/repeat.html BOOST_PP_REPEAT]]
[def __TYPEOF_EMULATION__ [@boost:doc/html/typeof/refe.html#typeof.compl `BOOST_TYPEOF_EMULATION`]]
[def __mpl_true__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::true_`]]
[def _mpl_true_ [@boost:libs/mpl/doc/refmanual/bool.html boost::mpl::true_]]
[def __mpl_false__ [@boost:libs/mpl/doc/refmanual/bool.html `boost::mpl::false_`]]
[def _mpl_false_ [@boost:libs/mpl/doc/refmanual/bool.html boost::mpl::false_]]
[def _mpl_apply_wrap1_ [@boost:libs/mpl/doc/refmanual/apply-wrap.html boost::mpl::apply_wrap1]]
[def _mpl_apply_wrap2_ [@boost:libs/mpl/doc/refmanual/apply-wrap.html boost::mpl::apply_wrap2]]
[def _mpl_apply_wrap3_ [@boost:libs/mpl/doc/refmanual/apply-wrap.html boost::mpl::apply_wrap3]]
[def _mpl_equal_to_ [@boost:libs/mpl/doc/refmanual/equal_to.html boost::mpl::equal_to]]
[def __enable_if__ [@boost:libs/utility/enable_if.html `enable_if`]]
[def _enable_if_ [@boost:libs/utility/enable_if.html enable_if]]
[def _fusion_has_key_ [@boost:libs/fusion/doc/html/fusion/sequence/intrinsic/functions/has_key.html fusion::has_key]]
[def __half_runtime_pairs__ [@boost:libs/fusion/doc/html/fusion/support/pair.html half-runtime pairs]]
[def __accumulators_tag_sum__ [@boost:doc/html/boost/accumulators/tag/sum.html `accumulators::tag::sum`]]
[def _container_gen_ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/container_gen.html container_gen]]
[def _is_recursive_selector_ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/is_recursive_selector.html is_recursive_selector]]
[def _is_associative_selector_ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/is_associative_selector.html is_associative_selector]]
[def __default_ordering_selector__ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/selectors.html `default_ordering_selector`]]
[def __std_allocator_selector__ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/selectors.html `std_allocator_selector`]]
[def __ptr_dequeS__ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/selectors.html `ptr_dequeS`]]
[def __ptr_mapS__ [@http://svn.boost.org/svn/boost/sandbox/container_gen/libs/container_gen/doc/html/container_gen/reference/selectors.html `ptr_mapS`]]

[/ Boost.TreeNode header and source file links.]
[def __data_key__header__ [@../../../../boost/tree_node/key/data.hpp boost/tree_node/key/data.hpp]]
[def __accumulation_key__header__ [@../../../../boost/tree_node/key/accumulation.hpp boost/tree_node/key/accumulation.hpp]]
[def __count_key__header__ [@../../../../boost/tree_node/key/count.hpp boost/tree_node/key/count.hpp]]
[def __height_key__header__ [@../../../../boost/tree_node/key/height.hpp boost/tree_node/key/height.hpp]]
[def __position_key__header__ [@../../../../boost/tree_node/key/position.hpp boost/tree_node/key/position.hpp]]
[def __red_black_flag_key__header__ [@../../../../boost/tree_node/key/red_black_flag.hpp boost/tree_node/key/red_black_flag.hpp]]
[def __get_properties__header__ [@../../../../boost/tree_node/intrinsic/get_properties.hpp boost/tree_node/intrinsic/get_properties.hpp]]
[def __has_key__header__ [@../../../../boost/tree_node/intrinsic/has_key.hpp boost/tree_node/intrinsic/has_key.hpp]]
[def __get_keys__header__ [@../../../../boost/tree_node/intrinsic/get_keys.hpp boost/tree_node/intrinsic/get_keys.hpp]]
[def __at_key__header__ [@../../../../boost/tree_node/intrinsic/at_key.hpp boost/tree_node/intrinsic/at_key.hpp]]
[def __value_at_key__header__ [@../../../../boost/tree_node/intrinsic/value_at_key.hpp boost/tree_node/intrinsic/value_at_key.hpp]]
[def __advance_binary__header__ [@../../../../boost/tree_node/algorithm/advance_binary.hpp boost/tree_node/algorithm/advance_binary.hpp]]
[def __binary_index_of__header__ [@../../../../boost/tree_node/algorithm/binary_index_of.hpp boost/tree_node/algorithm/binary_index_of.hpp]]
[def __binary_descendant__header__ [@../../../../boost/tree_node/algorithm/binary_descendant.hpp boost/tree_node/algorithm/binary_descendant.hpp]]
[def __binary_descendant_at_index__header__ [@../../../../boost/tree_node/algorithm/binary_descendant_at_index.hpp boost/tree_node/algorithm/binary_descendant_at_index.hpp]]
[def __binary_lower_bound__header__ [@../../../../boost/tree_node/algorithm/binary_lower_bound.hpp boost/tree_node/algorithm/binary_lower_bound.hpp]]
[def __binary_upper_bound__header__ [@../../../../boost/tree_node/algorithm/binary_upper_bound.hpp boost/tree_node/algorithm/binary_upper_bound.hpp]]
[def __traversal_state__header__ [@../../../../boost/tree_node/traversal_state.hpp boost/tree_node/traversal_state.hpp]]
[def __dereference_iterator__header__ [@../../../../boost/tree_node/iterator/dereference.hpp boost/tree_node/iterator/dereference.hpp]]
[def __breadth_first_iterator__header__ [@../../../../boost/tree_node/iterator/breadth_first.hpp boost/tree_node/iterator/breadth_first.hpp]]
[def __breadth_first_descendant_iterator__header__ [@../../../../boost/tree_node/iterator/breadth_first_descendant.hpp boost/tree_node/iterator/breadth_first_descendant.hpp]]
[def __pre_order_iterator__header__ [@../../../../boost/tree_node/iterator/pre_order.hpp boost/tree_node/iterator/pre_order.hpp]]
[def __pre_order_descendant_iterator__header__ [@../../../../boost/tree_node/iterator/pre_order_descendant.hpp boost/tree_node/iterator/pre_order_descendant.hpp]]
[def __post_order_iterator__header__ [@../../../../boost/tree_node/iterator/post_order.hpp boost/tree_node/iterator/post_order.hpp]]
[def __post_order_descendant_iterator__header__ [@../../../../boost/tree_node/iterator/post_order_descendant.hpp boost/tree_node/iterator/post_order_descendant.hpp]]
[def __in_order_iterator__header__ [@../../../../boost/tree_node/iterator/in_order.hpp boost/tree_node/iterator/in_order.hpp]]
[def __depth_first_iterator__header__ [@../../../../boost/tree_node/iterator/depth_first.hpp boost/tree_node/iterator/depth_first.hpp]]
[def __depth_first_descendant_iterator__header__ [@../../../../boost/tree_node/iterator/depth_first_descendant.hpp boost/tree_node/iterator/depth_first_descendant.hpp]]
[def __base__header__ [@../../../../boost/tree_node/base.hpp boost/tree_node/base.hpp]]
[def __preprocessor__header__ [@../../../../boost/tree_node/preprocessor.hpp boost/tree_node/preprocessor.hpp]]
[def __binary_node__forward_header__ [@../../../../boost/tree_node/binary_node_fwd.hpp boost/tree_node/binary_node_fwd.hpp]]
[def __binary_node__header__ [@../../../../boost/tree_node/binary_node.hpp boost/tree_node/binary_node.hpp]]
[def __nary_node__forward_header__ [@../../../../boost/tree_node/nary_node_fwd.hpp boost/tree_node/nary_node_fwd.hpp]]
[def __nary_node__header__ [@../../../../boost/tree_node/nary_node.hpp boost/tree_node/nary_node.hpp]]
[def __associative_node__forward_header__ [@../../../../boost/tree_node/associative_node_fwd.hpp boost/tree_node/associative_node_fwd.hpp]]
[def __associative_node__header__ [@../../../../boost/tree_node/associative_node.hpp boost/tree_node/associative_node.hpp]]
[def __with_accumulation__forward_header__ [@../../../../boost/tree_node/with_accumulation_fwd.hpp boost/tree_node/with_accumulation_fwd.hpp]]
[def __with_accumulation__header__ [@../../../../boost/tree_node/with_accumulation.hpp boost/tree_node/with_accumulation.hpp]]
[def __with_count__forward_header__ [@../../../../boost/tree_node/with_count_fwd.hpp boost/tree_node/with_count_fwd.hpp]]
[def __with_count__header__ [@../../../../boost/tree_node/with_count.hpp boost/tree_node/with_count.hpp]]
[def __with_height__forward_header__ [@../../../../boost/tree_node/with_height_fwd.hpp boost/tree_node/with_height_fwd.hpp]]
[def __with_height__header__ [@../../../../boost/tree_node/with_height.hpp boost/tree_node/with_height.hpp]]
[def __with_position__forward_header__ [@../../../../boost/tree_node/with_position_fwd.hpp boost/tree_node/with_position_fwd.hpp]]
[def __with_position__header__ [@../../../../boost/tree_node/with_position.hpp boost/tree_node/with_position.hpp]]
[def __with_red_black_flag__forward_header__ [@../../../../boost/tree_node/with_red_black_flag_fwd.hpp boost/tree_node/with_red_black_flag_fwd.hpp]]
[def __with_red_black_flag__header__ [@../../../../boost/tree_node/with_red_black_flag.hpp boost/tree_node/with_red_black_flag.hpp]]
[def __red_black_balancer__header__ [@../../../../boost/tree_node/balancer/red_black.hpp boost/tree_node/balancer/red_black.hpp]]
[def __avl_balancer__header__ [@../../../../boost/tree_node/balancer/adelson_velskii_landis.hpp boost/tree_node/balancer/adelson_velskii_landis.hpp]]
[def __binode_container__forward_header__ [@../../../../boost/tree_node/container/binode_fwd.hpp boost/tree_node/container/binode_fwd.hpp]]
[def __binode_container__header__ [@../../../../boost/tree_node/container/binode.hpp boost/tree_node/container/binode.hpp]]
[def __binode_associative_container__forward_header__ [@../../../../boost/tree_node/container/binode_associative_fwd.hpp boost/tree_node/container/binode_associative_fwd.hpp]]
[def __binode_associative_container__header__ [@../../../../boost/tree_node/container/binode_associative.hpp boost/tree_node/container/binode_associative.hpp]]
[def __data_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/data.hpp boost/typeof/boost/tree_node/key/data.hpp]]
[def __accumulation_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/accumulation.hpp boost/typeof/boost/tree_node/key/accumulation.hpp]]
[def __count_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/count.hpp boost/typeof/boost/tree_node/key/count.hpp]]
[def __height_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/height.hpp boost/typeof/boost/tree_node/key/height.hpp]]
[def __position_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/position.hpp boost/typeof/boost/tree_node/key/position.hpp]]
[def __red_black_flag_key__typeof_header__ [@../../../../boost/typeof/boost/tree_node/key/red_black_flag.hpp boost/typeof/boost/tree_node/key/red_black_flag.hpp]]
[def __traversal_state__typeof_header__ [@../../../../boost/typeof/boost/tree_node/traversal_state.hpp boost/typeof/boost/tree_node/traversal_state.hpp]]
[def __breadth_first_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/breadth_first.hpp boost/typeof/boost/tree_node/iterator/breadth_first.hpp]]
[def __breadth_first_descendant_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/breadth_first_descendant.hpp boost/typeof/boost/tree_node/iterator/breadth_first_descendant.hpp]]
[def __pre_order_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/pre_order.hpp boost/typeof/boost/tree_node/iterator/pre_order.hpp]]
[def __pre_order_descendant_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/pre_order_descendant.hpp boost/typeof/boost/tree_node/iterator/pre_order_descendant.hpp]]
[def __post_order_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/post_order.hpp boost/typeof/boost/tree_node/iterator/post_order.hpp]]
[def __post_order_descendant_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/post_order_descendant.hpp boost/typeof/boost/tree_node/iterator/post_order_descendant.hpp]]
[def __in_order_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/in_order.hpp boost/typeof/boost/tree_node/iterator/in_order.hpp]]
[def __depth_first_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/depth_first.hpp boost/typeof/boost/tree_node/iterator/depth_first.hpp]]
[def __depth_first_descendant_iterator__typeof_header__ [@../../../../boost/typeof/boost/tree_node/iterator/depth_first_descendant.hpp boost/typeof/boost/tree_node/iterator/depth_first_descendant.hpp]]
[def __binary_node__typeof_header__ [@../../../../boost/typeof/boost/tree_node/binary_node.hpp boost/typeof/boost/tree_node/binary_node.hpp]]
[def __nary_node__typeof_header__ [@../../../../boost/typeof/boost/tree_node/nary_node.hpp boost/typeof/boost/tree_node/nary_node.hpp]]
[def __associative_node__typeof_header__ [@../../../../boost/typeof/boost/tree_node/associative_node.hpp boost/typeof/boost/tree_node/associative_node.hpp]]
[def __with_accumulation__typeof_header__ [@../../../../boost/typeof/boost/tree_node/with_accumulation.hpp boost/typeof/boost/tree_node/with_accumulation.hpp]]
[def __with_count__typeof_header__ [@../../../../boost/typeof/boost/tree_node/with_count.hpp boost/typeof/boost/tree_node/with_count.hpp]]
[def __with_height__typeof_header__ [@../../../../boost/typeof/boost/tree_node/with_height.hpp boost/typeof/boost/tree_node/with_height.hpp]]
[def __with_position__typeof_header__ [@../../../../boost/typeof/boost/tree_node/with_position.hpp boost/typeof/boost/tree_node/with_position.hpp]]
[def __with_red_black_flag__typeof_header__ [@../../../../boost/typeof/boost/tree_node/with_red_black_flag.hpp boost/typeof/boost/tree_node/with_red_black_flag.hpp]]
[def __red_black_balancer__typeof_header__ [@../../../../boost/typeof/boost/tree_node/balancer/red_black.hpp boost/typeof/boost/tree_node/balancer/red_black.hpp]]
[def __avl_balancer__typeof_header__ [@../../../../boost/typeof/boost/tree_node/balancer/adelson_velskii_landis.hpp boost/typeof/boost/tree_node/balancer/adelson_velskii_landis.hpp]]
[def __binode_container__typeof_header__ [@../../../../boost/typeof/boost/tree_node/container/binode.hpp boost/typeof/boost/tree_node/container/binode.hpp]]
[def __binode_associative_container__typeof_header__ [@../../../../boost/typeof/boost/tree_node/container/binode_associative.hpp boost/typeof/boost/tree_node/container/binode_associative.hpp]]
[def __example_type_definitions_hpp__ [@../../example/type_definitions.hpp example/type_definitions.hpp]]
[def __example_output_tabs_hpp__ [@../../example/output_tabs.hpp example/output_tabs.hpp]]
[def __example_output_tabs_cpp__ [@../../example/output_tabs.cpp example/output_tabs.cpp]]
[def __example_output_preamble_hpp__ [@../../example/output_preamble.hpp example/output_preamble.hpp]]
[def __example_output_preamble_cpp__ [@../../example/output_preamble.cpp example/output_preamble.cpp]]
[def __example_output_functions_hpp__ [@../../example/output_functions.hpp example/output_functions.hpp]]
[def __example_iterator_functions_hpp__ [@../../example/iterator_functions.hpp example/iterator_functions.hpp]]
[def __example_assoc_iterator_functions_hpp__ [@../../example/assoc_iterator_functions.hpp example/assoc_iterator_functions.hpp]]
[def __example_match_predicate_hpp__ [@../../example/match_predicate.hpp example/match_predicate.hpp]]
[def __example_binary_node_cpp__ [@../../example/binary_node.cpp example/binary_node.cpp]]
[def __example_nary_node_cpp__ [@../../example/nary_node.cpp example/nary_node.cpp]]
[def __example_associative_node_cpp__ [@../../example/associative_node.cpp example/associative_node.cpp]]
[def __test_iterator_functions_hpp__ [@../../test/iterator_functions.hpp test/iterator_functions.hpp]]
[def __test_binary_node_cpp__ [@../../test/binary_node.cpp test/binary_node.cpp]]
[def __test_nary_node_cpp__ [@../../test/nary_node.cpp test/nary_node.cpp]]
[def __test_associative_node_cpp__ [@../../test/associative_node.cpp test/associative_node.cpp]]
[def __test_containers_cpp__ [@../../test/containers.cpp test/containers.cpp]]

[/ Boost.TreeNode concept links.]
[def __Indexable_Container__ [link tree_node.concepts.indexable_container [*Indexable Container]]]
[def __Tree_Node__ [link tree_node.concepts.tree_node [*Tree Node]]]
[def __Base_Tree_Node__ [link tree_node.concepts.base_tree_node [*Base Tree Node]]]
[def __Reversible_Tree_Node__ [link tree_node.concepts.reversible_tree_node [*Reversible Tree Node]]]
[def __Associative_Tree_Node__ [link tree_node.concepts.associative_tree_node [*Associative Tree Node]]]
[def __Non_Associative_Tree_Node__ [link tree_node.concepts.non_assoc_tree_node [*Non-Associative Tree Node]]]
[def __Binary_Tree_Node__ [link tree_node.concepts.binary_tree_node [*Binary Tree Node]]]
[def __N_ary_Tree_Node__ [link tree_node.concepts.nary_tree_node [*N-ary Tree Node]]]
[def __Node_Type_Generator__ [link tree_node.concepts.node_type_generator [*Node Type Generator]]]
[def __Base_Type_Generator__ [link tree_node.concepts.base_type_generator [*Base Type Generator]]]
[def __Indexable_Iterator__ [link tree_node.concepts.indexable_iterator [*Indexable Iterator]]]
[def __Tree_Node_Iterator__ [link tree_node.concepts.tree_node_iterator [*Tree Node Iterator]]]
[def __Full_Tree_Node_Iterator__ [link tree_node.concepts.full_tree_node_iterator [*Full Tree Node Iterator]]]
[def __Tree_Node_Descendant_Iterator__ [link tree_node.concepts.tree_node_desc_iterator [*Tree Node Descendant Iterator]]]

[/ Boost.TreeNode reference links.]
[def __data_key__ [link tree_node.reference.data_key `tree_node::data_key`]]
[def _data_key_ [link tree_node.reference.data_key tree_node::data_key]]
[def __accumulation_key__ [link tree_node.reference.accumulation_key `tree_node::accumulation_key`]]
[def _accumulation_key_ [link tree_node.reference.accumulation_key tree_node::accumulation_key]]
[def __count_key__ [link tree_node.reference.count_key `tree_node::count_key`]]
[def _count_key_ [link tree_node.reference.count_key tree_node::count_key]]
[def __height_key__ [link tree_node.reference.height_key `tree_node::height_key`]]
[def _height_key_ [link tree_node.reference.height_key tree_node::height_key]]
[def __position_key__ [link tree_node.reference.position_key `tree_node::position_key`]]
[def _position_key_ [link tree_node.reference.position_key tree_node::position_key]]
[def __red_flag_key__ [link tree_node.reference.red_black_flag_key `tree_node::red_flag_key`]]
[def _red_flag_key_ [link tree_node.reference.red_black_flag_key tree_node::red_flag_key]]
[def __black_flag_key__ [link tree_node.reference.red_black_flag_key `tree_node::black_flag_key`]]
[def _black_flag_key_ [link tree_node.reference.red_black_flag_key tree_node::black_flag_key]]
[def __get_properties__ [link tree_node.reference.get_properties `tree_node::get_properties()`]]
[def _get_properties_ [link tree_node.reference.get_properties tree_node::get_properties]]
[def __result_of__get_properties__ [link tree_node.reference.get_properties.result_of `tree_node::result_of::get_properties`]]
[def _result_of__get_properties_ [link tree_node.reference.get_properties.result_of tree_node::result_of::get_properties]]
[def __has_key__ [link tree_node.reference.has_key `tree_node::has_key()`]]
[def _has_key_ [link tree_node.reference.has_key tree_node::has_key]]
[def __result_of__has_key__ [link tree_node.reference.has_key.result_of `tree_node::result_of::has_key`]]
[def _result_of__has_key_ [link tree_node.reference.has_key.result_of tree_node::result_of::has_key]]
[def __result_of__get_keys__ [link tree_node.reference.get_keys `tree_node::result_of::get_keys`]]
[def _result_of__get_keys_ [link tree_node.reference.get_keys tree_node::result_of::get_keys]]
[def __result_of__at_key__ [link tree_node.reference.at_key `tree_node::result_of::at_key`]]
[def _result_of__at_key_ [link tree_node.reference.at_key tree_node::result_of::at_key]]
[def __result_of__value_at_key__ [link tree_node.reference.value_at_key `tree_node::result_of::value_at_key`]]
[def _result_of__value_at_key_ [link tree_node.reference.value_at_key tree_node::value_at_key]]
[def __advance_binary__ [link tree_node.reference.advance_binary `tree_node::advance_binary()`]]
[def _advance_binary_ [link tree_node.reference.advance_binary tree_node::advance_binary]]
[def __binary_index_of__ [link tree_node.reference.binary_index_of `tree_node::binary_index_of()`]]
[def _binary_index_of_ [link tree_node.reference.binary_index_of tree_node::binary_index_of]]
[def __binary_descendant__ [link tree_node.reference.binary_descendant `tree_node::binary_descendant()`]]
[def _binary_descendant_ [link tree_node.reference.binary_descendant tree_node::binary_descendant]]
[def __binary_descendant_at_index__ [link tree_node.reference.binary_descendant_at_index `tree_node::binary_descendant_at_index()`]]
[def _binary_descendant_at_index_ [link tree_node.reference.binary_descendant_at_index tree_node::binary_descendant_at_index]]
[def __binary_lower_bound__ [link tree_node.reference.binary_lower_bound `tree_node::binary_lower_bound()`]]
[def _binary_lower_bound_ [link tree_node.reference.binary_lower_bound tree_node::binary_lower_bound]]
[def __binary_upper_bound__ [link tree_node.reference.binary_upper_bound `tree_node::binary_upper_bound()`]]
[def _binary_upper_bound_ [link tree_node.reference.binary_upper_bound tree_node::binary_upper_bound]]
[def __traversal_state__ [link tree_node.reference.traversal_state `tree_node::traversal_state`]]
[def _traversal_state_ [link tree_node.reference.traversal_state tree_node::traversal_state]]
[def __dereference_iterator__ [link tree_node.reference.dereference_iterator `tree_node::dereference_iterator()`]]
[def _dereference_iterator_ [link tree_node.reference.dereference_iterator tree_node::dereference_iterator]]
[def __result_of__dereference_iterator__ [link tree_node.reference.dereference_iterator.result_of `tree_node::result_of::dereference_iterator`]]
[def _result_of__dereference_iterator_ [link tree_node.reference.dereference_iterator.result_of tree_node::result_of::dereference_iterator]]
[def __breadth_first_iterator__ [link tree_node.reference.breadth_first_iterator `tree_node::breadth_first_iterator`]]
[def _breadth_first_iterator_ [link tree_node.reference.breadth_first_iterator tree_node::breadth_first_iterator]]
[def __breadth_first_descendant_iterator__ [link tree_node.reference.breadth_first_desc_iter `tree_node::breadth_first_descendant_iterator`]]
[def _breadth_first_descendant_iterator_ [link tree_node.reference.breadth_first_desc_iter tree_node::breadth_first_descendant_iterator]]
[def __pre_order_iterator__ [link tree_node.reference.pre_order_iterator `tree_node::pre_order_iterator`]]
[def _pre_order_iterator_ [link tree_node.reference.pre_order_iterator tree_node::pre_order_iterator]]
[def __pre_order_descendant_iterator__ [link tree_node.reference.pre_order_desc_iter `tree_node::pre_order_descendant_iterator`]]
[def _pre_order_descendant_iterator_ [link tree_node.reference.pre_order_desc_iter tree_node::pre_order_descendant_iterator]]
[def __post_order_iterator__ [link tree_node.reference.post_order_iterator `tree_node::post_order_iterator`]]
[def _post_order_iterator_ [link tree_node.reference.post_order_iterator tree_node::post_order_iterator]]
[def __post_order_descendant_iterator__ [link tree_node.reference.post_order_desc_iter `tree_node::post_order_descendant_iterator`]]
[def _post_order_descendant_iterator_ [link tree_node.reference.post_order_desc_iter tree_node::post_order_descendant_iterator]]
[def __in_order_iterator__ [link tree_node.reference.in_order_iterator `tree_node::in_order_iterator`]]
[def _in_order_iterator_ [link tree_node.reference.in_order_iterator tree_node::in_order_iterator]]
[def __depth_first_iterator__ [link tree_node.reference.depth_first_iterator `tree_node::depth_first_iterator`]]
[def _depth_first_iterator_ [link tree_node.reference.depth_first_iterator tree_node::depth_first_iterator]]
[def __depth_first_descendant_iterator__ [link tree_node.reference.depth_first_desc_iter `tree_node::depth_first_descendant_iterator`]]
[def _depth_first_descendant_iterator_ [link tree_node.reference.depth_first_desc_iter tree_node::depth_first_descendant_iterator]]
[def __tree_node_base__ [link tree_node.reference.tree_node_base `tree_node::tree_node_base`]]
[def _tree_node_base_ [link tree_node.reference.tree_node_base tree_node::tree_node_base]]
[def __binary_node_base__ [link tree_node.reference.binary_node_base `tree_node::binary_node_base`]]
[def _binary_node_base_ [link tree_node.reference.binary_node_base tree_node::binary_node_base]]
[def __binary_node_base_gen__ [link tree_node.reference.binary_node_base_gen `tree_node::binary_node_base_gen`]]
[def _binary_node_base_gen_ [link tree_node.reference.binary_node_base_gen tree_node::binary_node_base_gen]]
[def __binary_node__ [link tree_node.reference.binary_node `tree_node::binary_node`]]
[def _binary_node_ [link tree_node.reference.binary_node tree_node::binary_node]]
[def __binary_node_gen__ [link tree_node.reference.binary_node_gen `tree_node::binary_node_gen`]]
[def _binary_node_gen_ [link tree_node.reference.binary_node_gen tree_node::binary_node_gen]]
[def __nary_node_base__ [link tree_node.reference.nary_node_base `tree_node::nary_node_base`]]
[def _nary_node_base_ [link tree_node.reference.nary_node_base tree_node::nary_node_base]]
[def __nary_node_base_gen__ [link tree_node.reference.nary_node_base_gen `tree_node::nary_node_base_gen`]]
[def _nary_node_base_gen_ [link tree_node.reference.nary_node_base_gen tree_node::nary_node_base_gen]]
[def __nary_node__ [link tree_node.reference.nary_node `tree_node::nary_node`]]
[def _nary_node_ [link tree_node.reference.nary_node tree_node::nary_node]]
[def __nary_node_gen__ [link tree_node.reference.nary_node_gen `tree_node::nary_node_gen`]]
[def _nary_node_gen_ [link tree_node.reference.nary_node_gen tree_node::nary_node_gen]]
[def __associative_node_base__ [link tree_node.reference.associative_node_base `tree_node::associative_node_base`]]
[def _associative_node_base_ [link tree_node.reference.associative_node_base tree_node::associative_node_base]]
[def __associative_node_base_gen__ [link tree_node.reference.assoc_node_base_gen `tree_node::associative_node_base_gen`]]
[def _associative_node_base_gen_ [link tree_node.reference.assoc_node_base_gen tree_node::associative_node_base_gen]]
[def __associative_node__ [link tree_node.reference.associative_node `tree_node::associative_node`]]
[def _associative_node_ [link tree_node.reference.associative_node tree_node::associative_node]]
[def __associative_node_gen__ [link tree_node.reference.associative_node_gen `tree_node::associative_node_gen`]]
[def _associative_node_gen_ [link tree_node.reference.associative_node_gen tree_node::associative_node_gen]]
[def __tree_node_with_accumulation_base__ [link tree_node.reference.with_accumulation_base `tree_node::with_accumulation_base`]]
[def _tree_node_with_accumulation_base_ [link tree_node.reference.with_accumulation_base tree_node::with_accumulation_base]]
[def __tree_node_with_accumulation_base_gen__ [link tree_node.reference.with_accumulation_base_gen `tree_node::with_accumulation_base_gen`]]
[def _tree_node_with_accumulation_base_gen_ [link tree_node.reference.with_accumulation_base_gen tree_node::with_accumulation_base_gen]]
[def __tree_node_with_accumulation__ [link tree_node.reference.with_accumulation `tree_node::with_accumulation`]]
[def _tree_node_with_accumulation_ [link tree_node.reference.with_accumulation tree_node::with_accumulation]]
[def __tree_node_with_accumulation_gen__ [link tree_node.reference.with_accumulation_gen `tree_node::with_accumulation_gen`]]
[def _tree_node_with_accumulation_gen_ [link tree_node.reference.with_accumulation_gen tree_node::with_accumulation_gen]]
[def __tree_node_with_count_base__ [link tree_node.reference.with_count_base `tree_node::with_count_base`]]
[def _tree_node_with_count_base_ [link tree_node.reference.with_count_base tree_node::with_count_base]]
[def __tree_node_with_count_base_gen__ [link tree_node.reference.with_count_base_gen `tree_node::with_count_base_gen`]]
[def _tree_node_with_count_base_gen_ [link tree_node.reference.with_count_base_gen tree_node::with_count_base_gen]]
[def __tree_node_with_count__ [link tree_node.reference.with_count `tree_node::with_count`]]
[def _tree_node_with_count_ [link tree_node.reference.with_count tree_node::with_count]]
[def __tree_node_with_count_gen__ [link tree_node.reference.with_count_gen `tree_node::with_count_gen`]]
[def _tree_node_with_count_gen_ [link tree_node.reference.with_count_gen tree_node::with_count_gen]]
[def __tree_node_with_height_base__ [link tree_node.reference.with_height_base `tree_node::with_height_base`]]
[def _tree_node_with_height_base_ [link tree_node.reference.with_height_base tree_node::with_height_base]]
[def __tree_node_with_height_base_gen__ [link tree_node.reference.with_height_base_gen `tree_node::with_height_base_gen`]]
[def _tree_node_with_height_base_gen_ [link tree_node.reference.with_height_base_gen tree_node::with_height_base_gen]]
[def __tree_node_with_height__ [link tree_node.reference.with_height `tree_node::with_height`]]
[def _tree_node_with_height_ [link tree_node.reference.with_height tree_node::with_height]]
[def __tree_node_with_height_gen__ [link tree_node.reference.with_height_gen `tree_node::with_height_gen`]]
[def _tree_node_with_height_gen_ [link tree_node.reference.with_height_gen tree_node::with_height_gen]]
[def __tree_node_with_position_base__ [link tree_node.reference.with_position_base `tree_node::with_position_base`]]
[def _tree_node_with_position_base_ [link tree_node.reference.with_position_base tree_node::with_position_base]]
[def __tree_node_with_position_base_gen__ [link tree_node.reference.with_position_base_gen `tree_node::with_position_base_gen`]]
[def _tree_node_with_position_base_gen_ [link tree_node.reference.with_position_base_gen tree_node::with_position_base_gen]]
[def __tree_node_with_position__ [link tree_node.reference.with_position `tree_node::with_position`]]
[def _tree_node_with_position_ [link tree_node.reference.with_position tree_node::with_position]]
[def __tree_node_with_position_gen__ [link tree_node.reference.with_position_gen `tree_node::with_position_gen`]]
[def _tree_node_with_position_gen_ [link tree_node.reference.with_position_gen tree_node::with_position_gen]]
[def __tree_node_with_red_black_flag_base__ [link tree_node.reference.with_rb_flag_base `tree_node::with_red_black_flag_base`]]
[def _tree_node_with_red_black_flag_base_ [link tree_node.reference.with_rb_flag_base tree_node::with_red_black_flag_base]]
[def __tree_node_with_red_black_flag_base_gen__ [link tree_node.reference.with_rb_flag_base_gen `tree_node::with_red_black_flag_base_gen`]]
[def _tree_node_with_red_black_flag_base_gen_ [link tree_node.reference.with_rb_flag_base_gen tree_node::with_red_black_flag_base_gen]]
[def __tree_node_with_red_black_flag__ [link tree_node.reference.with_rb_flag `tree_node::with_red_black_flag`]]
[def _tree_node_with_red_black_flag_ [link tree_node.reference.with_rb_flag tree_node::with_red_black_flag]]
[def __tree_node_with_red_black_flag_gen__ [link tree_node.reference.with_rb_flag_gen `tree_node::with_red_black_flag_gen`]]
[def _tree_node_with_red_black_flag_gen_ [link tree_node.reference.with_rb_flag_gen tree_node::with_red_black_flag_gen]]
[def __red_black_balancer__ [link tree_node.reference.red_black_balancer `tree_node::red_black_balancer`]]
[def _red_black_balancer_ [link tree_node.reference.red_black_balancer tree_node::red_black_balancer]]
[def __avl_balancer__ [link tree_node.reference.avl_balancer `tree_node::adelson_velskii_landis_balancer`]]
[def _avl_balancer_ [link tree_node.reference.avl_balancer tree_node::adelson_velskii_landis_balancer]]
[def __binode_container__ [link tree_node.reference.binode_container `tree_node::binode_container`]]
[def _binode_container_ [link tree_node.reference.binode_container tree_node::binode_container]]
[def __binode_associative_container__ [link tree_node.reference.binode_assoc_container `tree_node::binode_associative_container`]]
[def _binode_associative_container_ [link tree_node.reference.binode_assoc_container tree_node::binode_associative_container]]
[def __binode_set__ [link tree_node.reference.binode_set `tree_node::binode_set`]]
[def _binode_set_ [link tree_node.reference.binode_set tree_node::binode_set]]
[def __binode_map__ [link tree_node.reference.binode_map `tree_node::binode_map`]]
[def _binode_map_ [link tree_node.reference.binode_map tree_node::binode_map]]
[def __binode_multiset__ [link tree_node.reference.binode_multiset `tree_node::binode_multiset`]]
[def _binode_multiset_ [link tree_node.reference.binode_multiset tree_node::binode_multiset]]
[def __binode_multimap__ [link tree_node.reference.binode_multimap `tree_node::binode_multimap`]]
[def _binode_multimap_ [link tree_node.reference.binode_multimap tree_node::binode_multimap]]
[def __TREE_NODE_CAN_USE_FUSION__ [link tree_node.reference.can_use_fusion `BOOST_TREE_NODE_CAN_USE_FUSION`]]
[def __TREE_NODE_CAN_USE_FUSION_WITH_TYPEOF__ [link tree_node.reference.can_use_fusion_with_typeof `BOOST_TREE_NODE_CAN_USE_FUSION_WITH_TYPEOF`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_FWD_DECL__ [link tree_node.reference.emplace_ctor_fwd_decl `BOOST_TREE_NODE_EMPLACEMENT_CTOR_FWD_DECL`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_INLINE_HEADER__ [link tree_node.reference.emplace_ctor_inline_hdr `BOOST_TREE_NODE_EMPLACEMENT_CTOR_INLINE_HEADER`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_INLINE_DEF__ [link tree_node.reference.emplace_ctor_inline_def `BOOST_TREE_NODE_EMPLACEMENT_CTOR_INLINE_DEF`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_FWD_DECL__ [link tree_node.reference.emplace_ctor_w_alloc_f_dcl `BOOST_TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_FWD_DECL`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_INLINE_HEADER__ [link tree_node.reference.emplace_ctor_w_alloc_i_hdr `BOOST_TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_INLINE_HEADER`]]
[def __TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_INLINE_DEF__ [link tree_node.reference.emplace_ctor_w_alloc_i_def `BOOST_TREE_NODE_EMPLACEMENT_CTOR_W_ALLOC_INLINE_DEF`]]
[def __TREE_NODE_COPYABLE_AND_MOVABLE__ [link tree_node.reference.copyable_and_movable `BOOST_TREE_NODE_COPYABLE_AND_MOVABLE`]]
[def __TREE_NODE_CONTAINER_DERIVED_BODY__ [link tree_node.reference.container_derived_body `BOOST_TREE_NODE_CONTAINER_DERIVED_BODY`]]
[def __TREE_NODE_ASSOCIATIVE_CONTAINER_DERIVED_BODY__ [link tree_node.reference.assoc_cont_derived_body `BOOST_TREE_NODE_ASSOCIATIVE_CONTAINER_DERIVED_BODY`]]

[/ Autogenerate concept and reference documentation directly from code.]
[/ Bypass Doxygen.]
[import ../../../boost/tree_node/key/data.hpp]
[import ../../../boost/tree_node/key/accumulation.hpp]
[import ../../../boost/tree_node/key/count.hpp]
[import ../../../boost/tree_node/key/height.hpp]
[import ../../../boost/tree_node/key/position.hpp]
[import ../../../boost/tree_node/key/red_black_flag.hpp]
[import ../../../boost/tree_node/intrinsic/get_properties.hpp]
[import ../../../boost/tree_node/intrinsic/has_key.hpp]
[import ../../../boost/tree_node/intrinsic/get_keys.hpp]
[import ../../../boost/tree_node/intrinsic/at_key.hpp]
[import ../../../boost/tree_node/intrinsic/value_at_key.hpp]
[import ../../../boost/tree_node/algorithm/advance_binary.hpp]
[import ../../../boost/tree_node/algorithm/binary_index_of.hpp]
[import ../../../boost/tree_node/algorithm/binary_descendant.hpp]
[import ../../../boost/tree_node/algorithm/binary_descendant_at_index.hpp]
[import ../../../boost/tree_node/algorithm/binary_lower_bound.hpp]
[import ../../../boost/tree_node/algorithm/binary_upper_bound.hpp]
[import ../../../boost/tree_node/traversal_state.hpp]
[import ../../../boost/tree_node/iterator/dereference.hpp]
[import ../../../boost/tree_node/iterator/breadth_first.hpp]
[import ../../../boost/tree_node/iterator/breadth_first_descendant.hpp]
[import ../../../boost/tree_node/iterator/pre_order.hpp]
[import ../../../boost/tree_node/iterator/pre_order_descendant.hpp]
[import ../../../boost/tree_node/iterator/post_order.hpp]
[import ../../../boost/tree_node/iterator/post_order_descendant.hpp]
[import ../../../boost/tree_node/iterator/in_order.hpp]
[import ../../../boost/tree_node/iterator/depth_first.hpp]
[import ../../../boost/tree_node/iterator/depth_first_descendant.hpp]
[import ../../../boost/tree_node/base.hpp]
[import ../../../boost/tree_node/preprocessor.hpp]
[import ../../../boost/tree_node/binary_node_fwd.hpp]
[import ../../../boost/tree_node/binary_node.hpp]
[import ../../../boost/tree_node/nary_node_fwd.hpp]
[import ../../../boost/tree_node/nary_node.hpp]
[import ../../../boost/tree_node/associative_node_fwd.hpp]
[import ../../../boost/tree_node/associative_node.hpp]
[import ../../../boost/tree_node/with_accumulation_fwd.hpp]
[import ../../../boost/tree_node/with_accumulation.hpp]
[import ../../../boost/tree_node/with_count_fwd.hpp]
[import ../../../boost/tree_node/with_count.hpp]
[import ../../../boost/tree_node/with_height_fwd.hpp]
[import ../../../boost/tree_node/with_height.hpp]
[import ../../../boost/tree_node/with_position_fwd.hpp]
[import ../../../boost/tree_node/with_position.hpp]
[import ../../../boost/tree_node/with_red_black_flag_fwd.hpp]
[import ../../../boost/tree_node/with_red_black_flag.hpp]
[import ../../../boost/tree_node/balancer/red_black.hpp]
[import ../../../boost/tree_node/balancer/adelson_velskii_landis.hpp]
[import ../../../boost/tree_node/container/binode_fwd.hpp]
[import ../../../boost/tree_node/container/binode.hpp]
[import ../../../boost/tree_node/container/binode_associative_fwd.hpp]
[import ../../../boost/tree_node/container/binode_associative.hpp]

[/ index.html Start]

[heading Rationale]
Over the course of reimplementing a decision tree learning algorithm to use
modern C++ techniques, the need for a generic tree library became evident.  The
in-house data structures in use at the time were undergoing modification as
well.  It was found that the core operations occurred at the node level rather
than at the tree level, which stored only high-level algorithms.  Efforts went
underway to retrofit these algorithms to use iterators and to further factor
out generic data structures from the decision tree components and other
application-specific utilities.  This library represents the Boostified
culmination of these efforts.

[important
    This library depends on __Boost_ContainerGen__, which is not yet a part
    of Boost.  For now, you must perform a Subversion checkout from the
    __SVN_Trac__.
]

[/ index.html End]

[include concepts.qbk]
[include reference.qbk]
[include changelog.qbk]

