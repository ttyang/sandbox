[/=============================================================================
    Copyright (C) 2013 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:get_properties `get_properties()`]

[section Function Synopsis]
[reference__get_properties]
[endsect]

[section Function Description]
This function returns a heterogeneous list of key types--each of which, when
passed as a template argument to __has_key__ while the __Tree_Node__ object is
passed by reference, will evaluate to `true`--each paired with the value
returned through key-value access of the specified node.
[endsect]

[section:result_of Return Type Metafunction Synopsis]
[reference__result_of__get_properties]
[endsect]

[section Return Type Metafunction Description]
Let `Node` be a (possibly `const`-qualified) __Tree_Node__ model.

``
    typedef result_of::get_properties<Node>::type r;
``

[*Return type:] A __Fusion_Sequence__ of __half_runtime_pairs__ of key types
and their matching value types as defined by the specified node type.
[endsect]

[section:definition Where defined]
``
#include <__get_properties__header__>
``
[endsect]

[endsect] [/ get_properties]

