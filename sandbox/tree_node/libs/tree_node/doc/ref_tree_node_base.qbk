[/=============================================================================
    Copyright (C) 2011 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:tree_node_base `tree_node_base`]

[section Synopsis]
[reference__tree_node_base]
[endsect]

[section Description]
TODO.
[endsect]

[section:definition Where defined]
``
#include <__boost_tree_node_base_hpp__>
``
[endsect]

[section:tpl_param Template Parameters]
[table
    [[Parameter][Description][Requirements][Default]]
    [
        [`Derived`]
        [The most descendant type that will inherit from this one.]
        []
        []
    ]
]
[endsect]

[section:public_bases Public Base Classes]
None.
[endsect]

[section Members]
[table
    [[Name][Expression][Scope][Description]]
    [
        [Pointer type]
        [`pointer`]
        [`public`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Pointer-to-const type]
        [`const_pointer`]
        [`public`]
        [Defined by the __Tree_Node__ concept.]
    ]
    [
        [Shallow update implementation]
        [`void shallow_update_impl();`]
        [`protected`]
        [
            Subclass types should override this method if they hold data that
            will change if the tree node and its children are structurally
            modified.  Does nothing by default.
        ]
    ]
    [
        [Deep update implementation]
        [`void deep_update_impl();`]
        [`protected`]
        [
            Subclass types should override this method if they hold data that
            will change if the tree node and all its descendants (not just its
            children) are structurally modified.  Does nothing by default.
        ]
    ]
    [
        [Shallow update]
        [`void shallow_update_derived();`]
        [`protected`]
        [
            Subclass types should invoke this method after the tree node and
            its children are structurally modified.  Calls the corresponding
            implementation method.
        ]
    ]
    [
        [Deep update]
        [`void deep_update_derived();`]
        [`protected`]
        [
            Subclass types should invoke this method after the tree node and
            all its descendants (not just its children) are structurally
            modified.  Calls the corresponding implementation method.
        ]
    ]
]
[endsect] [/ Members]

[endsect] [/ tree_node_base]

