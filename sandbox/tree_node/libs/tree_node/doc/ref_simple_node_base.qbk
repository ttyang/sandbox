[/=============================================================================
    Copyright (C) 2011 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:simple_node_base `simple_node_base`]

[section Synopsis]
[reference__simple_node_base]
[endsect]

[section Description]
The __simple_node__ class template inherits its functionality from this
class template.  They differ only with regard to template parameters: the
__simple_node__ class template is meant to be used directly as a data
structure, while `simple_node_base` is more suitable as a base class
template from which __Tree_Node__ adaptor class templates can derive via
the __simple_node_gen__ __Type_Generator__.
[endsect]

[section:definition Where defined]
``
#include <__boost_tree_node_simple_node_hpp__>
``
[endsect]

[section:tpl_param Template Parameters]
[table
    [[Parameter][Description][Requirements][Default]]
    [
        [`Derived`]
        [The most descendant type that will inherit from this one.]
        []
        []
    ]
    [
        [`T`]
        [The data type.]
        []
        []
    ]
    [
        [`Selector`]
        [
            The type that determines the internal container types whose value
            types are the same as the pointer type.
        ]
        [
            It must be a type for which __container_gen__ returns a valid
            container.
        ]
        []
    ]
]
[endsect]

[section:model_of Model of]

  * __N_ary_Tree_Node__
  * __Base_Tree_Node__
  * __Cloneable_Tree_Node__

[endsect]

[section:public_bases Public Base Classes]
__shared_tree_node_base__
[endsect]

[section Members]
[table
    [[Name][Expression][Scope][Where defined]]
    [
        [Data type]
        [`typename traits::data_type`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Pointer type]
        [`pointer`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Pointer-to-const type]
        [`const_pointer`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Child iterator type]
        [`child_iterator`]
        [`public`]
        [__Non_Associative_Tree_Node__]
    ]
    [
        [Immutable child iterator type]
        [`const_child_iterator`]
        [`public`]
        [__Non_Associative_Tree_Node__]
    ]
    [
        [Default constructor]
        [`simple_node_base();`]
        [`protected`]
        [__Base_Tree_Node__]
    ]
    [
        [Constructor with data]
        [`explicit simple_node_base(typename traits::data_type const&);`]
        [`protected`]
        [__Base_Tree_Node__]
    ]
    [
        [Clone]
        [`pointer clone() const;`]
        [`public`]
        [__Cloneable_Tree_Node__]
    ]
    [
        [Data access]
        [`typename traits::data_type const& get_data() const;`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Data access]
        [`typename traits::data_type& get_data();`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Parent access]
        [`const_pointer get_parent() const;`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Parent access]
        [`pointer get_parent();`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Child creation with data]
        [`pointer add_child(typename traits::data_type const&);`]
        [`public`]
        [__N_ary_Tree_Node__]
    ]
    [
        [Child creation]
        [`pointer add_child();`]
        [`public`]
        [__N_ary_Tree_Node__]
    ]
    [
        [Child copy creation]
        [`pointer add_child_copy(const_pointer const&);`]
        [`public`]
        [__N_ary_Tree_Node__]
    ]
    [
        [Children range begin access]
        [`const_child_iterator get_child_begin() const;`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Children range begin access]
        [`child_iterator get_child_begin();`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Children range past-the-end access]
        [`const_child_iterator get_child_end() const;`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Children range past-the-end access]
        [`child_iterator get_child_end();`]
        [`public`]
        [__Tree_Node__]
    ]
    [
        [Remove all children]
        [`void remove_all_children();`]
        [`public`]
        [__Tree_Node__]
    ]
]
[endsect] [/ Members]

[endsect] [/ simple_node_base]

